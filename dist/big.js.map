{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///big.js","webpack:///webpack/bootstrap d6177b2f39741eb313c3","webpack:///./src/index.ts","webpack:///./src/util/intUtils.ts","webpack:///./src/functional/copy.ts","webpack:///./src/functional/compare.ts","webpack:///./src/globals.ts","webpack:///./src/util/numUtils.ts","webpack:///./src/algorithm/subtraction.ts","webpack:///./src/util/arrayUtils.ts","webpack:///./src/algorithm/addition.ts","webpack:///./src/functional/negate.ts","webpack:///./src/algorithm/compare.ts","webpack:///./src/algorithm/decrement.ts","webpack:///./src/algorithm/halve.ts","webpack:///./src/algorithm/increment.ts","webpack:///./src/algorithm/karatsubaMultiplication.ts","webpack:///./src/functional/add.ts","webpack:///./src/functional/decrement.ts","webpack:///./src/functional/double.ts","webpack:///./src/functional/isEven.ts","webpack:///./src/functional/setBase.ts","webpack:///./src/functional/square.ts","webpack:///./src/functional/subtract.ts","webpack:///./src/algorithm/basicDivision.ts","webpack:///./src/algorithm/double.ts","webpack:///./src/algorithm/isEven.ts","webpack:///./src/algorithm/karatsubaSquare.ts","webpack:///./src/algorithm/reverseAddition.ts","webpack:///./src/algorithm/singleDigitMultiplication.ts","webpack:///./src/algorithm/steinGCD.ts","webpack:///./src/functional/abs.ts","webpack:///./src/functional/divideAndRemainder.ts","webpack:///./src/functional/gcd.ts","webpack:///./src/functional/halve.ts","webpack:///./src/functional/increment.ts","webpack:///./src/functional/isInteger.ts","webpack:///./src/functional/lcm.ts","webpack:///./src/functional/max.ts","webpack:///./src/functional/min.ts","webpack:///./src/functional/multiply.ts","webpack:///./src/functional/pow.ts","webpack:///./src/functional/signum.ts","webpack:///./src/functional/toInteger.ts","webpack:///./src/functional/toString.ts","webpack:///./src/algorithm/exponentiation.ts","webpack:///./src/algorithm/lcm.ts","webpack:///./src/algorithm/longMultiplication.ts","webpack:///./src/algorithm/longSquare.ts","webpack:///./src/algorithm/reverseSubtraction.ts","webpack:///./src/algorithm/setBase.ts","webpack:///./src/algorithm/singleDigitDivision.ts","webpack:///./src/functional/clone.ts","webpack:///./src/oop/bigInt.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","globals_1","__globals__","Globals","abs_1","abs","add_1","add","clone_1","clone","compare_1","compare","copy_1","copy","decrement_1","decrement","divideAndRemainder_1","divideAndRemainder","double_1","double","gcd_1","gcd","halve_1","halve","increment_1","increment","isEven_1","isEven","isInteger_1","isInteger","lcm_1","lcm","max_1","max","min_1","min","multiply_1","multiply","negate_1","negate","pow_1","pow","setBase_1","setBase","signum_1","signum","square_1","square","subtract_1","subtract","toInteger_1","toInteger","toString_1","toString","bigInt_1","Int","BigInt","tryMutable","a","b","DEFAULT_IS_MUTABLE","assign","base","digits","precision","isNegative","slice","changeBase","setOne","setZero","intUtils_1","d","Math","log","ceil","e","MIN_BASE","MAX_BASE","MAX_PRECISION","DEFAULT_BASE","DEFAULT_CIPHER","Object","freeze","strToDigits","trim","length","TypeError","replace","match","f","Array","g","h","zero","subtraction","i","j","k","unsafeShiftUp","safeShiftUp","printArr","map","join","addition","karatsubaMultiplication","numUtils_1","l","arrayUtils_1","addition_1","n","o","subtraction_1","reverseAddition_1","reverseAddition","q","RangeError","longSquare_1","longSquare","karatsubaSquare_1","karatsubaSquare","reverseSubtraction_1","reverseSubtraction","basicDivision","s","divThreeHalvesByTwo","t","singleDigitMultiplication_1","singleDigitMultiplication","steinGCD","EvalError","singleDigitDivision_1","singleDigitDivision","basicDivision_1","steinGCD_1","hasOwnProperty","longMultiplication_1","longMultiplication","karatsubaMultiplication_1","exponentiation_1","exponentiation","reverse","r","defineProperty","get","enumerable","configurable","prototype","toBigInt","compareTo","divide","ZERO","getBase","half","isBigInt","isOdd","minusminus","plusplus","remainder"],"mappings":"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","file":"big.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Big\"] = factory();\n\telse\n\t\troot[\"Big\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Big\"] = factory();\n\telse\n\t\troot[\"Big\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var globals_1=__webpack_require__(4);exports.__globals__=globals_1.Globals;var abs_1=__webpack_require__(29);exports.abs=abs_1.abs;var add_1=__webpack_require__(15);exports.add=add_1.add;var clone_1=__webpack_require__(50);exports.clone=clone_1.clone;var compare_1=__webpack_require__(3);exports.compare=compare_1.compare;var copy_1=__webpack_require__(2);exports.copy=copy_1.copy;var decrement_1=__webpack_require__(16);exports.decrement=decrement_1.decrement;var divideAndRemainder_1=__webpack_require__(30);exports.divideAndRemainder=divideAndRemainder_1.divideAndRemainder;var double_1=__webpack_require__(17);exports.double=double_1.double;var gcd_1=__webpack_require__(31);exports.gcd=gcd_1.gcd;var halve_1=__webpack_require__(32);exports.halve=halve_1.halve;var increment_1=__webpack_require__(33);exports.increment=increment_1.increment;var isEven_1=__webpack_require__(18);exports.isEven=isEven_1.isEven;var isInteger_1=__webpack_require__(34);exports.isInteger=isInteger_1.isInteger;var lcm_1=__webpack_require__(35);exports.lcm=lcm_1.lcm;var max_1=__webpack_require__(36);exports.max=max_1.max;var min_1=__webpack_require__(37);exports.min=min_1.min;var multiply_1=__webpack_require__(38);exports.multiply=multiply_1.multiply;var negate_1=__webpack_require__(9);exports.negate=negate_1.negate;var pow_1=__webpack_require__(39);exports.pow=pow_1.pow;var setBase_1=__webpack_require__(19);exports.setBase=setBase_1.setBase;var signum_1=__webpack_require__(40);exports.signum=signum_1.signum;var square_1=__webpack_require__(20);exports.square=square_1.square;var subtract_1=__webpack_require__(21);exports.subtract=subtract_1.subtract;var toInteger_1=__webpack_require__(41);exports.toInteger=toInteger_1.toInteger;var toString_1=__webpack_require__(42);exports.toString=toString_1.toString;var bigInt_1=__webpack_require__(51);exports.Int=bigInt_1.BigInt;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var globals_1=__webpack_require__(4),setBase_1=__webpack_require__(48);function tryMutable(a,b){return void 0===b&&(b=globals_1.Globals.DEFAULT_IS_MUTABLE),b?a:copy({},a)}exports.tryMutable=tryMutable;function assign(a,b){return a.base=b.base,a.digits=b.digits,a.precision=b.precision,a.isNegative=b.isNegative,a}exports.assign=assign;function copy(a,b){var c=assign(a,b);return c.digits=c.digits.slice(0,c.precision),c}exports.copy=copy;function changeBase(a,b){return c=setBase_1.setBase(a.digits,0,a.precision,a.base,b),a.digits=c[0],a.precision=c[1],a.base=b,a;var c}exports.changeBase=changeBase;function setOne(a){return a.precision=1,a.digits=[1],a.isNegative=!1,a}exports.setOne=setOne;function setZero(a){return a.precision=0,a.digits=[],a.isNegative=!1,a}exports.setZero=setZero;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var intUtils_1=__webpack_require__(1);function copy(a,b){return intUtils_1.copy(a,b)}exports.copy=copy;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var intUtils_1=__webpack_require__(1),compare_1=__webpack_require__(10);function compare(a,b){if(a===b)return 0;if(a.isNegative!==b.isNegative)return a.isNegative?-1:1;var c=a.base;if(a.base!==b.base){var d=Math.log(a.base)/Math.log(b.base);if(Math.ceil(a.precision*d)>b.base)return 1;if(Math.ceil((a.precision+1)*d)<b.precision)return-1;intUtils_1.changeBase(a,b.base)}var e=compare_1.compare(a.digits,0,a.precision,b.digits,0,b.precision);return intUtils_1.changeBase(a,c),e}exports.compare=compare;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';var Globals;(function(a){a.MIN_BASE=2,a.MAX_BASE=94906265,a.MAX_PRECISION=4294967295,a.DEFAULT_IS_MUTABLE=!1,a.DEFAULT_BASE=94906264,a.DEFAULT_CIPHER=Object.freeze(['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'])})(Globals=exports.Globals||(exports.Globals={}));\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function max(c,d){return c<d?d:c}exports.max=max;function min(c,d){return c>d?d:c}exports.min=min;function strToDigits(c){if(c=c.trim(),1>c.length)throw new TypeError(\"NaN\");var d=\"-\"===c[0];if(c=c.replace(/^[-+]?0*/,\"\").replace(/\\.[0-9]+$/,\"\"),c.match(/[^\\d]/))throw new TypeError(\"NaN\");var e=c.length;if(0===e)return[[],!1];var f=Array(e);for(var g=0,h=e;0<h;++g)f[g]=0|c[--h];return[f,d]}exports.strToDigits=strToDigits;function zero(c,d,e){for(;d<e;)c[d++]=0}exports.zero=zero;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var decrement_1=__webpack_require__(11);function subtraction(b,c,d,e,f,g,h){for(var i=c,j=0;f<g;){var k=b[i]-j-e[f++];0>k?(j=1,k+=h):j=0,b[i++]=k}if(0<j)return decrement_1.decrement(b,i,d,h);if(i===d){for(;i-->c&&0===b[i];);d=i+1}return d}exports.subtraction=subtraction;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function unsafeShiftUp(a,b,c,d){for(var e=b+d;b<c;a[e++]=a[b++]);}exports.unsafeShiftUp=unsafeShiftUp;function safeShiftUp(a,b,c,d){for(var e=c+d;c>b;a[--e]=a[--c]);}exports.safeShiftUp=safeShiftUp;function copy(a,b,c,d,e){for(;d<e;)a[b++]=c[d++]}exports.copy=copy;function printArr(a,b,c,d,e){return void 0===d&&(d=b),void 0===e&&(e=c),a=a.map(function(f){return null==f||f!==f?f+\"\":f}),\"[\"+a.slice(b,d).join(\", \")+\"|\"+a.slice(d,e).join(\", \")+\"|\"+a.slice(e,c).join(\", \")+\"]\"}exports.printArr=printArr;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var increment_1=__webpack_require__(13);function addition(a,b,c,d,e,f,g){for(var h=0;e<f;){var i=a[b]+d[e++]+h;i<g?h=0:(h=1,i-=g),a[b++]=i}return 0<h?increment_1.increment(a,b,c,g):c}exports.addition=addition;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var intUtils_1=__webpack_require__(1);function negate(a,b){return a=intUtils_1.tryMutable(a,b),a.isNegative=0<a.precision&&!a.isNegative,a}exports.negate=negate;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function compare(a,b,c,e,f,g){var h=c-b-g+f;if(0!==h)return 0>h?-1:1;for(;c>b;)if(a[--c]!==e[--g])return a[c]<e[g]?-1:1;return 0}exports.compare=compare;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function decrement(a,b,c,d){for(;0===a[b];a[b++]=d-1);return--a[b],b+1===c&&0===a[b]?c-1:c}exports.decrement=decrement;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function halve(a,b,c,d){var e=0;for(var f=c;f-->b;a[f]>>>=1)a[f]+=d&-e,e=1&a[f];return 0===a[c-1]&&--c,[c,e]}exports.halve=halve;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function increment(a,b,c,d){for(--d;b<c&&a[b]===d;a[b++]=0);return b===c?a[c++]=1:++a[b],c}exports.increment=increment;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var addition_1=__webpack_require__(8),reverseAddition_1=__webpack_require__(26),subtraction_1=__webpack_require__(6),arrayUtils_1=__webpack_require__(7),numUtils_1=__webpack_require__(5);function karatsubaMultiplication(a,b,c,d,e,f,g){var h=numUtils_1.max(c-b,f-e);if(2>h)return h=a[b]*d[e],h<g?a[c]=0:(a[c++]=0|h/g,h%=g),a[b]=h,c;h=h+1>>>1;var i=b+h,j=numUtils_1.min(i,c),k=numUtils_1.min(e+h,f),l=Array(k-e+1);arrayUtils_1.copy(l,0,d,e,k);var m=addition_1.addition(l,0,k-e,d,k,f,g),n=Array(j-b+1+m);arrayUtils_1.copy(n,0,a,b,j);var o=addition_1.addition(n,0,j-b,a,j,c,g);o=karatsubaMultiplication(n,0,o,l,0,m,g),a[c]=0,arrayUtils_1.unsafeShiftUp(a,j,c,h);var p=karatsubaMultiplication(a,b,j,d,e,k,g);if(o=subtraction_1.subtraction(n,0,o,a,b,p,g),j===c||k===f)return p<=i?(c=i+o,numUtils_1.zero(a,p,i),arrayUtils_1.copy(a,i,n,0,o)):o>p-i?c=reverseAddition_1.reverseAddition(a,i,p,n,0,o,g):c=addition_1.addition(a,i,p,n,0,o,g),c;numUtils_1.zero(a,p,c);var q=j+h;return c=karatsubaMultiplication(a,q,c+h,d,k,f,g),o=subtraction_1.subtraction(n,0,o,a,q,c,g),c=addition_1.addition(a,i,c,n,0,o,g),c}exports.karatsubaMultiplication=karatsubaMultiplication;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var copy_1=__webpack_require__(2),double_1=__webpack_require__(17),negate_1=__webpack_require__(9),subtract_1=__webpack_require__(21),addition_1=__webpack_require__(8),reverseAddition_1=__webpack_require__(26),intUtils_1=__webpack_require__(1);function add(a,b,c){if(a=intUtils_1.tryMutable(a,c),a===b)return double_1.double(a,!0);if(0===b.precision)return a;var d=a.base;return 0===a.precision?(a=copy_1.copy(a,b),intUtils_1.changeBase(a,d)):a.isNegative===b.isNegative?(intUtils_1.changeBase(a,b.base),a.precision<b.precision?(a.digits.length<b.precision&&(a.digits.length=b.precision),a.precision=reverseAddition_1.reverseAddition(a.digits,0,a.precision,b.digits,0,b.precision,a.base)):a.precision=addition_1.addition(a.digits,0,a.precision,b.digits,0,b.precision,a.base),intUtils_1.changeBase(a,d)):(a=negate_1.negate(a,!0),a=subtract_1.subtract(a,b,!0),a=negate_1.negate(a,!0),a)}exports.add=add;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var decrement_1=__webpack_require__(11),increment_1=__webpack_require__(13),intUtils_1=__webpack_require__(1);function decrement(a,b){return a=intUtils_1.tryMutable(a,b),a.isNegative?a.precision=increment_1.increment(a.digits,0,a.precision,a.base):0===a.precision?(intUtils_1.setOne(a),a.isNegative=!0):a.precision=decrement_1.decrement(a.digits,0,a.precision,a.base),a}exports.decrement=decrement;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var double_1=__webpack_require__(23),intUtils_1=__webpack_require__(1);function double(a,b){return a=intUtils_1.tryMutable(a,b),a.precision=double_1.double(a.digits,0,a.precision,a.base),a}exports.double=double;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var isEven_1=__webpack_require__(24);function isEven(a){return isEven_1.isEven(a.digits,0,a.precision,a.base)}exports.isEven=isEven;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var globals_1=__webpack_require__(4),intUtils_1=__webpack_require__(1);function setBase(a,b,c){if(b=0|b,b<globals_1.Globals.MIN_BASE)throw RangeError(b+\" < MIN_BASE (\"+globals_1.Globals.MIN_BASE+\")\");if(b>globals_1.Globals.MAX_BASE)throw RangeError(b+\" > MAX_BASE (\"+globals_1.Globals.MAX_BASE+\")\");return intUtils_1.changeBase(intUtils_1.tryMutable(a,c),b)}exports.setBase=setBase;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var karatsubaSquare_1=__webpack_require__(25),longSquare_1=__webpack_require__(46),intUtils_1=__webpack_require__(1);function square(a,b){if(a=intUtils_1.tryMutable(a,b),0===a.precision)return a;a.isNegative=!1;var c=2*a.precision-1;return a.digits.length<c&&(a.digits.length=c),a.precision=500>a.precision?longSquare_1.longSquare(a.digits,0,a.precision,a.base):karatsubaSquare_1.karatsubaSquare(a.digits,0,a.precision,a.base),a}exports.square=square;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var add_1=__webpack_require__(15),compare_1=__webpack_require__(3),copy_1=__webpack_require__(2),negate_1=__webpack_require__(9),reverseSubtraction_1=__webpack_require__(47),subtraction_1=__webpack_require__(6),intUtils_1=__webpack_require__(1);function subtract(a,b,d){if(a===b)return intUtils_1.setZero(d?a:{base:a.base});if(a=intUtils_1.tryMutable(a,d),0===b.precision)return a;var e=a.base;if(0===a.precision)return a=copy_1.copy(a,b),a=negate_1.negate(a,!0),intUtils_1.changeBase(a,e);if(a.isNegative!==b.isNegative)return a=negate_1.negate(a,!0),a=add_1.add(a,b,!0),negate_1.negate(a,!0);intUtils_1.changeBase(a,b.base);var f=compare_1.compare(a,b);return 0===f?(a.base=e,intUtils_1.setZero(a)):(0>f?(negate_1.negate(a,!0),a.digits.length<b.precision&&(a.digits.length=b.precision),a.precision=reverseSubtraction_1.reverseSubtraction(a.digits,0,a.precision,b.digits,0,b.precision,a.base)):a.precision=subtraction_1.subtraction(a.digits,0,a.precision,b.digits,0,b.precision,a.base),intUtils_1.changeBase(a,e))}exports.subtract=subtract;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var compare_1=__webpack_require__(10),singleDigitMultiplication_1=__webpack_require__(27),subtraction_1=__webpack_require__(6),arrayUtils_1=__webpack_require__(7),numUtils_1=__webpack_require__(5);function basicDivision(a,b,c,d,e,f,g){var h=f-e,j=c-b-h,k=Array(j+1);numUtils_1.zero(k,0,j+1);for(var l=c;0<=compare_1.compare(a,b+j,l,d,e,f);)++k[j],l=subtraction_1.subtraction(a,b+j,l,d,e,f,g);var m=d[f-1],n=d[f-2],o=Array(h+1);for(var p=c-1,s=j;0<s--;--p)if(k[s]=divThreeHalvesByTwo(a[p],a[p-1],a[p-2],m,n,g),0!==k[s]){arrayUtils_1.copy(o,0,d,e,f);var t=singleDigitMultiplication_1.singleDigitMultiplication(o,0,h,k[s],g);0<compare_1.compare(o,0,t,a,b+s,l)&&(--k[s],t=subtraction_1.subtraction(o,0,t,d,e,f,g)),l=subtraction_1.subtraction(a,b+s,l,o,0,t,g)}for(;l>b&&0===a[l-1];)--l;return[k,a,0===k[j]?j:j+1,l]}exports.basicDivision=basicDivision;function divThreeHalvesByTwo(a,b,c,d,e,f){var g=a*f+b,h=g%d;return g=0|g/d,h=h*f-g*e+c,0>h&&(h=h+d*f+e,g=0>h?g-2:g-1),g}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function double(a,b,c,d){for(var e=0;b<c;){var f=(a[b]<<1)+e;f<d?e=0:(e=1,f-=d),a[b++]=f}return 0<e&&(a[b++]=1),b}exports.double=double;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function isEven(a,b,c,d){if(b===c)return!0;if(0==(1&d))return 0==(1&a[b]);for(var e=0;b<c;)e^=a[b++];return 0==(1&e)}exports.isEven=isEven;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var addition_1=__webpack_require__(8),subtraction_1=__webpack_require__(6),arrayUtils_1=__webpack_require__(7),numUtils_1=__webpack_require__(5);function karatsubaSquare(a,b,c,d){var e=c-b;if(2>e)return e=a[b]*a[b],e<d?a[c]=0:(a[c++]=0|e/d,e%=d),a[b]=e,c;e=e+1>>>1;var f=b+e,g=Array(2*e+2);arrayUtils_1.copy(g,0,a,b,f);var h=addition_1.addition(g,0,e,a,f,c,d);a[c]=0,arrayUtils_1.unsafeShiftUp(a,f,c,e);var i=karatsubaSquare(a,b,f,d);numUtils_1.zero(a,i,c);var j=f+e;return c=karatsubaSquare(a,j,c+e,d),h=karatsubaSquare(g,0,h,d),h=subtraction_1.subtraction(g,0,h,a,b,i,d),h=subtraction_1.subtraction(g,0,h,a,j,c,d),addition_1.addition(a,f,c,g,0,h,d)}exports.karatsubaSquare=karatsubaSquare;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var addition_1=__webpack_require__(8);function reverseAddition(a,c,d,e,f,g,h){var i=f-c+d;for(var j=i;j<g;a[d++]=e[j++]);return addition_1.addition(a,c,d,e,f,i,h)}exports.reverseAddition=reverseAddition;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function singleDigitMultiplication(a,b,c,d,e){for(var f=0;b<c;){var g=a[b]*d+f;g<e?f=0:(f=0|g/e,g%=e),a[b++]=g}return 0<f&&(a[b++]=f),b}exports.singleDigitMultiplication=singleDigitMultiplication;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var compare_1=__webpack_require__(10),double_1=__webpack_require__(23),halve_1=__webpack_require__(12),isEven_1=__webpack_require__(24),subtraction_1=__webpack_require__(6);function steinGCD(a,b,d,e,f,g,h){for(var i=0;isEven_1.isEven(a,b,d,h)&&isEven_1.isEven(e,f,g,h);)d=halve_1.halve(a,b,d,h)[0],g=halve_1.halve(e,f,g,h)[0],++i;for(;isEven_1.isEven(a,b,d,h);)d=halve_1.halve(a,b,d,h)[0];for(;isEven_1.isEven(e,f,g,h);)g=halve_1.halve(e,f,g,h)[0];for(var j;0!==(j=compare_1.compare(a,b,d,e,f,g));){if(0<j){var k=a;a=e,e=k,j=b,b=f,f=j,j=d,d=g,g=j}g=subtraction_1.subtraction(e,f,g,a,b,d,h);do g=halve_1.halve(e,f,g,h)[0];while(isEven_1.isEven(e,f,g,h))}for(;0<i--;)d=double_1.double(a,b,d,h);return[a,b,d]}exports.steinGCD=steinGCD;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var intUtils_1=__webpack_require__(1);function abs(a,b){return a=intUtils_1.tryMutable(a,b),a.isNegative=!1,a}exports.abs=abs;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var copy_1=__webpack_require__(2),basicDivision_1=__webpack_require__(22),singleDigitDivision_1=__webpack_require__(49),intUtils_1=__webpack_require__(1);function divideAndRemainder(a,b,c){if(void 0===c&&(c=!1),0===b.precision)throw new EvalError(\"Divide by zero\");var d=intUtils_1.tryMutable(a,c);if(a===b)return[d,intUtils_1.setZero({base:d.base})];if(0===d.precision)return[d,intUtils_1.setZero({base:d.base})];if(d.isNegative=d.isNegative!==b.isNegative,1===b.precision&&1===b.digits[0])return[d,intUtils_1.setZero({base:d.base})];if(1===d.precision&&1===d.digits[0])return[intUtils_1.setZero(d),intUtils_1.setOne({base:d.base})];var e=d.base;if(e!==b.base){var f=Math.log(b.base)/Math.log(e);if(d.precision<Math.ceil(b.precision*f)){var g=c?copy_1.copy({},d):d;return[intUtils_1.setZero({base:d.base}),g]}intUtils_1.changeBase(d,b.base)}if(d.precision<b.precision){d.base=e;var g=c?copy_1.copy({},d):d;return[intUtils_1.setZero({base:d.base}),g]}var h=intUtils_1.setOne({base:d.base});return 2>b.precision?(i=singleDigitDivision_1.singleDigitDivision(d.digits,0,d.precision,b.digits[0],d.base),d.precision=i[0],h.digits[0]=i[1],0===h.digits[0]&&intUtils_1.setZero(h)):(j=basicDivision_1.basicDivision(d.digits,0,d.precision,b.digits,0,b.precision,d.base),d.digits=j[0],h.digits=j[1],d.precision=j[2],h.precision=j[3]),intUtils_1.changeBase(d,e),intUtils_1.changeBase(h,e),[d,h];var i,j}exports.divideAndRemainder=divideAndRemainder;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var compare_1=__webpack_require__(3),copy_1=__webpack_require__(2),steinGCD_1=__webpack_require__(28),intUtils_1=__webpack_require__(1);function gcd(a,b,c){var d=intUtils_1.tryMutable(a,c);if(d.isNegative=!1,a===b||0===b.precision)return d;if(0===d.precision)return copy_1.copy(d,b),d.isNegative=!1,d;var e=d.base;return intUtils_1.changeBase(d,b.base),0!==compare_1.compare(d,b)&&(f=steinGCD_1.steinGCD(d.digits,0,d.precision,b.digits.slice(0,b.precision),0,b.precision,d.base),d.digits=f[0],d.precision=f[2]),intUtils_1.changeBase(d,e);var f}exports.gcd=gcd;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var decrement_1=__webpack_require__(16),halve_1=__webpack_require__(12),intUtils_1=__webpack_require__(1);function halve(a,b){var c=intUtils_1.setZero({base:a.base});return(a=intUtils_1.tryMutable(a,b),0===a.precision)?[a,c]:(d=halve_1.halve(a.digits,0,a.precision,a.base),a.precision=d[0],c.precision=d[1],0===c.precision)?[a,c]:(a.isNegative&&decrement_1.decrement(a,!0),[a,intUtils_1.setOne(c)]);var d}exports.halve=halve;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var decrement_1=__webpack_require__(11),increment_1=__webpack_require__(13),intUtils_1=__webpack_require__(1);function increment(a,b){return a=intUtils_1.tryMutable(a,b),a.isNegative?(a.precision=decrement_1.decrement(a.digits,0,a.precision,a.base),0===a.precision&&(a.isNegative=!1)):a.precision=increment_1.increment(a.digits,0,a.precision,a.base),a}exports.increment=increment;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t'use strict';function isInteger(a){return a.hasOwnProperty('base')&&a.hasOwnProperty('digits')&&a.hasOwnProperty('precision')&&a.hasOwnProperty('isNegative')}exports.isInteger=isInteger;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var copy_1=__webpack_require__(2),lcm_1=__webpack_require__(44),intUtils_1=__webpack_require__(1);function lcm(a,b,c){var d=intUtils_1.tryMutable(a,c);if(d.isNegative=!1,a===b||0===a.precision||1===b.precision&&1===b.digits[0])return d;if(0===b.precision)return intUtils_1.setZero(d);var e=d.base;return 1===d.precision&&1===d.digits[0]?(copy_1.copy(d,b),d.isNegative=!1):(intUtils_1.changeBase(d,b.base),f=lcm_1.lcm(d.digits,0,d.precision,b.digits,0,b.precision,d.base),d.digits=f[0],d.precision=f[1]),intUtils_1.changeBase(d,e);var f}exports.lcm=lcm;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var compare_1=__webpack_require__(3),intUtils_1=__webpack_require__(1);function max(a,b,c){return intUtils_1.tryMutable(0>compare_1.compare(a,b)?b:a,c)}exports.max=max;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var compare_1=__webpack_require__(3),intUtils_1=__webpack_require__(1);function min(a,b,c){return intUtils_1.tryMutable(0<compare_1.compare(a,b)?b:a,c)}exports.min=min;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var square_1=__webpack_require__(20),karatsubaMultiplication_1=__webpack_require__(14),longMultiplication_1=__webpack_require__(45),singleDigitMultiplication_1=__webpack_require__(27),intUtils_1=__webpack_require__(1);function multiply(a,b,c){if(a===b)return square_1.square(a,c);if(a=intUtils_1.tryMutable(a,c),0===a.precision)return a;if(0===b.precision)return intUtils_1.setZero(a);a.isNegative=a.isNegative!==b.isNegative;var d=a.base;if(intUtils_1.changeBase(a,b.base),1===b.precision)return a.precision=singleDigitMultiplication_1.singleDigitMultiplication(a.digits,0,a.precision,b.digits[0],a.base),intUtils_1.changeBase(a,d);if(1===a.precision){var e=a.digits[0];return a.digits=b.digits.slice(0,b.precision),a.precision=singleDigitMultiplication_1.singleDigitMultiplication(a.digits,0,b.precision,e,a.base),intUtils_1.changeBase(a,d)}var f=a.precision+b.precision-1;return a.digits.length<f&&(a.digits.length=f),a.precision=100>a.precision&&100>b.precision?longMultiplication_1.longMultiplication(a.digits,0,a.precision,b.digits,0,b.precision,a.base):karatsubaMultiplication_1.karatsubaMultiplication(a.digits,0,a.precision,b.digits,0,b.precision,a.base),intUtils_1.changeBase(a,d)}exports.multiply=multiply;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var isEven_1=__webpack_require__(18),exponentiation_1=__webpack_require__(43),intUtils_1=__webpack_require__(1);function pow(a,b,c){var d=intUtils_1.tryMutable(a,c);if(0===b.precision)return intUtils_1.setOne(d);if(b.isNegative){if(0===d.precision)throw new EvalError(\"Divide by zero\");return intUtils_1.setZero(d)}return 0===d.precision?d:(d.isNegative=!(d.isNegative&&isEven_1.isEven(b)),1===d.precision&&1===d.digits[0])?d:(d.precision=exponentiation_1.exponentiation(d.digits,0,d.precision,d.base,b.digits.slice(0,b.precision),0,b.precision,b.base),d)}exports.pow=pow;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function signum(a){return a.isNegative?-1:0===a.precision?0:1}exports.signum=signum;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var globals_1=__webpack_require__(4),setBase_1=__webpack_require__(19),isInteger_1=__webpack_require__(34),intUtils_1=__webpack_require__(1),numUtils_1=__webpack_require__(5);function toInteger(a,b,c){if(void 0===b&&(b=null),isInteger_1.isInteger(a))return setBase_1.setBase(a,null==b?a.base:b,c);if(\"number\"==typeof a)a=\"\"+a;else if(\"string\"!=typeof a)throw TypeError(\"Expecting type Integer | string | number\");var d=intUtils_1.setZero({base:10});return e=numUtils_1.strToDigits(a),d.digits=e[0],d.isNegative=e[1],d.precision=d.digits.length,setBase_1.setBase(d,null==b?globals_1.Globals.DEFAULT_BASE:b,!0);var e}exports.toInteger=toInteger;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var globals_1=__webpack_require__(4);function toString(a,b,c){void 0===b&&(b=null),void 0===c&&(c=null);var d=a.isNegative?\"-\":\"\";if(null==c){if(globals_1.Globals.DEFAULT_CIPHER.length<a.base)return b=null==b?\":\":b,d+a.digits.slice(0,a.precision).reverse().join(b);c=globals_1.Globals.DEFAULT_CIPHER}return b=null==b?\"\":b,d+a.digits.map(function(e){return c[e]}).reverse().join(b)}exports.toString=toString;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var halve_1=__webpack_require__(12),karatsubaSquare_1=__webpack_require__(25),karatsubaMultiplication_1=__webpack_require__(14);function exponentiation(a,b,c,d,e,f,g,h){for(var i=1,j=[1];f+1<g||1<e[f];){var k=void 0;l=halve_1.halve(e,f,g,h),g=l[0],k=l[1],0<k&&(j.length=i+c,i=karatsubaMultiplication_1.karatsubaMultiplication(j,0,i,a,b,c,d)),c=karatsubaSquare_1.karatsubaSquare(a,b,c,d)}return 1<j.length&&(c=karatsubaMultiplication_1.karatsubaMultiplication(a,b,c,j,0,i,d)),c;var l}exports.exponentiation=exponentiation;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var basicDivision_1=__webpack_require__(22),karatsubaMultiplication_1=__webpack_require__(14),steinGCD_1=__webpack_require__(28);function lcm(a,b,c,d,e,f,g){var h=a.slice(b,c),i=h.length,j=d.slice(e,f),k=j.length;return l=steinGCD_1.steinGCD(h,0,i,j,0,k,g),h=l[0],i=l[2],m=basicDivision_1.basicDivision(a,b,c,h,0,i,g),h=m[0],i=m[2],i=karatsubaMultiplication_1.karatsubaMultiplication(h,0,i,d,e,f,g),[h,i];var l,m}exports.lcm=lcm;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var arrayUtils_1=__webpack_require__(7),numUtils_1=__webpack_require__(5);function longMultiplication(c,d,e,f,g,h,j){var k=h-g,l=d+k;arrayUtils_1.safeShiftUp(c,d,e,k),numUtils_1.zero(c,d,l);var m=e+k;for(var n=l;n<m;++n){var o=0,p=n-k;for(var q=g;q<h;++q){var r=c[n]*f[q]+c[p]+o;r<j?o=0:(o=0|r/j,r%=j),c[p++]=r}c[p]=o}return 0===c[m-1]?m-1:m}exports.longMultiplication=longMultiplication;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var arrayUtils_1=__webpack_require__(7),numUtils_1=__webpack_require__(5);function longSquare(a,b,c,e){var f=c-b;arrayUtils_1.unsafeShiftUp(a,b,c,f),numUtils_1.zero(a,b,c),f+=c;for(var g=b,h=c;g<f;g+=2){var i=a[h++],j=0;a[g]+=i*i,a[g]>=e&&(j=0|a[g]/e,a[g]%=e);var k=g+1;for(var l=h;l<f;++k){var n=0,p=a[l++]*i;p>=e&&(n=0|p/e,p%=e),n<<=1,p<<=1,a[k]=a[k]+p+j,j=n,a[k]>=e&&(j+=0|a[k]/e,a[k]%=e)}a[k]=j}return 0===a[f-1]?f-1:f}exports.longSquare=longSquare;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function reverseSubtraction(a,b,c,d,e,f,g){for(var h=0;b<c;){var i=d[e++]-h-a[b];0>i?(h=1,i+=g):h=0,a[b++]=i}if(0<h){for(h=g-1;0===d[e];++e)a[b++]=h;a[b++]=d[e++]-1}if(e<f)do a[b++]=d[e++];while(e<f);else for(;0===a[b-1];)--b;return b}exports.reverseSubtraction=reverseSubtraction;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function setBase(a,b,c,d,e){if(c===b||d===e)return[a,c];var f=0,g=Array(Math.ceil((c-b)*Math.log(d)/Math.log(e)));do{var h=0;for(var j=c;j>b;h%=e)h=h*d+a[--j],a[j]=0|h/e;for(g[f++]=h;0===a[c-1];)if(--c===b)return[g,f]}while(!0)}exports.setBase=setBase;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\t\"use strict\";function singleDigitDivision(b,c,d,e,f){var g=0;for(var h=d;h-->c;g%=e)g=g*f+b[h],b[h]=0|g/e;return 0===b[d-1]&&--d,[d,g]}exports.singleDigitDivision=singleDigitDivision;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var copy_1=__webpack_require__(2);function clone(a){return copy_1.copy({},a)}exports.clone=clone;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var globals_1=__webpack_require__(4),abs_1=__webpack_require__(29),add_1=__webpack_require__(15),compare_1=__webpack_require__(3),copy_1=__webpack_require__(2),decrement_1=__webpack_require__(16),divideAndRemainder_1=__webpack_require__(30),double_1=__webpack_require__(17),gcd_1=__webpack_require__(31),halve_1=__webpack_require__(32),increment_1=__webpack_require__(33),isEven_1=__webpack_require__(18),lcm_1=__webpack_require__(35),max_1=__webpack_require__(36),min_1=__webpack_require__(37),multiply_1=__webpack_require__(38),negate_1=__webpack_require__(9),pow_1=__webpack_require__(39),signum_1=__webpack_require__(40),setBase_1=__webpack_require__(19),subtract_1=__webpack_require__(21),square_1=__webpack_require__(20),toInteger_1=__webpack_require__(41),toString_1=__webpack_require__(42),intUtils_1=__webpack_require__(1),BigInt=function(){function a(b){intUtils_1.assign(this,toInteger_1.toInteger(b,globals_1.Globals.DEFAULT_BASE,!1)),this.digits.length=this.precision}return Object.defineProperty(a,\"MINUS_ONE\",{get:function get(){return new a(-1)},enumerable:!0,configurable:!0}),Object.defineProperty(a,\"ZERO\",{get:function get(){return new a(0)},enumerable:!0,configurable:!0}),Object.defineProperty(a,\"ONE\",{get:function get(){return new a(1)},enumerable:!0,configurable:!0}),a.prototype.abs=function(b){return a.toBigInt(abs_1.abs(this,b),!0)},a.prototype.add=function(b,c){var d=add_1.add(this,b,c);return d.digits.length=d.precision,a.toBigInt(d,!0)},a.prototype.clone=function(){return new a(this)},a.prototype.compareTo=function(b){return compare_1.compare(this,b)},a.prototype.copy=function(b){return copy_1.copy(this,b),this},a.prototype.divide=function(b,c){return this.divideAndRemainder(b,c)[0]},a.prototype.divideAndRemainder=function(b,c){var d,e;return f=divideAndRemainder_1.divideAndRemainder(this,b,c),d=f[0],e=f[1],d.digits.length=d.precision,e.digits.length=e.precision,[a.toBigInt(d,!0),intUtils_1.assign(a.ZERO,e)];var f},a.prototype.double=function(b){return a.toBigInt(double_1.double(this,b),!0)},a.prototype.gcd=function(b,c){var d=gcd_1.gcd(this,b,c);return d.digits.length=d.precision,a.toBigInt(d,!0)},a.prototype.getBase=function(){return this.base},a.prototype.half=function(b){var c,d;return e=halve_1.halve(this,b),c=e[0],d=e[1],c.digits.length=c.precision,[a.toBigInt(c,!0),new a(d.precision)];var e},a.isBigInt=function(b){return b instanceof a},a.prototype.isEven=function(){return isEven_1.isEven(this)},a.prototype.isOdd=function(){return!this.isEven()},a.prototype.lcm=function(b,c){var d=lcm_1.lcm(this,b,c);return d.digits.length=d.precision,a.toBigInt(d,!0)},a.max=function(b,c,d){return a.toBigInt(max_1.max(b,c,d),!0)},a.min=function(b,c,d){return a.toBigInt(min_1.min(b,c,d),!0)},a.prototype.minusminus=function(b){var c=decrement_1.decrement(this,b);return c.digits.length=c.precision,a.toBigInt(c,!0)},a.prototype.multiply=function(b,c){var d=multiply_1.multiply(this,b,c);return d.digits.length=d.precision,a.toBigInt(d,!0)},a.prototype.negate=function(b){return a.toBigInt(negate_1.negate(this,b),!0)},a.prototype.plusplus=function(b){return a.toBigInt(increment_1.increment(this,b),!0)},a.prototype.pow=function(b,c){var d=pow_1.pow(this,b,c);return d.digits.length=d.precision,a.toBigInt(d,!0)},a.prototype.remainder=function(b,c){var d=this.divideAndRemainder(b,c)[1];return c&&intUtils_1.assign(this,d),this},a.prototype.setBase=function(b,c){var d=setBase_1.setBase(this,b,c);return d.digits.length=d.precision,a.toBigInt(d,!0)},a.prototype.signum=function(){return signum_1.signum(this)},(a.prototype.square=function(b){var c=square_1.square(this,b);return c.digits.length=c.precision,a.toBigInt(c,!0)},a.prototype.subtract=function(b,c){var d=subtract_1.subtract(this,b,c);return d.digits.length=d.precision,a.toBigInt(d,!0)},a.toBigInt=function(b,c){return a.isBigInt(b)&&c?b:new a(b)},a.prototype.toString=function(b,c){return void 0===b&&(b=null),void 0===c&&(c=null),toString_1.toString(this,b,c)},a)}();exports.BigInt=BigInt;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// big.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d6177b2f39741eb313c3","//Globals\nexport {Globals as __globals__} from './globals';\n\n//Functional\nexport {abs} from './functional/abs';\nexport {add} from './functional/add';\nexport {clone} from './functional/clone';\nexport {compare} from './functional/compare';\nexport {copy} from './functional/copy';\nexport {decrement} from './functional/decrement';\nexport {divideAndRemainder} from './functional/divideAndRemainder';\nexport {double} from './functional/double';\nexport {gcd} from './functional/gcd';\nexport {halve} from './functional/halve';\nexport {increment} from './functional/increment';\nexport {isEven} from './functional/isEven';\nexport {isInteger} from './functional/isInteger';\nexport {lcm} from './functional/lcm';\nexport {max} from './functional/max';\nexport {min} from './functional/min';\nexport {multiply} from './functional/multiply';\nexport {negate} from './functional/negate';\nexport {pow} from './functional/pow';\nexport {setBase} from './functional/setBase';\nexport {signum} from './functional/signum';\nexport {square} from './functional/square';\nexport {subtract} from './functional/subtract';\nexport {toInteger} from './functional/toInteger';\nexport {toString} from './functional/toString';\n\n//OOP\nexport {BigInt as Int} from './oop/bigInt';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {setBase} from '../algorithm/setBase';\n\nexport function tryMutable(A: Integer, isMutable: boolean = Globals.DEFAULT_IS_MUTABLE): Integer {\n  return (isMutable) ? A : copy({}, A);\n}\n\nexport function assign(target: any, source: Integer): Integer {\n  target.base = source.base;\n  target.digits = source.digits;\n  target.precision = source.precision;\n  target.isNegative = source.isNegative;\n  return target;\n}\n\nexport function copy(target: any, source: Integer): Integer {\n  const A: Integer = assign(target, source);\n  A.digits = A.digits.slice(0, A.precision);\n  return A;\n}\n\nexport function changeBase(A: Integer, base: number): Integer {\n  [A.digits, A.precision] = setBase(\n    A.digits, 0, A.precision, A.base, base\n  );\n  A.base = base;\n  return A;\n}\n\nexport function setOne(A: any): Integer {\n  A.precision = 1;\n  A.digits = [1];\n  A.isNegative = false;\n  return A;\n}\n\nexport function setZero(A: any): Integer {\n  A.precision = 0;\n  A.digits = [];\n  A.isNegative = false;\n  return A;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/intUtils.ts","import {Integer} from '../integer';\nimport {copy as _copy} from '../util/intUtils';\n\nexport function copy(target: any, source: Integer): Integer {\n  return _copy(target, source);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/copy.ts","import {Integer} from '../integer';\nimport {changeBase} from '../util/intUtils';\nimport {compare as _compare} from '../algorithm/compare';\n\nexport function compare(A: Integer, B: Integer): number {\n\n  //If self\n  if(A === B){\n    return 0;\n  }\n\n  //Check if different signs\n  if(A.isNegative !== B.isNegative){\n    return (A.isNegative) ? -1 : 1;\n  }\n\n  const base: number = A.base;\n\n  //If not same base\n  if(A.base !== B.base){\n\n    //Estimate number of digits of A if converted to B's base\n    const ratio: number = Math.log(A.base) / Math.log(B.base);\n    if(Math.ceil(A.precision * ratio) > B.base){\n      return 1;\n    }\n    if(Math.ceil((A.precision + 1) * ratio) < B.precision){\n      return -1\n    }\n\n    //Convert A to B's base\n    changeBase(A, B.base);\n  }\n\n  //Compare A and B\n  const out: number = _compare(\n    A.digits, 0, A.precision,\n    B.digits, 0, B.precision\n  );\n\n  //Change A back to original base (if needed)\n  changeBase(A, base);\n\n  //Return result\n  return out;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/compare.ts","export module Globals {\n  export const MIN_BASE: number = 2;\n  export const MAX_BASE: number = 94906265; //2^26 < sqrt(Number.MAX_SAFE_INTEGER) < 2^27\n  export const MAX_PRECISION: number = 4294967295; //2^32 - 1\n\n  export let DEFAULT_IS_MUTABLE: boolean = false;\n  export let DEFAULT_BASE: number = 94906264;\n  export let DEFAULT_CIPHER: ReadonlyArray<string> = Object.freeze([\n    '0','1','2','3','4','5','6','7','8','9',\n    'A','B','C','D','E','F','G','H','I','J',\n    'K','L','M','N','O','P','Q','R','S','T',\n    'U','V','W','X','Y','Z'\n  ]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/globals.ts","export function max(a: number, b: number): number {\n  return (a < b) ? b : a;\n}\n\nexport function min(a: number, b: number): number {\n  return (a > b) ? b : a;\n}\n\nexport function strToDigits(s: String): [number[], boolean] {\n  s = s.trim();\n\n  //Check if empty string\n  if(s.length < 1){\n    throw new TypeError(\"NaN\");\n  }\n\n  //Check for leading sign\n  const isNegative: boolean = s[0] === '-';\n\n  //Trim signs, leading zeros and decimal part\n  s = s.replace(/^[-+]?0*/, '').replace(/\\.[0-9]+$/, '');\n\n  //Check if string is not a number\n  if(s.match(/[^\\d]/)){\n    throw new TypeError(\"NaN\");\n  }\n\n  //If zero\n  const precision: number = s.length;\n  if(precision === 0){\n    return [[], false];\n  }\n\n  //Convert to decimal array\n  const digits: number[] = new Array<number>(precision);\n  for(let i = 0, j = precision; j > 0; ++i){\n    digits[i] = 0 | <any>s[--j];\n  }\n\n  return [digits, isNegative];\n}\n\n//Sets indices between [min, max) to 0\nexport function zero(A: number[], min: number, max: number): void {\n  while(min < max){\n    A[min++] = 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/numUtils.ts","import {decrement} from './decrement';\n\n/*\n  f(A, B) = A - B\n  Assumes\n     A >= B\n  Note\n     Overwrites A\n*/\nexport function subtraction(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n  let a: number = minA;\n  let borrow: number = 0;\n\n  //Subtract common digits\n  while(minB < maxB){\n    let v: number = A[a] - borrow - B[minB++];\n    if(v < 0){\n      borrow = 1;\n      v = v + base;\n    } else {\n      borrow = 0;\n    }\n    A[a++] = v;\n  }\n\n  //Subtract borrow\n  if(borrow > 0){\n    return decrement(A, a, maxA, base);\n  }\n\n  //Find new length\n  if(a === maxA){\n    while(a-- > minA && A[a] === 0){\n    }\n    maxA = a + 1;\n  }\n\n  //Return length\n  return maxA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/subtraction.ts","\n//Assumes shifts >= max - min, shifts > 0\nexport function unsafeShiftUp(A: any[], min: number, max: number, shifts: number): void {\n  for(let i: number = min + shifts; min < max; A[i++] = A[min++]){\n  }\n}\n\nexport function safeShiftUp(A: any[], min: number, max: number, shifts: number): void {\n  for(let i: number = max + shifts; max > min; A[--i] = A[--max]){\n  }\n}\n\n//Assumes A and B not same array or sections A and B do not intersect\nexport function copy<T>(to: T[], minTo: number, from: ReadonlyArray<T>, minFrom: number, maxFrom: number): void {\n  while(minFrom < maxFrom){\n    to[minTo++] = from[minFrom++];\n  }\n}\n\nexport function printArr(A: any[], min: number, max: number, minSub: number = min, maxSub: number = max): string {\n  A = A.map(function(v){return (v == null || v !== v) ? v + '' : v;});\n  return \"[\" +\n    A.slice(min,minSub).join(', ') +\n    \"|\" + A.slice(minSub,maxSub).join(', ') +\n    \"|\" + A.slice(maxSub,max).join(', ') +\n  \"]\";\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/arrayUtils.ts","import {increment} from './increment';\n\n/*\n  f(A, B) = A + B\n  Overwrites A\n  Assumes\n    A.length >= B.length\n    A and B not same array or non-intersecting segments\n*/\nexport function addition(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number{\n  let carry: number = 0;\n\n  //Add common digits\n  while (minB < maxB){\n    let v: number = A[minA] + B[minB++] + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 1;\n      v = v - base;\n    }\n    A[minA++] = v;\n  }\n\n  //Return length\n  return (carry > 0) ? increment(A, minA, maxA, base) : maxA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/addition.ts","import {Integer} from '../integer';\nimport {tryMutable} from '../util/intUtils';\n\nexport function negate(A: Integer, isMutable?: boolean): Integer {\n  A = tryMutable(A, isMutable);\n  A.isNegative = A.precision > 0 && !A.isNegative;\n  return A;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/negate.ts","//Assumes valid inputs\n//Assumes numbers are in same base\nexport function compare(\n  A: ReadonlyArray<number>, minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number\n): number {\n\n  //Compare number of digits\n  const d: number = maxA - minA - maxB + minB;\n  if(d !== 0){\n    return d < 0 ? -1 : 1;\n  }\n\n  //Compare digits\n  while(maxA > minA){\n    if(A[--maxA] !== B[--maxB]){\n      return A[maxA] < B[maxB] ? -1 : 1;\n    }\n  }\n\n  //Numbers are equal\n  return 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/compare.ts","/*\n  f(A) = A - 1\n  Overwrites A\n  Assumes A > 0\n*/\nexport function decrement(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Deal with any borrows\n  for(const borrow: number = base - 1; A[minA] === 0; A[minA++] = borrow){\n  }\n\n  //Subtract one\n  A[minA] = A[minA] - 1;\n\n  //Return length\n  return (minA+1 === maxA && A[minA] === 0) ? maxA - 1 : maxA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/decrement.ts","/*\n  f(A) = A / 2\n  Overwrites A\n  Assumes A > 0\n*/\nexport function halve(\n  A: number[], minA: number, maxA: number, base: number\n): [number, number] {\n\n  //Halve\n  let remainder: number = 0;\n  for(let i: number = maxA; i-- > minA; A[i] = A[i] >>> 1){\n    A[i] = A[i] + (base & -remainder);\n    remainder = A[i] & 1;\n  }\n\n  //Get new length\n  if(A[maxA - 1] === 0){\n    --maxA;\n  }\n\n  return [maxA, remainder];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/halve.ts","/*\n  f(A) = A + 1\n  Overwrites A\n  Assumes A >= 0\n*/\n\nexport function increment(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Deal with any carries\n  for(--base; minA < maxA && A[minA] === base; A[minA++] = 0){\n  }\n\n  //Add one\n  if(minA === maxA){\n    A[maxA++] = 1;\n  } else {\n    A[minA] = A[minA] + 1;\n  }\n\n  //Return length\n  return maxA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/increment.ts","import {addition} from './addition';\nimport {reverseAddition} from './reverseAddition';\nimport {subtraction} from './subtraction';\nimport {copy, unsafeShiftUp} from '../util/arrayUtils';\nimport {min, max, zero} from '../util/numUtils';\n\n/*\n  f(A) = A * B\n  Overwrites A\n  Assumes A > 0 and B > 0\n  Assumes A and B are not the same array\n  Explanation: https://en.wikipedia.org/wiki/Karatsuba_algorithm\n*/\nexport function karatsubaMultiplication(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n  let halfLen: number = max(maxA - minA, maxB - minB);\n\n  //Base case\n  if(halfLen < 2){\n    halfLen = A[minA] * B[minB];\n    if(halfLen < base){\n      A[maxA] = 0;\n    } else {\n      A[maxA++] = 0 | (halfLen / base);\n      halfLen = halfLen % base;\n    }\n    A[minA] = halfLen;\n    return maxA;\n  }\n\n  //Split the numbers in half\n  halfLen = (halfLen + 1) >>> 1;\n  const halfA: number = minA + halfLen;\n  const midA: number = min(halfA, maxA);\n  const midB: number = min(minB + halfLen, maxB);\n\n  //mediumB = lowB + highB\n  const mediumB: number[] = new Array(midB - minB + 1);\n  copy(mediumB, 0, B, minB, midB);\n  const mediumMaxB: number = addition(\n    mediumB, 0, midB - minB, B, midB, maxB, base\n  );\n\n  //medium = lowA + highA\n  const medium: number[] = new Array(midA - minA + 1 + mediumMaxB);\n  copy(medium, 0, A, minA, midA);\n  let mediumMax: number = addition(medium, 0, midA - minA, A, midA, maxA, base);\n\n  //medium = medium * mediumB\n  mediumMax = karatsubaMultiplication(\n    medium, 0, mediumMax, mediumB, 0, mediumMaxB, base\n  );\n\n  //Shift highA left\n  A[maxA] = 0;\n  unsafeShiftUp(A, midA, maxA, halfLen);\n\n  //lowA = lowA * lowB\n  const lowMax: number = karatsubaMultiplication(\n    A, minA, midA, B, minB, midB, base\n  );\n\n  //medium = medium - lowA\n  mediumMax = subtraction(medium, 0, mediumMax, A, minA, lowMax, base);\n\n  //A = medium*(base^halfLen) + lowA\n  if(midA === maxA || midB === maxB){\n    if(lowMax <= halfA){\n      maxA = halfA + mediumMax;\n      zero(A, lowMax, halfA);\n      copy(A, halfA, medium, 0, mediumMax);\n    } else if(mediumMax > lowMax - halfA){\n      maxA = reverseAddition(A, halfA, lowMax, medium, 0, mediumMax, base);\n    } else {\n      maxA = addition(A, halfA, lowMax, medium, 0, mediumMax, base);\n    }\n    return maxA;\n  }\n\n  //Fill unused space with zero\n  zero(A, lowMax, maxA);\n\n  //highA = highA * highB\n  const highMin: number = midA + halfLen;\n  maxA = karatsubaMultiplication(\n    A, highMin, maxA + halfLen, B, midB, maxB, base\n  );\n\n  //medium = medium - highA\n  mediumMax = subtraction(medium, 0, mediumMax, A, highMin, maxA, base);\n\n  //A = highA*(base^len) + medium*(base^halfLen) + lowA\n  maxA = addition(A, halfA, maxA, medium, 0, mediumMax, base);\n  return maxA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/karatsubaMultiplication.ts","import {Integer} from '../integer';\nimport {copy} from './copy';\nimport {double} from './double';\nimport {negate} from './negate';\nimport {subtract} from './subtract';\nimport {addition} from '../algorithm/addition';\nimport {reverseAddition} from '../algorithm/reverseAddition';\nimport {changeBase, tryMutable} from '../util/intUtils';\n\nexport function add(A: Integer, B: Integer, isMutable?: boolean): Integer {\n  A = tryMutable(A, isMutable);\n\n  //If self\n  if(A === B){\n    return double(A, true);\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return A;\n  }\n\n  const base: number = A.base;\n\n  //If C is zero\n  if(A.precision === 0){\n    A = copy(A, B);\n    return changeBase(A, base);\n  }\n\n  //If signs differ\n  if(A.isNegative !== B.isNegative){\n\n    //Change sign, subtract, change sign again\n    A = negate(A, true);\n    A = subtract(A, B, true);\n    A = negate(A, true);\n    return A;\n  }\n\n  //Normalize to B's base\n  changeBase(A, B.base);\n\n  //If C < B\n  if(A.precision < B.precision){\n\n    //Update C's digit array to minimum result size\n    if(A.digits.length < B.precision){\n      A.digits.length = B.precision;\n    }\n\n    //Add\n    A.precision = reverseAddition(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n\n  //If A >= B\n  } else {\n\n    //Add\n    A.precision = addition(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n  }\n\n  //Change A back to original base\n  return changeBase(A, base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/add.ts","import {Integer} from '../integer';\nimport {decrement as _decrement} from '../algorithm/decrement';\nimport {increment} from '../algorithm/increment';\nimport {setOne, tryMutable} from '../util/intUtils';\n\nexport function decrement(A: Integer, isMutable?: boolean): Integer {\n  A = tryMutable(A, isMutable);\n\n  //If negative\n  if(A.isNegative){\n    A.precision = increment(A.digits, 0, A.precision, A.base);\n\n  //If zero\n  } else if (A.precision === 0){\n    setOne(A);\n    A.isNegative = true;\n\n  //If positive\n  } else {\n    A.precision = _decrement(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/decrement.ts","import {Integer} from '../integer';\nimport {double as _double} from '../algorithm/double';\nimport {tryMutable} from '../util/intUtils';\n\nexport function double(A: Integer, isMutable?: boolean): Integer {\n  A = tryMutable(A, isMutable);\n  A.precision = _double(A.digits, 0, A.precision, A.base);\n  return A;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/double.ts","import {Integer} from '../integer';\nimport {isEven as _isEven} from '../algorithm/isEven';\n\nexport function isEven(A: Integer): boolean {\n  return _isEven(A.digits, 0, A.precision, A.base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/isEven.ts","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {changeBase, tryMutable} from '../util/intUtils';\n\nexport function setBase(A: Integer, base: number, isMutable?: boolean): Integer {\n\n  //Sanitize base\n  base = 0 | base;\n\n  //If new base too low\n  if(base < Globals.MIN_BASE){\n    throw RangeError(base + \" < MIN_BASE (\" + Globals.MIN_BASE + \")\");\n  }\n\n  //If new base too high\n  if(base > Globals.MAX_BASE){\n    throw RangeError(base + \" > MAX_BASE (\" + Globals.MAX_BASE + \")\");\n  }\n\n  //Convert to base\n  return changeBase(tryMutable(A, isMutable), base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/setBase.ts","import {Integer} from '../integer';\nimport {karatsubaSquare} from '../algorithm/karatsubaSquare';\nimport {longSquare} from '../algorithm/longSquare';\nimport {tryMutable} from '../util/intUtils';\n\nexport function square(A: Integer, isMutable?: boolean): Integer {\n  A = tryMutable(A, isMutable);\n\n  //If zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //Make positive\n  A.isNegative = false;\n\n  //Make minimum room for squaring\n  const maxNewLen: number = 2*A.precision - 1;\n  if(A.digits.length < maxNewLen){\n    A.digits.length = maxNewLen;\n  }\n\n  //Choose best performing algorithm\n  if(A.precision < 500){\n    A.precision = longSquare(A.digits, 0, A.precision, A.base);\n  } else {\n    A.precision = karatsubaSquare(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/square.ts","import {Integer} from '../integer';\nimport {add} from './add';\nimport {compare} from './compare';\nimport {copy} from './copy';\nimport {negate} from './negate';\nimport {reverseSubtraction} from '../algorithm/reverseSubtraction';\nimport {subtraction} from '../algorithm/subtraction';\nimport {changeBase, setZero, tryMutable} from '../util/intUtils';\n\nexport function subtract(A: Integer, B: Integer, isMutable?: boolean): Integer {\n\n  //If subtracting itself\n  if(A === B){\n    return setZero((isMutable) ? A : {base: A.base});\n  }\n\n  A = tryMutable(A, isMutable);\n\n  //If B is zero\n  if(B.precision === 0){\n    return A;\n  }\n\n  const base: number = A.base;\n\n  //If A is zero\n  if(A.precision === 0){\n\n    //Copy B\n    A = copy(A, B);\n    A = negate(A, true);\n    return changeBase(A, base);\n  }\n\n  //If signs differ\n  if(A.isNegative !== B.isNegative){\n\n    //Change sign, add, change sign again\n    A = negate(A, true);\n    A = add(A, B, true);\n    return negate(A, true);\n  }\n\n  //Normalize to B's base\n  changeBase(A, B.base);\n\n  //Compare A and B\n  const c: number = compare(A, B);\n\n  //If A == B\n  if(c === 0){\n    A.base = base;\n    return setZero(A);\n  }\n\n  //If A < B\n  if(c < 0){\n\n    //Switch sign\n    negate(A, true);\n\n    //Make room for subtraction\n    if(A.digits.length < B.precision){\n      A.digits.length = B.precision;\n    }\n\n    //Subtract\n    A.precision = reverseSubtraction(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n\n  //If A > B\n  } else {\n    A.precision = subtraction(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n  }\n\n  return changeBase(A, base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/subtract.ts","import {compare} from './compare';\nimport {singleDigitMultiplication} from './singleDigitMultiplication';\nimport {subtraction} from './subtraction';\nimport {copy} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(X, Y) = X / Y\n  Overwrites X\n  Assumes no leading zeros\n  Assumes X.length >= Y.length >= 2\n  See: http://cacr.uwaterloo.ca/hac/about/chap14.pdf\n\n  INPUT: positive integers x = (xn ··· x1x0)b, y = (yt ··· y1y0)b with n ≥ t ≥ 1, yt != 0\n  OUTPUT: the quotient q = (qn−t ··· q1q0)b and remainder r = (rt ··· r1r0)b such that x = qy + r, 0 ≤ r < y\n*/\nexport function basicDivision(\n  X: number[], minX: number, maxX: number,\n  Y: ReadonlyArray<number>, minY: number, maxY: number,\n  base: number\n): [number[], number[], number, number] {\n\n  //1. Initialize the quotient\n  const lenY: number = maxY - minY;\n  const nMt: number = maxX - minX - lenY;\n  const Q: number[] = new Array(nMt + 1);\n  zero(Q, 0, nMt + 1);\n\n  //2. While X ≥ Yb^(n−t)\n  let maxR: number = maxX;\n  while(compare(X, minX + nMt, maxR, Y, minY, maxY) >= 0){\n\n    //Q[n−t] ← Q[n−t] + 1\n    ++Q[nMt];\n\n    //x ← x − Bb^(n−t)\n    maxR = subtraction(X, minX + nMt, maxR, Y, minY, maxY, base);\n  }\n\n  //3. For i from n down to (t + 1)\n  const yt: number = Y[maxY-1];\n  const ytm1: number = Y[maxY-2];\n  const QY: number[] = new Array(lenY + 1);\n  for(let i: number = maxX - 1, iMt: number = nMt; iMt-- > 0; --i){\n\n    //3.1 If x[i] = y[t] then set q[i−t−1] ← b − 1; otherwise set q[i−t−1] ← (x[i]b + x[i−1]) / y[t]\n    //3.2 While q[i−t−1] * (y[t]b + y[t−1]) > x[i]b^2 + x[i−1]b + x[i−2]\n    Q[iMt] = divThreeHalvesByTwo(X[i], X[i-1], X[i-2], yt, ytm1, base);\n\n    //3.3 x ← x − q[i−t−1] * yb^(i−t−1)\n    //3.4 If x < 0 then set x ← x + yb^(i−t−1) and q[i−t−1] ← q[i−t−1] − 1\n    if(Q[iMt] === 0){\n      continue;\n    }\n    copy(QY, 0, Y, minY, maxY);\n    let maxQY: number = singleDigitMultiplication(QY, 0, lenY, Q[iMt], base);\n    if(compare(QY, 0, maxQY, X, minX + iMt, maxR) > 0){\n      --Q[iMt];\n      maxQY = subtraction(QY, 0, maxQY, Y, minY, maxY, base);\n    }\n    maxR = subtraction(X, minX + iMt, maxR, QY, 0, maxQY, base);\n  }\n\n  //4. r ← x\n  //Adjust length of remainder\n  while(maxR > minX && X[maxR - 1] === 0){\n    --maxR;\n  }\n\n  //5. Return(q,r)\n  return [Q, X, (Q[nMt] === 0) ? nMt : nMt + 1, maxR];\n}\n\n/*\n  See: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.47.565&rep=rep1&type=pdf\n*/\nfunction divThreeHalvesByTwo(a1: number, a2: number, a3: number, b1: number, b2: number, base: number): number {\n  let q: number = a1*base + a2;\n  let r: number = q % b1;\n  q = 0 | (q / b1);\n  r = r*base - q*b2 + a3;\n  if(r < 0){\n    r = r + b1*base + b2;\n    q = (r < 0) ? q - 2 : q - 1;\n  }\n  return q;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/basicDivision.ts","/*\nf(A) = A + A\nOverwrites A\n*/\nexport function double(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Double\n  let carry: number = 0;\n  while(minA < maxA){\n    let v: number = (A[minA] << 1) + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 1;\n      v = v - base;\n    }\n    A[minA++] = v;\n  }\n\n  //Add carry\n  if (carry > 0){\n    A[minA++] = 1;\n  }\n\n  //Return length\n  return minA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/double.ts","export function isEven(\n  A: ReadonlyArray<number>, minA: number, maxA: number, base: number\n): boolean {\n\n  //If zero\n  if(minA === maxA){\n    return true;\n  }\n\n  //If even base\n  if((base & 1) === 0){\n    return (A[minA] & 1) === 0;\n  }\n\n  //If odd base\n  let xor: number = 0;\n  while(minA < maxA){\n    xor = xor ^ A[minA++];\n  }\n  return (xor & 1) === 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/isEven.ts","import {addition} from './addition';\nimport {subtraction} from './subtraction';\nimport {copy, unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A) = A * A\n  Overwrites A\n  Assumes A > 0\n  See: https://en.wikipedia.org/wiki/Karatsuba_algorithm\n*/\nexport function karatsubaSquare(\n  A: number[], min: number, max: number, base: number\n): number {\n  let halfLen: number = max - min;\n\n  //Base case\n  if(halfLen < 2){\n    halfLen = A[min] * A[min];\n    if(halfLen < base){\n      A[max] = 0;\n    } else {\n      A[max++] = 0 | (halfLen / base);\n      halfLen = halfLen % base;\n    }\n    A[min] = halfLen;\n    return max;\n  }\n\n  //Split the number in half\n  halfLen = (halfLen + 1) >>> 1;\n  const mid: number = min + halfLen;\n\n  //medium = low + high\n  const medium: number[] = new Array(2*halfLen + 2);\n  copy(medium, 0, A, min, mid);\n  let mediumMax: number = addition(medium, 0, halfLen, A, mid, max, base);\n\n  //Shift high left\n  A[max] = 0;\n  unsafeShiftUp(A, mid, max, halfLen);\n\n  //low * low\n  const lowMax: number = karatsubaSquare(A, min, mid, base);\n\n  //Fill unused space with zero\n  zero(A, lowMax, max);\n\n  //high * high\n  const highMin = mid + halfLen;\n  max = karatsubaSquare(A, highMin, max + halfLen, base);\n\n  //medium = medium * medium - low - high\n  mediumMax = karatsubaSquare(medium, 0, mediumMax, base);\n  mediumMax = subtraction(medium, 0, mediumMax, A, min, lowMax, base);\n  mediumMax = subtraction(medium, 0, mediumMax, A, highMin, max, base);\n\n  //A = high*(base^len) + medium*(base ^ halfLen) + low\n  return addition(A, mid, max, medium, 0, mediumMax, base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/karatsubaSquare.ts","import {addition} from './addition';\n\n/*\n  f(A, B) = A + B\n  Overwrites A\n  Assumes\n    A < B\n    A and B not overlapping array segments\n*/\nexport function reverseAddition(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number{\n\n  //Add extra digits to A\n  const newMaxB: number = minB - minA + maxA;\n  for(let b: number = newMaxB; b < maxB; A[maxA++] = B[b++]){\n  }\n\n  //Do normal addition\n  return addition(A, minA, maxA, B, minB, newMaxB, base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/reverseAddition.ts","/*\n  f(A,B) = A*B\n  Overwrites A\n  Assumes B > 0\n*/\nexport function singleDigitMultiplication(\n  A: number[], minA: number, maxA: number,\n  multiplier: number, base: number\n): number {\n\n  //Multiply multiplicand by multiplier\n  let carry: number = 0;\n  while(minA < maxA){\n    let v: number = (A[minA] * multiplier) + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 0 | (v / base);\n      v = v % base;\n    }\n    A[minA++] = v;\n  }\n\n  //Add remaining carry\n  if(carry > 0){\n    A[minA++] = carry;\n  }\n\n  //Return length\n  return minA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/singleDigitMultiplication.ts","import {compare} from './compare';\nimport {double} from './double';\nimport {halve} from './halve';\nimport {isEven} from './isEven';\nimport {subtraction} from './subtraction';\n\n/*\nf(A, B) = GCD(A, B)\nOverwrites A, B\nExpects A > 0, B > 0\n//Assumes A != B\nSee: https://en.wikipedia.org/wiki/Binary_GCD_algorithm\n*/\nexport function steinGCD(\n  A: number[], minA: number, maxA: number,\n  B: number[], minB: number, maxB: number,\n  base: number\n): [number[], number, number] {\n\n  //Count and remove common factors of 2\n  let shifts: number = 0;\n  while(isEven(A, minA, maxA, base) && isEven(B, minB, maxB, base)){\n    [maxA] = halve(A, minA, maxA, base);\n    [maxB] = halve(B, minB, maxB, base);\n    ++shifts;\n  }\n\n  //Remove extra factors of 2 in A\n  while(isEven(A, minA, maxA, base)){\n    [maxA] = halve(A, minA, maxA, base);\n  }\n\n  //Remove extra factors of 2 in B\n  while(isEven(B, minB, maxB, base)){\n    [maxB] = halve(B, minB, maxB, base);\n  }\n\n  //A will always be odd from now on\n  //While A != B\n  let c: number;\n  while((c = compare(A, minA, maxA, B, minB, maxB)) !== 0){\n\n    //Switch A and B iff A > B\n    if(c > 0){\n      const C: number[] = A;\n      A = B;\n      B = C;\n      c = minA;\n      minA = minB;\n      minB = c;\n      c = maxA;\n      maxA = maxB;\n      maxB = c;\n    }\n\n    //B = B - A\n    maxB = subtraction(B, minB, maxB, A, minA, maxA, base);\n\n    //B is now even so halve it at least once\n    do {\n      [maxB] = halve(B, minB, maxB, base);\n    } while (isEven(B, minB, maxB, base));\n  }\n\n  //Restore common factors of 2 (A = A << shifts)\n  while(shifts-- > 0){\n    maxA = double(A, minA, maxA, base);\n  }\n\n  return [A, minA, maxA];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/steinGCD.ts","import {Integer} from '../integer';\nimport {tryMutable} from '../util/intUtils';\n\nexport function abs(A: Integer, isMutable?: boolean): Integer {\n  A = tryMutable(A, isMutable);\n  A.isNegative = false;\n  return A;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/abs.ts","import {Integer} from '../integer';\nimport {copy} from './copy';\nimport {basicDivision} from '../algorithm/basicDivision';\nimport {singleDigitDivision} from '../algorithm/singleDigitDivision';\nimport {changeBase, setOne, setZero, tryMutable} from '../util/intUtils';\n\nexport function divideAndRemainder(A: Integer, B: Integer, isMutable: boolean = false): [Integer, Integer] {\n\n  //If A / 0\n  if(B.precision === 0){\n    throw new EvalError(\"Divide by zero\");\n  }\n\n  let C: Integer = tryMutable(A, isMutable);\n\n  //If self\n  if(A === B){\n    return [C, setZero({base: C.base})];\n  }\n\n  //If 0 / B\n  if(C.precision === 0){\n    return [C, setZero({base: C.base})];\n  }\n\n  //Divide signs\n  C.isNegative = C.isNegative !== B.isNegative;\n\n  //If B = 1\n  if(B.precision === 1 && B.digits[0] === 1){\n    return [C, setZero({base: C.base})];\n  }\n\n  //If C = 1\n  if(C.precision === 1 && C.digits[0] === 1){\n    return [setZero(C), setOne({base: C.base})];\n  }\n\n  //If different bases\n  const base: number = C.base;\n  if(base !== B.base){\n\n    //If C's length < the least possible length of B if converted to C's base\n    const ratio: number = Math.log(B.base) / Math.log(base);\n    if(C.precision < Math.ceil(B.precision * ratio)){\n      const remainder: Integer = (isMutable) ? copy({}, C) : C;\n      return [setZero({base: C.base}), remainder];\n    }\n\n    //Normalize bases\n    changeBase(C, B.base);\n  }\n\n  //If C's length < B's length\n  if(C.precision < B.precision){\n    C.base = base;\n    const remainder: Integer = (isMutable) ? copy({}, C) : C;\n    return [setZero({base: C.base}), remainder];\n  }\n\n  //Choose best algorithm\n  let R: Integer = setOne({base: C.base});\n  if(B.precision < 2){\n    [C.precision, R.digits[0]] = singleDigitDivision(\n      C.digits, 0, C.precision, B.digits[0], C.base\n    );\n    if(R.digits[0] === 0){\n      setZero(R);\n    }\n  } else {\n    [\n      C.digits, R.digits, C.precision, R.precision\n    ] = basicDivision(\n      C.digits, 0, C.precision, B.digits, 0, B.precision, C.base\n    );\n  }\n\n  //Return C and R\n  changeBase(C, base);\n  changeBase(R, base);\n  return [C, R];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/divideAndRemainder.ts","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {copy} from './copy';\nimport {steinGCD} from '../algorithm/steinGCD';\nimport {changeBase, tryMutable} from '../util/intUtils';\n\nexport function gcd(A: Integer, B: Integer, isMutable?: boolean): Integer {\n  const C: Integer = tryMutable(A, isMutable);\n\n  //Make C positive\n  C.isNegative = false;\n\n  //If GCD of self or B = 0\n  if(A === B || B.precision === 0){\n    return C;\n  }\n\n  //If C = 0\n  if(C.precision === 0){\n    copy(C, B);\n    C.isNegative = false;\n    return C;\n  }\n\n  //If |C| > 0 && |B| > 0\n  const base: number = C.base;\n\n  //Normalize the bases\n  changeBase(C, B.base);\n\n  //If C != B\n  if(compare(C, B) !== 0){\n\n    //Calculate GCD\n    [C.digits,,C.precision] = steinGCD(\n      C.digits, 0, C.precision,\n      B.digits.slice(0, B.precision), 0, B.precision,\n      C.base\n    );\n  }\n\n  //Return C to original base\n  return changeBase(C, base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/gcd.ts","import {Integer} from '../integer';\nimport {decrement} from './decrement';\nimport {halve as _halve} from '../algorithm/halve';\nimport {setZero, setOne, tryMutable} from '../util/intUtils';\n\nexport function halve(A: Integer, isMutable?: boolean): [Integer, Integer] {\n  const remainder: Integer = setZero({base: A.base});\n  A = tryMutable(A, isMutable);\n\n  //If zero\n  if(A.precision === 0){\n    return [A, remainder];\n  }\n\n  //Halve\n  [A.precision, remainder.precision] = _halve(A.digits, 0, A.precision, A.base);\n\n  //If no remainder\n  if(remainder.precision === 0){\n    return [A, remainder];\n  }\n\n  //If remainder and C is negative\n  if(A.isNegative){\n\n    //Round down (e.g. Math.floor(-49.5) = -50)\n    decrement(A, true);\n  }\n\n  return [A, setOne(remainder)];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/halve.ts","import {Integer} from '../integer';\nimport {decrement} from '../algorithm/decrement';\nimport {increment as _increment} from '../algorithm/increment';\nimport {tryMutable} from '../util/intUtils';\n\n\nexport function increment(A: Integer, isMutable?: boolean): Integer {\n  A = tryMutable(A, isMutable);\n\n  //If negative\n  if(A.isNegative){\n    A.precision = decrement(A.digits, 0, A.precision, A.base);\n\n    //If now zero\n    if(A.precision === 0){\n      A.isNegative = false;\n    }\n\n  //If positive\n  } else {\n    A.precision = _increment(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/increment.ts","import {Integer} from '../integer';\n\nexport function isInteger(A: any): A is Integer {\n  return A.hasOwnProperty('base')\n  && A.hasOwnProperty('digits')\n  && A.hasOwnProperty('precision')\n  && A.hasOwnProperty('isNegative');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/isInteger.ts","import {Integer} from '../integer';\nimport {copy} from './copy';\nimport {lcm as _lcm} from '../algorithm/lcm';\nimport {changeBase, setZero, tryMutable} from '../util/intUtils';\n\nexport function lcm(A: Integer, B: Integer, isMutable?: boolean): Integer {\n  const C: Integer = tryMutable(A, isMutable);\n\n  //Make C positive\n  C.isNegative = false;\n\n  //If LCM of self or A = 0 or B = 1\n  if(A === B || A.precision === 0 || (B.precision === 1 && B.digits[0] === 1)){\n    return C;\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return setZero(C);\n  }\n\n  const base: number = C.base;\n\n  //If C = 1\n  if(C.precision === 1 && C.digits[0] === 1){\n    copy(C, B);\n    C.isNegative = false;\n\n  //If C > 1 and B > 1\n  } else {\n\n    //Normalize bases\n    changeBase(C, B.base);\n\n    //Calculate LCM\n    [C.digits, C.precision] = _lcm(\n      C.digits, 0, C.precision, B.digits, 0, B.precision, C.base\n    );\n  }\n\n  //Change C to original base\n  return changeBase(C, base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/lcm.ts","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {tryMutable} from '../util/intUtils';\n\nexport function max(A: Integer, B: Integer, isMutable?: boolean): Integer {\n  return tryMutable(compare(A, B) < 0 ? B : A, isMutable);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/max.ts","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {tryMutable} from '../util/intUtils';\n\nexport function min(A: Integer, B: Integer, isMutable?: boolean): Integer {\n  return tryMutable(compare(A, B) > 0 ? B : A, isMutable);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/min.ts","import {Integer} from '../integer';\nimport {square} from './square';\nimport {karatsubaMultiplication} from '../algorithm/karatsubaMultiplication';\nimport {longMultiplication} from '../algorithm/longMultiplication';\nimport {singleDigitMultiplication} from '../algorithm/singleDigitMultiplication';\nimport {changeBase, setZero, tryMutable} from '../util/intUtils';\n\nexport function multiply(A: Integer, B: Integer, isMutable?: boolean): Integer {\n\n  //If self\n  if(A === B){\n    return square(A, isMutable);\n  }\n\n  A = tryMutable(A, isMutable);\n\n  //If A is zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return setZero(A);\n  }\n\n  //Multiply signs\n  A.isNegative = A.isNegative !== B.isNegative;\n\n  //Normalize to B's base\n  const base: number = A.base;\n  changeBase(A, B.base);\n\n  //If B is single digit\n  if(B.precision === 1){\n    A.precision = singleDigitMultiplication(\n      A.digits, 0, A.precision, B.digits[0], A.base\n    );\n    return changeBase(A, base);\n  }\n\n  //If C is single digit\n  if(A.precision === 1){\n    const multiplicand: number = A.digits[0];\n    A.digits = B.digits.slice(0, B.precision);\n    A.precision = singleDigitMultiplication(\n      A.digits, 0, B.precision, multiplicand, A.base\n    );\n    return changeBase(A, base);\n  }\n\n  //Make minimum room for multiplication\n  const maxNewLen: number = A.precision + B.precision - 1;\n  if(A.digits.length < maxNewLen){\n    A.digits.length = maxNewLen;\n  }\n\n  //Choose best performing algorithm\n  if(A.precision < 100 && B.precision < 100){\n    A.precision = longMultiplication(\n      A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n    );\n  } else {\n    A.precision = karatsubaMultiplication(\n      A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n    );\n  }\n\n  return changeBase(A, base);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/multiply.ts","import {Integer} from '../integer';\nimport {isEven} from './isEven';\nimport {exponentiation} from '../algorithm/exponentiation';\nimport {setOne, setZero, tryMutable} from '../util/intUtils';\n\nexport function pow(A: Integer, B: Integer, isMutable?: boolean): Integer {\n  const C: Integer = tryMutable(A, isMutable);\n\n  //C^0 = 1\n  if(B.precision === 0){\n    return setOne(C);\n  }\n\n  //If power is negative\n  if(B.isNegative){\n\n    //If 1 / 0\n    if(C.precision === 0){\n      throw new EvalError(\"Divide by zero\");\n    }\n\n    return setZero(C);\n  }\n\n  //0^B = zero\n  if(C.precision === 0){\n    return C;\n  }\n\n  //If negative base and even power\n  C.isNegative = !(C.isNegative && isEven(B));\n\n  //1^B = 1\n  if(C.precision === 1 && C.digits[0] === 1){\n    return C;\n  }\n\n  //C = C^B\n  C.precision = exponentiation(\n    C.digits, 0, C.precision, C.base, B.digits.slice(0,B.precision), 0, B.precision, B.base\n  );\n\n  return C;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/pow.ts","import {Integer} from '../integer';\n\nexport function signum(A: Integer): number {\n  return A.isNegative ? -1 : A.precision === 0 ? 0 : 1;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/signum.ts","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {isInteger} from './isInteger';\nimport {setZero} from '../util/intUtils';\nimport {strToDigits} from '../util/numUtils';\n\nexport function toInteger(A: Integer | number | string, base: number = null, isMutable?: boolean): Integer {\n\n  //If already an integer\n  if(isInteger(A)){\n    return setBase(A, (base == null) ? A.base : base, isMutable);\n  }\n\n  //Convert numbers to string\n  if(typeof A === \"number\"){\n    A = '' + A;\n\n  //If not an expected type\n  } else if(typeof A !== \"string\"){\n    throw TypeError(\"Expecting type Integer | string | number\");\n  }\n\n  //Convert string to base 10\n  const B: Integer = setZero({base: 10});\n  [B.digits, B.isNegative] = strToDigits(A);\n  B.precision = B.digits.length;\n\n  //Convert to chosen base\n  return setBase(B, (base == null) ? Globals.DEFAULT_BASE : base, true)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/toInteger.ts","import {Globals} from '../globals';\nimport {Integer} from '../integer';\n\n//Assumes input cipher is adequate for base\nexport function toString(A: Integer, sep: string = null, cipher: ReadonlyArray<string> = null): string {\n\n  //If negative\n  const sign: string = A.isNegative ? \"-\" : \"\";\n\n  //If no custom cipher\n  if(cipher == null){\n\n    //If default cipher too small for base\n    if(Globals.DEFAULT_CIPHER.length < A.base){\n\n      //Print without cipher\n      sep = (sep == null) ? \":\": sep;\n      return sign + A.digits.slice(0,A.precision).reverse().join(sep);\n    }\n\n    //Use default cipher\n    cipher = Globals.DEFAULT_CIPHER;\n  }\n\n  //Print with cipher\n  sep = (sep == null) ? \"\" : sep;\n  return sign + A.digits.map(v => cipher[v]).reverse().join(sep);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/toString.ts","import {halve} from './halve';\nimport {karatsubaSquare} from './karatsubaSquare';\nimport {karatsubaMultiplication} from './karatsubaMultiplication';\n\n/*\n  f(A, B) = A^B = Math.pow(A, B)\n  Overwrites A\n  Overwrites B\n  Assumes A > 0\n  Assumes B > 0\n*/\nexport function exponentiation(\n  A: number[], minA: number, maxA: number, baseA: number,\n  B: number[], minB: number, maxB: number, baseB: number\n): number {\n  let maxC: number = 1;\n  const C: number[] = [1];\n\n  //Until power is 1\n  while(minB + 1 < maxB || B[minB] > 1){\n\n    //Divide the power in half\n    let remainder: number;\n    [maxB, remainder] = halve(B, minB, maxB, baseB);\n\n    //If remainder\n    if(remainder > 0){\n      C.length = maxC + maxA;\n      maxC = karatsubaMultiplication(C, 0, maxC, A, minA, maxA, baseA);\n    }\n\n    //Square the base\n    maxA = karatsubaSquare(A, minA, maxA, baseA);\n  }\n\n  if(C.length > 1){\n    maxA = karatsubaMultiplication(A, minA, maxA, C, 0, maxC, baseA);\n  }\n\n  return maxA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/exponentiation.ts","import {basicDivision} from './basicDivision';\nimport {karatsubaMultiplication} from './karatsubaMultiplication';\nimport {steinGCD} from './steinGCD';\n\n/*\n  f(A, B) = lcm(A, B)\n  Overwrites A\n  Asumes A > 0, B > 0\n  See: https://en.wikipedia.org/wiki/Least_common_multiple\n*/\nexport function lcm(\n  A: number[], minA: number, maxA: number,\n  B: number[], minB: number, maxB: number,\n  base: number\n): [number[], number] {\n\n  //Copy A\n  let C: number[] = A.slice(minA, maxA);\n  let maxC: number = C.length;\n\n  //Copy B\n  const D: number[] = B.slice(minB, maxB);\n  const maxD: number = D.length;\n\n  //Get gcd(A, B)\n  [C,,maxC] = steinGCD(C, 0, maxC, D, 0, maxD, base);\n  [C,,maxC] = basicDivision(A, minA, maxA, C, 0, maxC, base);\n  maxC = karatsubaMultiplication(C, 0, maxC, B, minB, maxB, base);\n  return [C, maxC];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/lcm.ts","import {safeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A, B) = A * B\n  Overwrites A\n  Assumes A > 0 and B > 0\n  Assumes A and B are not the same array\n\n  Explanation:\n      a  b  c  _  _  _\n    *\n      d  e  f\n    ------------------\n              cd ce cf\n           bd be bf\n        ad ae af\n    ------------------\n      g  h  i  j  k  l\n\n*/\nexport function longMultiplication(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n\n  //Shift A to the left\n  const lenB: number = maxB - minB;\n  const minC: number = minA + lenB;\n  safeShiftUp(A, minA, maxA, lenB);\n  zero(A, minA, minC);\n\n  //For each digit in multiplicand\n  const maxC: number = maxA + lenB;\n  for(let a: number = minC; a < maxC; ++a){\n    let carry: number = 0;\n    let i: number = a - lenB;\n\n    //Multiply by multiplier\n    for(let b: number = minB; b < maxB; ++b){\n      let v: number = A[a] * B[b] + A[i] + carry;\n      if(v < base){\n        carry = 0;\n      } else {\n        carry = 0 | (v / base);\n        v = v % base;\n      }\n      A[i++] = v;\n    }\n\n    //Add remaining carry\n    A[i] = carry;\n  }\n\n  //Return new length\n  return (A[maxC - 1] === 0) ? maxC - 1 : maxC;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/longMultiplication.ts","import {unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A) = A * A\n  Overwrites A\n\n  Explanation:\n      a   b   c   d   e   f   g   _   _   _   _   _   _   _\n    *\n      a   b   c   d   e   f   g\n    -------------------------------------------------------\n                                 ag  bg  cg  dg  eg  fg  gg\n                             af  bf  cf  df  ef  ff  fg\n                         ae  be  ce  de  ee  ef  eg\n                     ad  bd  cd  dd  de  df  dg\n                 ac  bc  cc  cd  ce  cf  cg\n             ab  bb  bc  bd  be  bf  bg\n         aa  ab  ac  ad  ae  af  ag\n    -------------------------------------------------------\n                                2ag 2bg 2cg 2dg 2eg 2fg  gg\n                            2af 2bf 2cf 2df 2ef  ff\n                        2ae 2be 2ce 2de  ee\n                    2ad 2bd 2cd  dd\n                2ac 2bc  cc\n            2ab  bb\n         aa\n    -------------------------------------------------------\n      h   i   j   k   l   m   n   o   p   q   r   s   t   u\n*/\nexport function longSquare(\n  A: number[], min: number, max: number, base: number\n): number {\n\n  //Move digits to the left\n  let newMax: number = max - min;\n  unsafeShiftUp(A, min, max, newMax);\n  zero(A, min, max);\n\n  //For every digit\n  newMax = newMax + max;\n  for(let d: number = min, s: number = max; d < newMax; d = d + 2){\n    const digit: number = A[s++];\n\n    //Square the digit\n    let carry: number = 0;\n    A[d] = A[d] + digit * digit;\n    if(A[d] >= base){\n      carry = 0 | (A[d] / base);\n      A[d] = A[d] % base;\n    }\n\n    //Multiply by higher digits twice\n    let o: number = d + 1;\n    for(let m: number = s; m < newMax; ++o){\n\n      //Multiply\n      let quotient: number = 0;\n      let product: number = A[m++] * digit;\n      if(product >= base){\n        quotient = 0 | (product / base);\n        product = product % base;\n      }\n\n      //Double\n      quotient = quotient << 1;\n      product = product << 1;\n\n      //Add\n      A[o] = A[o] + product + carry;\n      carry = quotient;\n      if(A[o] >= base){\n        carry = carry + (0 | (A[o] / base));\n        A[o] = A[o] % base;\n      }\n    }\n\n    //Place remaining carry\n    A[o] = carry;\n  }\n\n  //Return new length\n  return A[newMax - 1] === 0 ? newMax - 1 : newMax;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/longSquare.ts","/*\n  f(A, B) = A - B\n  Overwrites A\n  Assumes B > A\n*/\nexport function reverseSubtraction(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n\n  //Subtract common digits\n  let borrow: number = 0;\n  while(minA < maxA){\n    let v: number = B[minB++] - borrow - A[minA];\n    if (v < 0){\n      borrow = 1;\n      v = v + base;\n    } else {\n      borrow = 0;\n    }\n    A[minA++] = v;\n  }\n\n  //Subtract borrow\n  if(borrow > 0){\n    for(borrow = base - 1; B[minB] === 0; ++minB){\n      A[minA++] = borrow;\n    }\n    A[minA++] = B[minB++] - 1;\n  }\n\n  //Copy extra digits\n  if(minB < maxB){\n    do {\n      A[minA++] = B[minB++];\n    } while (minB < maxB);\n\n  //Check for new length\n  } else {\n    while(A[minA-1] === 0){\n      --minA;\n    }\n  }\n\n  return minA;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/reverseSubtraction.ts","//Assumes valid inputs\nexport function setBase(\n  A: number[], minA: number, maxA: number,\n  curBase: number, newBase: number\n): [number[], number] {\n\n  //If zero or same base\n  if(maxA === minA || curBase === newBase){\n    return [A, maxA];\n  }\n\n  //Create new array\n  let maxB: number = 0;\n  const B: number[] = new Array(Math.ceil(\n    (maxA - minA) * Math.log(curBase) / Math.log(newBase)\n  ));\n\n  //Return number in newBase\n  do {\n    let remainder: number = 0;\n    for(let i: number = maxA; i > minA; remainder = remainder % newBase){\n      remainder = remainder*curBase + A[--i];\n      A[i] = 0 | (remainder / newBase);\n    }\n    B[maxB++] = remainder;\n    while(A[maxA - 1] === 0){\n      if(--maxA === minA){\n        return [B, maxB];\n      }\n    }\n  } while(true);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/setBase.ts","/*\n  f(A, B) = A / B\n  Overwrites A\n  Assumes B > 0\n  Assumes A > 0\n  Assumes no leading zeros\n*/\nexport function singleDigitDivision(\n  A: number[], minA: number, maxA: number,\n  B: number, base: number\n): [number, number] {\n  let remainder: number = 0;\n  for(let a: number = maxA; a-- > minA; remainder = remainder % B){\n    remainder = remainder * base + A[a];\n    A[a] = 0 | (remainder / B);\n  }\n\n  //Get new length\n  if(A[maxA - 1] === 0){\n    --maxA;\n  }\n\n  return [maxA, remainder];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/singleDigitDivision.ts","import {Integer} from '../integer';\nimport {copy} from './copy';\n\nexport function clone(A: Integer) : Integer {\n  return copy({}, A);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functional/clone.ts","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {abs} from '../functional/abs';\nimport {add} from '../functional/add';\nimport {compare} from '../functional/compare';\nimport {copy} from '../functional/copy';\nimport {decrement} from '../functional/decrement';\nimport {divideAndRemainder} from '../functional/divideAndRemainder';\nimport {double} from '../functional/double';\nimport {gcd} from '../functional/gcd';\nimport {halve} from '../functional/halve';\nimport {increment} from '../functional/increment';\nimport {isEven} from '../functional/isEven';\nimport {lcm} from '../functional/lcm';\nimport {max} from '../functional/max';\nimport {min} from '../functional/min';\nimport {multiply} from '../functional/multiply';\nimport {negate} from '../functional/negate';\nimport {pow} from '../functional/pow';\nimport {signum} from '../functional/signum';\nimport {setBase} from '../functional/setBase';\nimport {subtract} from '../functional/subtract';\nimport {square} from '../functional/square';\nimport {toInteger} from '../functional/toInteger';\nimport {toString} from '../functional/toString';\nimport {assign} from '../util/intUtils';\n\nexport class BigInt {\n  public static get MINUS_ONE(): BigInt {return new BigInt(-1)};\n  public static get ZERO(): BigInt {return new BigInt(0)};\n  public static get ONE(): BigInt {return new BigInt(1)};\n\n  public base: number;\n  public digits: number[];\n  public precision: number;\n  public isNegative: boolean;\n\n  constructor(input: Integer | number | string) {\n    assign(this, toInteger(input, Globals.DEFAULT_BASE, false));\n    this.digits.length = this.precision;\n  }\n\n  public abs(isMutable?: boolean): BigInt {\n    return BigInt.toBigInt(abs(this, isMutable), true);\n  };\n\n  public add(addend: Integer, isMutable?: boolean): BigInt {\n    const A: Integer = add(this, addend, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public clone(): BigInt {\n    return new BigInt(this);\n  }\n\n  public compareTo(B: Integer): number {\n    return compare(this, B);\n  }\n\n  public copy(source: Integer): BigInt {\n    copy(this, source);\n    return this;\n  }\n\n  public divide(divisor: Integer, isMutable?: boolean): BigInt {\n    return this.divideAndRemainder(divisor, isMutable)[0];\n  }\n\n  public divideAndRemainder(divisor: Integer, isMutable?: boolean): [BigInt, BigInt] {\n    let Q: Integer;\n    let R: Integer;\n    [Q, R] = divideAndRemainder(this, divisor, isMutable);\n    Q.digits.length = Q.precision;\n    R.digits.length = R.precision;\n    return [BigInt.toBigInt(Q, true), <BigInt>assign(BigInt.ZERO, R)];\n  }\n\n  public double(isMutable?: boolean): BigInt {\n    return BigInt.toBigInt(double(this, isMutable), true);\n  }\n\n  public gcd(B: Integer, isMutable?: boolean): BigInt {\n    const A: Integer = gcd(this, B, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public getBase(): number {\n    return this.base;\n  }\n\n  public half(isMutable?: boolean): [BigInt, BigInt] {\n    let Q: Integer;\n    let R: Integer;\n    [Q, R] = halve(this, isMutable);\n    Q.digits.length = Q.precision;\n    return [BigInt.toBigInt(Q, true), new BigInt(R.precision)];\n  }\n\n  public static isBigInt(n: any): n is BigInt {\n    return n instanceof BigInt;\n  }\n\n  public isEven(): boolean {\n    return isEven(this);\n  }\n\n  public isOdd(): boolean {\n    return !this.isEven();\n  }\n\n  //See: https://en.wikipedia.org/wiki/Least_common_multiple\n  public lcm(B: Integer, isMutable?: boolean): BigInt {\n    const A: Integer = lcm(this, B, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public static max(A: Integer, B: Integer, isMutable?: boolean): BigInt {\n    return BigInt.toBigInt(max(A, B, isMutable), true);\n  }\n\n  public static min(A: Integer, B: Integer, isMutable?: boolean): BigInt {\n    return BigInt.toBigInt(min(A, B, isMutable), true);\n  }\n\n  public minusminus(isMutable?: boolean): BigInt {\n    const A: Integer = decrement(this, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public multiply(multiplier: Integer, isMutable?: boolean): BigInt {\n    const A: Integer = multiply(this, multiplier, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public negate(isMutable?: boolean): BigInt {\n    return BigInt.toBigInt(negate(this, isMutable), true);\n  };\n\n  public plusplus(isMutable?: boolean): BigInt {\n    return BigInt.toBigInt(increment(this, isMutable), true);\n  }\n\n  public pow(power: Integer, isMutable?: boolean): BigInt {\n    const A: Integer = pow(this, power, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public remainder(divisor: Integer, isMutable?: boolean): BigInt {\n    const R: BigInt = this.divideAndRemainder(divisor, isMutable)[1];\n    if(isMutable){\n      assign(this, R);\n    }\n    return this;\n  }\n\n  public setBase(base: number, isMutable?: boolean): BigInt {\n    const A: Integer = setBase(this, base, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public signum(): number {\n    return signum(this);\n  };\n\n  public square(isMutable?: boolean): BigInt {\n    const A: Integer = square(this, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public subtract(subtrahend: Integer, isMutable?: boolean): BigInt {\n    const A: Integer = subtract(this, subtrahend, isMutable);\n    A.digits.length = A.precision;\n    return BigInt.toBigInt(A, true);\n  }\n\n  public static toBigInt(input: Integer | number | string, isMutable?: boolean): BigInt {\n    return (BigInt.isBigInt(input) && isMutable) ? input : new BigInt(input);\n  }\n\n  public toString(sep: string = null, cipher: ReadonlyArray<string> = null): string {\n    return toString(this, sep, cipher);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/oop/bigInt.ts"],"sourceRoot":""}
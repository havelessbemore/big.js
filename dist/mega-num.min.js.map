{"version":3,"sources":["webpack://MegaNum/webpack/universalModuleDefinition","webpack://MegaNum/webpack/bootstrap","webpack://MegaNum/./src/util/intUtils.ts","webpack://MegaNum/./src/util/arrayUtils.ts","webpack://MegaNum/./src/functional/setBase.ts","webpack://MegaNum/./node_modules/babel-runtime/helpers/slicedToArray.js","webpack://MegaNum/./src/functional/compare.ts","webpack://MegaNum/./src/functional/copy.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_wks.js","webpack://MegaNum/./src/util/numUtils.ts","webpack://MegaNum/./src/globals.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_global.js","webpack://MegaNum/./node_modules/core-js/library/modules/_core.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iterators.js","webpack://MegaNum/./node_modules/core-js/library/modules/_hide.js","webpack://MegaNum/./node_modules/core-js/library/modules/_descriptors.js","webpack://MegaNum/./src/algorithm/subtraction.ts","webpack://MegaNum/./src/functional/negate.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_object-dp.js","webpack://MegaNum/./node_modules/core-js/library/modules/_an-object.js","webpack://MegaNum/./node_modules/core-js/library/modules/_has.js","webpack://MegaNum/./src/algorithm/addition.ts","webpack://MegaNum/./src/functional/toNumber.ts","webpack://MegaNum/./src/functional/toInteger.ts","webpack://MegaNum/./src/functional/add.ts","webpack://MegaNum/./src/functional/double.ts","webpack://MegaNum/./src/algorithm/double.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_to-iobject.js","webpack://MegaNum/./node_modules/core-js/library/modules/_defined.js","webpack://MegaNum/./node_modules/core-js/library/modules/_is-object.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-integer.js","webpack://MegaNum/./node_modules/core-js/library/modules/_shared-key.js","webpack://MegaNum/./src/functional/subtract.ts","webpack://MegaNum/./src/algorithm/compare.ts","webpack://MegaNum/./src/algorithm/decrement.ts","webpack://MegaNum/./src/algorithm/increment.ts","webpack://MegaNum/./src/functional/decrement.ts","webpack://MegaNum/./src/algorithm/halve.ts","webpack://MegaNum/./src/functional/isEven.ts","webpack://MegaNum/./src/functional/isInteger.ts","webpack://MegaNum/./src/algorithm/karatsubaMultiplication.ts","webpack://MegaNum/./src/functional/square.ts","webpack://MegaNum/./src/functional/abs.ts","webpack://MegaNum/./node_modules/core-js/library/modules/web.dom.iterable.js","webpack://MegaNum/./node_modules/core-js/library/modules/_cof.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iter-define.js","webpack://MegaNum/./node_modules/core-js/library/modules/_library.js","webpack://MegaNum/./node_modules/core-js/library/modules/_export.js","webpack://MegaNum/./node_modules/core-js/library/modules/_fails.js","webpack://MegaNum/./node_modules/core-js/library/modules/_dom-create.js","webpack://MegaNum/./node_modules/core-js/library/modules/_property-desc.js","webpack://MegaNum/./node_modules/core-js/library/modules/_shared.js","webpack://MegaNum/./node_modules/core-js/library/modules/_uid.js","webpack://MegaNum/./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://MegaNum/./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack://MegaNum/./node_modules/core-js/library/modules/es6.string.iterator.js","webpack://MegaNum/./node_modules/core-js/library/modules/_classof.js","webpack://MegaNum/./src/algorithm/reverseAddition.ts","webpack://MegaNum/./src/functional/divideAndRemainder.ts","webpack://MegaNum/./src/algorithm/basicDivision.ts","webpack://MegaNum/./src/algorithm/singleDigitMultiplication.ts","webpack://MegaNum/./src/functional/gcd.ts","webpack://MegaNum/./src/algorithm/steinGCD.ts","webpack://MegaNum/./src/algorithm/isEven.ts","webpack://MegaNum/./src/functional/halve.ts","webpack://MegaNum/./src/functional/increment.ts","webpack://MegaNum/./src/functional/lcm.ts","webpack://MegaNum/./src/functional/max.ts","webpack://MegaNum/./src/functional/min.ts","webpack://MegaNum/./src/functional/multiply.ts","webpack://MegaNum/./src/algorithm/karatsubaSquare.ts","webpack://MegaNum/./src/functional/pow.ts","webpack://MegaNum/./src/functional/shiftLeft.ts","webpack://MegaNum/./src/functional/shiftRight.ts","webpack://MegaNum/./src/functional/signum.ts","webpack://MegaNum/./src/functional/toString.ts","webpack://MegaNum/./src/index.ts","webpack://MegaNum/./node_modules/babel-runtime/core-js/is-iterable.js","webpack://MegaNum/./node_modules/core-js/library/fn/is-iterable.js","webpack://MegaNum/./node_modules/core-js/library/modules/es6.array.iterator.js","webpack://MegaNum/./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iter-step.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iobject.js","webpack://MegaNum/./node_modules/core-js/library/modules/_ctx.js","webpack://MegaNum/./node_modules/core-js/library/modules/_a-function.js","webpack://MegaNum/./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-primitive.js","webpack://MegaNum/./node_modules/core-js/library/modules/_redefine.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iter-create.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-create.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-dps.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-keys.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-keys-internal.js","webpack://MegaNum/./node_modules/core-js/library/modules/_array-includes.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-length.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-absolute-index.js","webpack://MegaNum/./node_modules/core-js/library/modules/_html.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-gpo.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-object.js","webpack://MegaNum/./node_modules/core-js/library/modules/_string-at.js","webpack://MegaNum/./node_modules/core-js/library/modules/core.is-iterable.js","webpack://MegaNum/./node_modules/babel-runtime/core-js/get-iterator.js","webpack://MegaNum/./node_modules/core-js/library/fn/get-iterator.js","webpack://MegaNum/./node_modules/core-js/library/modules/core.get-iterator.js","webpack://MegaNum/./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack://MegaNum/./src/algorithm/setBase.ts","webpack://MegaNum/./src/algorithm/reverseSubtraction.ts","webpack://MegaNum/./src/functional/clone.ts","webpack://MegaNum/./src/algorithm/singleDigitDivision.ts","webpack://MegaNum/./src/algorithm/lcm.ts","webpack://MegaNum/./src/algorithm/longSquare.ts","webpack://MegaNum/./src/algorithm/longMultiplication.ts","webpack://MegaNum/./src/algorithm/exponentiation.ts","webpack://MegaNum/./src/oop/bigInt.ts","webpack://MegaNum/./node_modules/babel-runtime/helpers/classCallCheck.js","webpack://MegaNum/./node_modules/babel-runtime/helpers/createClass.js","webpack://MegaNum/./node_modules/babel-runtime/core-js/object/define-property.js","webpack://MegaNum/./node_modules/core-js/library/fn/object/define-property.js","webpack://MegaNum/./node_modules/core-js/library/modules/es6.object.define-property.js"],"names":["root","factory","exports","module","define","amd","MegaNum","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","assign","target","source","base","digits","precision","isNegative","copy","A","slice","setOne","setZero","toInteger","globals_1","to","minTo","from","minFrom","maxFrom","growArray","minNewLen","maxNewLen","newLen","Globals","MAX_PRECISION","RangeError","length","printArr","min","max","minSub","arguments","maxSub","B","map","v","join","safeShiftUp","shifts","shiftDown","unsafeShiftUp","setBase_1","setBase","MIN_BASE","MAX_BASE","_setBase_1$setBase","_setBase_1$setBase2","_slicedToArray3","_isIterable3","_interopRequireDefault","_getIterator3","obj","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","err","return","TypeError","compare_1","compare","out","ratio","Math","log","ceil","intUtils_1","store","uid","USE_SYMBOL","a","b","strToDigits","trim","replace","match","j","zero","DEFAULT_BASE","CIPHER","freeze","global","self","Function","__g","core","version","__e","dP","createDesc","f","decrement_1","subtraction","minA","maxA","minB","maxB","borrow","decrement","negate","anObject","IE8_DOM_DEFINE","toPrimitive","O","P","Attributes","isObject","it","increment_1","addition","carry","increment","toInteger_1","toNumber","Number","MAX_SAFE_INTEGER","isInteger_1","numUtils_1","isInteger","_numUtils_1$strToDigi","_numUtils_1$strToDigi2","copy_1","double_1","negate_1","subtract_1","addition_1","reverseAddition_1","arrayUtils_1","add","double","subtract","reverseAddition","IObject","defined","floor","isNaN","shared","add_1","reverseSubtraction_1","subtraction_1","reverseSubtraction","halve","remainder","isEven_1","isEven","karatsubaMultiplication","halfLen","halfA","midA","midB","mediumB","mediumMaxB","medium","mediumMax","lowMax","highMin","karatsubaSquare_1","longSquare_1","square","longSquare","karatsubaSquare","abs","hide","Iterators","TO_STRING_TAG","DOMIterables","split","NAME","Collection","proto","toString","LIBRARY","$export","redefine","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","returnThis","this","Base","Constructor","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","F","ctx","has","type","own","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","C","apply","virtual","R","U","exec","document","is","createElement","bitmap","configurable","writable","copyright","id","px","random","concat","def","tag","stat","$at","String","iterated","_t","point","index","cof","ARG","T","callee","newMaxB","basicDivision_1","singleDigitDivision_1","divideAndRemainder","EvalError","_remainder","_singleDigitDivision_","singleDigitDivision","_singleDigitDivision_2","_basicDivision_1$basi","basicDivision","_basicDivision_1$basi2","singleDigitMultiplication_1","divThreeHalvesByTwo","a1","a2","a3","b1","b2","q","X","minX","maxX","Y","minY","maxY","lenY","nMt","Q","maxR","yt","ytm1","QY","iMt","maxQY","singleDigitMultiplication","multiplier","steinGCD_1","gcd","_steinGCD_1$steinGCD","steinGCD","_steinGCD_1$steinGCD2","halve_1","_halve_1$halve","_halve_1$halve3","_halve_1$halve5","_halve_1$halve7","_halve_1$halve9","xor","_halve_1$halve2","lcm_1","lcm","_lcm_1$lcm","_lcm_1$lcm2","square_1","karatsubaMultiplication_1","longMultiplication_1","multiply","multiplicand","_multiplicand","longMultiplication","mid","exponentiation_1","pow","exponentiation","toNumber_1","shiftLeft","shiftRight","signum","cipher","sign","reverse","strings","__globals__","abs_1","clone_1","clone","divideAndRemainder_1","gcd_1","max_1","min_1","multiply_1","pow_1","shiftLeft_1","shiftRight_1","signum_1","toString_1","bigInt_1","Int","BigInt","addToUnscopables","step","toIObject","_k","Arguments","propertyIsEnumerable","aFunction","fn","that","val","valueOf","descriptor","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","open","write","lt","close","Properties","result","getKeys","defineProperties","$keys","arrayIndexOf","names","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","documentElement","toObject","ObjectProto","constructor","TO_STRING","pos","charCodeAt","charAt","classof","isIterable","getIterator","iterFn","getIteratorMethod","curBase","newBase","maxC","D","maxD","newMax","digit","quotient","product","lenB","minC","baseA","baseB","input","_classCallCheck3","tryBigInt","addend","divisor","_divideAndRemainder_","_divideAndRemainder_2","ZERO","power","subtrahend","isBigInt","instance","_defineProperty2","props","protoProps","staticProps","$Object","desc"],"mappings":"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","file":"mega-num.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MegaNum\"] = factory();\n\telse\n\t\troot[\"MegaNum\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 74);\n","import {Integer} from '../integer';\n\n// tslint:disable-next-line:no-any\nexport function assign(target: any, source: Integer): Integer {\n  target.base = source.base;\n  target.digits = source.digits;\n  target.precision = source.precision;\n  target.isNegative = source.isNegative;\n  return target;\n}\n\n// tslint:disable-next-line:no-any\nexport function copy(target: any, source: Integer): Integer {\n  const A: Integer = assign(target, source);\n  A.digits = A.digits.slice(0, A.precision);\n  return A;\n}\n\n// tslint:disable-next-line:no-any\nexport function setOne(A: any): Integer {\n  A.precision = 1;\n  A.digits = [1];\n  A.isNegative = false;\n  return A;\n}\n\n// tslint:disable-next-line:no-any\nexport function setZero(A: any): Integer {\n  A.precision = 0;\n  A.digits = [];\n  A.isNegative = false;\n  return A;\n}\n\nexport function toInteger(\n  digits: number[],\n  precision: number,\n  isNegative: boolean,\n  base: number\n): Integer {\n  return {base, digits, precision, isNegative};\n}\n","import {Globals} from '../globals';\n\n//Assumes A and B not same array or sections A and B do not intersect\nexport function copy<T>(to: T[], minTo: number, from: ReadonlyArray<T>, minFrom: number, maxFrom: number): void {\n  while(minFrom < maxFrom){\n    to[minTo++] = from[minFrom++];\n  }\n}\n\nexport function growArray<T>(A: T[], minNewLen: number, maxNewLen: number): void {\n  let newLen: number = maxNewLen;\n  if(newLen > Globals.MAX_PRECISION){\n    if(minNewLen > Globals.MAX_PRECISION){\n      throw new RangeError(\n        `Array length greater than supported length ${Globals.MAX_PRECISION}`\n      );\n    }\n    newLen = minNewLen;\n  }\n\n  if(A.length < newLen){\n    A.length = newLen;\n  }\n}\n\nexport function printArr<T>(A: T[], min: number, max: number, minSub: number = min, maxSub: number = max): string {\n  const B = A.map(v => (v == null || v !== v) ? v + '' : v);\n  return \"[\" +\n    B.slice(min,minSub).join(', ') +\n    \"|\" + B.slice(minSub,maxSub).join(', ') +\n    \"|\" + B.slice(maxSub,max).join(', ') +\n  \"]\";\n}\n\nexport function safeShiftUp<T>(A: T[], min: number, max: number, shifts: number): void {\n  for(let i: number = max + shifts; max > min; A[--i] = A[--max]){\n  }\n}\n\nexport function shiftDown<T>(A: T[], min: number, max: number, shifts: number): void {\n  for(let i: number = min - shifts; min < max; A[i++] = A[min++]){\n  }\n}\n\n//Assumes shifts >= max - min, shifts > 0\nexport function unsafeShiftUp<T>(A: T[], min: number, max: number, shifts: number): void {\n  for(let i: number = min + shifts; min < max; A[i++] = A[min++]){\n  }\n}\n","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {setBase as _setBase} from '../algorithm/setBase';\n\nexport function setBase(A: Integer, base: number): Integer {\n\n  //Sanitize base\n  base = 0 | base;\n\n  //If new base too low\n  if(base < Globals.MIN_BASE){\n    throw RangeError(`${base} < MIN_BASE (${Globals.MIN_BASE})`);\n  }\n\n  //If new base too high\n  if(base > Globals.MAX_BASE){\n    throw RangeError(`${base} > MAX_BASE (${Globals.MAX_BASE})`);\n  }\n\n  //Convert to base\n  [A.digits, A.precision] = _setBase(A.digits, 0, A.precision, A.base, base);\n  A.base = base;\n  return A;\n}\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();","import {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {compare as _compare} from '../algorithm/compare';\n\nexport function compare(A: Integer, B: Integer): number {\n\n  //If self\n  if(A === B){\n    return 0;\n  }\n\n  let out = A.isNegative ? -1 : 1;\n\n  //Check if different signs\n  if(A.isNegative !== B.isNegative){\n    return out;\n  }\n\n  //If not same base\n  const base: number = A.base;\n  if(A.base !== B.base){\n\n    //Estimate number of digits of A if converted to B's base\n    const ratio: number = Math.log(A.base) / Math.log(B.base);\n    if(Math.ceil(A.precision * ratio) < B.precision){\n      return -out;\n    }\n    if(Math.ceil((A.precision - 1) * ratio) > B.precision){\n      return out;\n    }\n\n    //Convert A to B's base\n    setBase(A, B.base);\n  }\n  \n  //Compare A and B\n  out = out * _compare(\n    A.digits, 0, A.precision,\n    B.digits, 0, B.precision\n  );\n\n  //Change A back to original base (if needed)\n  setBase(A, base);\n\n  //Return result\n  return out;\n}\n","import {Integer} from '../integer';\nimport {copy as _copy} from '../util/intUtils';\n\n// tslint:disable-next-line:no-any\nexport function copy(target: any, source: Integer): Integer {\n  return _copy(target, source);\n}\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","export function max(a: number, b: number): number {\n  return (a < b) ? b : a;\n}\n\nexport function min(a: number, b: number): number {\n  return (a > b) ? b : a;\n}\n\nexport function strToDigits(s: string): [number[], boolean] {\n  s = s.trim();\n\n  //Check if empty string\n  if(s.length < 1){\n    throw new TypeError(\"NaN\");\n  }\n\n  //Check for leading sign\n  const isNegative: boolean = s[0] === '-';\n\n  //Trim signs, leading zeros and decimal part\n  s = s.replace(/^[-+]?0*/, '').replace(/\\.[0-9]+$/, '');\n\n  //Check if string is not a number\n  if(s.match(/[^\\d]/)){\n    throw new TypeError(\"NaN\");\n  }\n\n  //If zero\n  const precision: number = s.length;\n  if(precision === 0){\n    return [[], false];\n  }\n\n  //Convert to decimal array\n  const digits: number[] = new Array<number>(precision);\n  for(let i = 0, j = precision; j > 0; ++i){\n    digits[i] = +s[--j];\n  }\n\n  return [digits, isNegative];\n}\n\n//Sets indices between [min, max) to 0\nexport function zero(A: number[], min: number, max: number): void {\n  while(min < max){\n    A[min++] = 0;\n  }\n}\n","// tslint:disable-next-line:no-namespace\nexport namespace Globals {\n  export const MIN_BASE = 2;\n  export const MAX_BASE = 94906265; //2^26 < sqrt(Number.MAX_SAFE_INTEGER) < 2^27\n  export const MAX_PRECISION = 4294967295; //2^32 - 1\n\n  export let DEFAULT_BASE = 67108864; // 2^26\n  export let CIPHER: ReadonlyArray<string> = Object.freeze([\n    '0','1','2','3','4','5','6','7','8','9',\n    'A','B','C','D','E','F','G','H','I','J',\n    'K','L','M','N','O','P','Q','R','S','T',\n    'U','V','W','X','Y','Z'\n  ]);\n}\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = {};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","import {decrement} from './decrement';\n\n/*\n  f(A, B) = A - B\n  Assumes\n     A >= B\n  Note\n     Overwrites A\n*/\nexport function subtraction(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n  let a: number = minA;\n  let borrow = 0;\n\n  //Subtract common digits\n  while(minB < maxB){\n    let v: number = A[a] - borrow - B[minB++];\n    if(v < 0){\n      borrow = 1;\n      v = v + base;\n    } else {\n      borrow = 0;\n    }\n    A[a++] = v;\n  }\n\n  //Subtract borrow\n  if(borrow > 0){\n    return decrement(A, a, maxA, base);\n  }\n\n  //Find new length\n  if(a === maxA){\n    while(a-- > minA && A[a] === 0){\n    }\n    maxA = a + 1;\n  }\n\n  //Return length\n  return maxA;\n}\n","import {Integer} from '../integer';\n\nexport function negate(A: Integer): Integer {\n  A.isNegative = A.precision > 0 && !A.isNegative;\n  return A;\n}\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","import {increment} from './increment';\n\n/*\n  f(A, B) = A + B\n  Overwrites A\n  Assumes\n    A.length >= B.length\n    A and B not same array or non-intersecting segments\n*/\nexport function addition(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number{\n  let carry = 0;\n\n  //Add common digits\n  while (minB < maxB){\n    let v: number = A[minA] + B[minB++] + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 1;\n      v = v - base;\n    }\n    A[minA++] = v;\n  }\n\n  //Return length\n  return (carry > 0) ? increment(A, minA, maxA, base) : maxA;\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {toInteger} from './toInteger';\n\nexport function toNumber(A: Integer): number {\n\n  // If A is too large to be represented as a number\n  const B = toInteger(Number.MAX_SAFE_INTEGER, A.base);\n  B.isNegative = A.isNegative;\n  const comparison = A.isNegative ? compare(B, A) : compare(A, B);\n  if (comparison > 0) {\n    throw new RangeError(\"Value too large for number conversion\");\n  }\n\n  // Convert A to a number\n  const arr = A.digits;\n  const base = A.base;\n  let a = 0;\n  for (let i = A.precision; i > 0; a = a * base + arr[--i]) {\n  }\n\n  // Return result\n  return A.isNegative ? -a : a;\n}\n","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {isInteger} from './isInteger';\nimport {setZero} from '../util/intUtils';\nimport {strToDigits} from '../util/numUtils';\n\nexport function toInteger(A: Integer | number | string, base?: number): Integer {\n\n  //If already an integer\n  if(isInteger(A)){\n    return A;\n  }\n\n  //Convert numbers to string\n  if(typeof A === \"number\"){\n    A = '' + A;\n\n  //If not an expected type\n  } else if(typeof A !== \"string\"){\n    throw TypeError(\"Expecting type Integer | string | number\");\n  }\n\n  //Convert string to base 10\n  const B: Integer = setZero({base: 10});\n  [B.digits, B.isNegative] = strToDigits(A);\n  B.precision = B.digits.length;\n\n  //Convert to chosen base\n  return setBase(B, (base == null) ? Globals.DEFAULT_BASE : base);\n}\n","import {Integer} from '../integer';\nimport {copy} from './copy';\nimport {double} from './double';\nimport {negate} from './negate';\nimport {setBase} from './setBase';\nimport {subtract} from './subtract';\nimport {addition} from '../algorithm/addition';\nimport {reverseAddition} from '../algorithm/reverseAddition';\nimport {growArray} from '../util/arrayUtils';\n\n//A = toInteger([3], 1, false, 10);\n//B = toInteger([1], 1, true, 10);\nexport function add(A: Integer, B: Integer): Integer {\n\n  //If self\n  if(A === B){\n    return double(A);\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return A;\n  }\n\n  const base: number = A.base;\n\n  //If A is zero\n  if(A.precision === 0){\n    copy(A, B);\n    return setBase(A, base);\n  }\n\n  //If signs differ\n  if(A.isNegative !== B.isNegative){\n\n    //Change sign, subtract, change sign again\n    negate(A);\n    subtract(A, B);\n    return negate(A);\n  }\n\n  //Normalize to B's base\n  setBase(A, B.base);\n\n  //If C < B\n  if(A.precision < B.precision){\n\n    //Update C's digit array to minimum result size\n    growArray(A.digits, B.precision, B.precision + 1);\n\n    //Add\n    A.precision = reverseAddition(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n\n  //If A >= B\n  } else {\n\n    //Add\n    A.precision = addition(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n  }\n\n  //Change A back to original base\n  return setBase(A, base);\n}\n","import {Integer} from '../integer';\nimport {double as _double} from '../algorithm/double';\n\nexport function double(A: Integer): Integer {\n  A.precision = _double(A.digits, 0, A.precision, A.base);\n  return A;\n}\n","/*\nf(A) = A + A\nOverwrites A\n*/\nexport function double(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Double\n  let carry = 0;\n  while(minA < maxA){\n    let v: number = (A[minA] << 1) + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 1;\n      v = v - base;\n    }\n    A[minA++] = v;\n  }\n\n  //Add carry\n  if (carry > 0){\n    A[minA++] = 1;\n  }\n\n  //Return length\n  return minA;\n}\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","import {Integer} from '../integer';\nimport {add} from './add';\nimport {compare} from './compare';\nimport {copy} from './copy';\nimport {negate} from './negate';\nimport {setBase} from './setBase';\nimport {reverseSubtraction} from '../algorithm/reverseSubtraction';\nimport {subtraction} from '../algorithm/subtraction';\nimport {setZero} from '../util/intUtils';\n\nexport function subtract(A: Integer, B: Integer): Integer {\n\n  //If subtracting itself\n  if(A === B){\n    return setZero(A);\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return A;\n  }\n\n  const base: number = A.base;\n\n  //If A is zero\n  if(A.precision === 0){\n\n    //Copy B\n    copy(A, B);\n    negate(A);\n    return setBase(A, base);\n  }\n\n  //If signs differ\n  if(A.isNegative !== B.isNegative){\n\n    //Change sign, add, change sign again\n    negate(A);\n    add(A, B);\n    return negate(A);\n  }\n\n  //Normalize to B's base\n  setBase(A, B.base);\n\n  //Compare A and B\n  const c = A.isNegative ? compare(B, A) : compare(A, B);\n\n  //If A == B\n  if(c === 0){\n    A.base = base;\n    return setZero(A);\n  }\n\n  //If A < B\n  if(c < 0){\n\n    //Switch sign\n    negate(A);\n\n    //Make room for subtraction\n    if(A.digits.length < B.precision){\n      A.digits.length = B.precision;\n    }\n\n    //Subtract\n    A.precision = reverseSubtraction(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n\n  //If A > B\n  } else {\n    A.precision = subtraction(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n  }\n\n  return setBase(A, base);\n}\n","//Assumes valid inputs\n//Assumes numbers are in same base\nexport function compare(\n  A: ReadonlyArray<number>, minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number\n): number {\n\n  //Compare number of digits\n  const d: number = maxA - minA - maxB + minB;\n  if(d !== 0){\n    return d < 0 ? -1 : 1;\n  }\n\n  //Compare digits\n  while(maxA > minA){\n    if(A[--maxA] !== B[--maxB]){\n      return A[maxA] < B[maxB] ? -1 : 1;\n    }\n  }\n\n  //Numbers are equal\n  return 0;\n}\n","/*\n  f(A) = A - 1\n  Overwrites A\n  Assumes A > 0\n*/\nexport function decrement(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Deal with any borrows\n  for(const borrow: number = base - 1; A[minA] === 0; A[minA++] = borrow){\n  }\n\n  //Subtract one\n  A[minA] = A[minA] - 1;\n\n  //Return length\n  return (minA+1 === maxA && A[minA] === 0) ? maxA - 1 : maxA;\n}\n","/*\n  f(A) = A + 1\n  Overwrites A\n  Assumes A >= 0\n*/\n\nexport function increment(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Deal with any carries\n  for(--base; minA < maxA && A[minA] === base; A[minA++] = 0){\n  }\n\n  //Add one\n  if(minA === maxA){\n    A[maxA++] = 1;\n  } else {\n    A[minA] = A[minA] + 1;\n  }\n\n  //Return length\n  return maxA;\n}\n","import {Integer} from '../integer';\nimport {decrement as _decrement} from '../algorithm/decrement';\nimport {increment} from '../algorithm/increment';\nimport {setOne} from '../util/intUtils';\n\nexport function decrement(A: Integer): Integer {\n\n  //If negative\n  if(A.isNegative){\n    A.precision = increment(A.digits, 0, A.precision, A.base);\n\n  //If zero\n  } else if (A.precision === 0){\n    setOne(A);\n    A.isNegative = true;\n\n  //If positive\n  } else {\n    A.precision = _decrement(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n","/*\n  f(A) = A / 2\n  Overwrites A\n  Assumes A > 0\n*/\nexport function halve(\n  A: number[], minA: number, maxA: number, base: number\n): [number, number] {\n\n  //Halve\n  let remainder = 0;\n  for(let i: number = maxA; i-- > minA; A[i] = A[i] >>> 1){\n    A[i] = A[i] + (base & -remainder);\n    remainder = A[i] & 1;\n  }\n\n  //Get new length\n  if(A[maxA - 1] === 0){\n    --maxA;\n  }\n\n  return [maxA, remainder];\n}\n","import {Integer} from '../integer';\nimport {isEven as _isEven} from '../algorithm/isEven';\n\nexport function isEven(A: Integer): boolean {\n  return _isEven(A.digits, 0, A.precision, A.base);\n}\n","import {Integer} from '../integer';\n\n// tslint:disable-next-line:no-any\nexport function isInteger(A: any): A is Integer {\n  return A.hasOwnProperty('base')\n  && A.hasOwnProperty('digits')\n  && A.hasOwnProperty('precision')\n  && A.hasOwnProperty('isNegative');\n}\n","import {addition} from './addition';\nimport {reverseAddition} from './reverseAddition';\nimport {subtraction} from './subtraction';\nimport {copy, unsafeShiftUp} from '../util/arrayUtils';\nimport {min, max, zero} from '../util/numUtils';\n\n/*\n  f(A) = A * B\n  Overwrites A\n  Assumes A > 0 and B > 0\n  Assumes A and B are not the same array\n  Explanation: https://en.wikipedia.org/wiki/Karatsuba_algorithm\n*/\nexport function karatsubaMultiplication(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n  let halfLen: number = max(maxA - minA, maxB - minB);\n\n  //Base case\n  if(halfLen < 2){\n    halfLen = A[minA] * B[minB];\n    if(halfLen < base){\n      A[maxA] = 0;\n    } else {\n      A[maxA++] = 0 | (halfLen / base);\n      halfLen = halfLen % base;\n    }\n    A[minA] = halfLen;\n    return maxA;\n  }\n\n  //Split the numbers in half\n  halfLen = (halfLen + 1) >>> 1;\n  const halfA: number = minA + halfLen;\n  const midA: number = min(halfA, maxA);\n  const midB: number = min(minB + halfLen, maxB);\n\n  //mediumB = lowB + highB\n  const mediumB: number[] = new Array(midB - minB + 1);\n  copy(mediumB, 0, B, minB, midB);\n  const mediumMaxB: number = addition(\n    mediumB, 0, midB - minB, B, midB, maxB, base\n  );\n\n  //medium = lowA + highA\n  const medium: number[] = new Array(midA - minA + 1 + mediumMaxB);\n  copy(medium, 0, A, minA, midA);\n  let mediumMax: number = addition(medium, 0, midA - minA, A, midA, maxA, base);\n\n  //medium = medium * mediumB\n  mediumMax = karatsubaMultiplication(\n    medium, 0, mediumMax, mediumB, 0, mediumMaxB, base\n  );\n\n  //Shift highA left\n  A[maxA] = 0;\n  unsafeShiftUp(A, midA, maxA, halfLen);\n\n  //lowA = lowA * lowB\n  const lowMax: number = karatsubaMultiplication(\n    A, minA, midA, B, minB, midB, base\n  );\n\n  //medium = medium - lowA\n  mediumMax = subtraction(medium, 0, mediumMax, A, minA, lowMax, base);\n\n  //A = medium*(base^halfLen) + lowA\n  if(midA === maxA || midB === maxB){\n    if(lowMax <= halfA){\n      maxA = halfA + mediumMax;\n      zero(A, lowMax, halfA);\n      copy(A, halfA, medium, 0, mediumMax);\n    } else if(mediumMax > lowMax - halfA){\n      maxA = reverseAddition(A, halfA, lowMax, medium, 0, mediumMax, base);\n    } else {\n      maxA = addition(A, halfA, lowMax, medium, 0, mediumMax, base);\n    }\n    return maxA;\n  }\n\n  //Fill unused space with zero\n  zero(A, lowMax, maxA);\n\n  //highA = highA * highB\n  const highMin: number = midA + halfLen;\n  maxA = karatsubaMultiplication(\n    A, highMin, maxA + halfLen, B, midB, maxB, base\n  );\n\n  //medium = medium - highA\n  mediumMax = subtraction(medium, 0, mediumMax, A, highMin, maxA, base);\n\n  //A = highA*(base^len) + medium*(base^halfLen) + lowA\n  maxA = addition(A, halfA, maxA, medium, 0, mediumMax, base);\n  return maxA;\n}\n","import {Integer} from '../integer';\nimport {karatsubaSquare} from '../algorithm/karatsubaSquare';\nimport {longSquare} from '../algorithm/longSquare';\nimport {growArray} from '../util/arrayUtils';\n\nexport function square(A: Integer): Integer {\n\n  //If zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //Make positive\n  A.isNegative = false;\n\n  //Make minimum room for squaring\n  const maxNewLen: number = 2 * A.precision;\n  growArray(A.digits, maxNewLen - 1, maxNewLen);\n\n  //Choose best performing algorithm\n  if(A.precision < 100){\n    A.precision = longSquare(A.digits, 0, A.precision, A.base);\n  } else {\n    A.precision = karatsubaSquare(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n","import {Integer} from '../integer';\n\nexport function abs(A: Integer): Integer {\n  A.isNegative = false;\n  return A;\n}\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = true;\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","import {addition} from './addition';\n\n/*\n  f(A, B) = A + B\n  Overwrites A\n  Assumes\n    A < B\n    A and B not overlapping array segments\n*/\nexport function reverseAddition(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number{\n\n  //Add extra digits to A\n  const newMaxB: number = minB - minA + maxA;\n  for(let b: number = newMaxB; b < maxB; A[maxA++] = B[b++]){\n  }\n\n  //Do normal addition\n  return addition(A, minA, maxA, B, minB, newMaxB, base);\n}\n","import {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {basicDivision} from '../algorithm/basicDivision';\nimport {singleDigitDivision} from '../algorithm/singleDigitDivision';\nimport {assign, setOne, setZero} from '../util/intUtils';\n\nexport function divideAndRemainder(A: Integer, B: Integer): [Integer, Integer] {\n\n  //If A / 0\n  if(B.precision === 0){\n    throw new EvalError(\"Divide by zero\");\n  }\n\n  //If self\n  if(A === B){\n    return [setOne(A), setZero({base: A.base})];\n  }\n\n  //Divide signs\n  A.isNegative = A.isNegative !== B.isNegative;\n\n  //If 0 / B or B = 1\n  if(A.precision === 0 || (B.precision === 1 && B.digits[0] === 1)){\n    return [A, setZero({base: A.base})];\n  }\n\n  //If A = 1\n  if(A.precision === 1 && A.digits[0] === 1){\n    return [setZero(A), setOne({base: A.base})];\n  }\n\n  //If different bases\n  const base: number = A.base;\n  if(base !== B.base){\n\n    //If A's max length in B's base < B's length\n    const ratio: number = Math.log(base) / Math.log(B.base);\n    if(Math.ceil(A.precision * ratio) < B.precision){\n      const remainder: Integer = assign({}, A);\n      return [setZero(A), remainder];\n    }\n\n    //Normalize bases\n    setBase(A, B.base);\n  }\n\n  //If A's length < B's length\n  if(A.precision < B.precision){\n    setBase(A, base);\n    const remainder: Integer = assign({}, A);\n    return [setZero(A), remainder];\n  }\n\n  //Choose best algorithm\n  const R: Integer = setOne({base: A.base});\n  if(B.precision < 2){\n    [A.precision, R.digits[0]] = singleDigitDivision(\n      A.digits, 0, A.precision, B.digits[0], A.base\n    );\n    if(R.digits[0] === 0){\n      setZero(R);\n    }\n  } else {\n    [\n      A.digits, R.digits, A.precision, R.precision\n    ] = basicDivision(\n      A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n    );\n  }\n\n  //Return A and R\n  setBase(A, base);\n  setBase(R, base);\n  return [A, R];\n}\n","import {compare} from './compare';\nimport {singleDigitMultiplication} from './singleDigitMultiplication';\nimport {subtraction} from './subtraction';\nimport {copy} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(X, Y) = X / Y\n  Overwrites X\n  Assumes no leading zeros\n  Assumes X.length >= Y.length >= 2\n  See: http://cacr.uwaterloo.ca/hac/about/chap14.pdf\n\n  INPUT: positive integers x = (xn ··· x1x0)b, y = (yt ··· y1y0)b with n ≥ t ≥ 1, yt != 0\n  OUTPUT: the quotient q = (qn−t ··· q1q0)b and remainder r = (rt ··· r1r0)b such that x = qy + r, 0 ≤ r < y\n*/\nexport function basicDivision(\n  X: number[], minX: number, maxX: number,\n  Y: ReadonlyArray<number>, minY: number, maxY: number,\n  base: number\n): [number[], number[], number, number] {\n\n  //1. Initialize the quotient\n  const lenY: number = maxY - minY;\n  const nMt: number = maxX - minX - lenY;\n  const Q: number[] = new Array(nMt + 1);\n  zero(Q, 0, nMt + 1);\n\n  //2. While X ≥ Yb^(n−t)\n  let maxR: number = maxX;\n  while(compare(X, minX + nMt, maxR, Y, minY, maxY) >= 0){\n\n    //Q[n−t] ← Q[n−t] + 1\n    ++Q[nMt];\n\n    //x ← x − Bb^(n−t)\n    maxR = subtraction(X, minX + nMt, maxR, Y, minY, maxY, base);\n  }\n\n  //3. For i from n down to (t + 1)\n  const yt: number = Y[maxY-1];\n  const ytm1: number = Y[maxY-2];\n  const QY: number[] = new Array(lenY + 1);\n  for(let i: number = maxX - 1, iMt: number = nMt; iMt-- > 0; --i){\n\n    //3.1 If x[i] = y[t] then set q[i−t−1] ← b − 1; otherwise set q[i−t−1] ← (x[i]b + x[i−1]) / y[t]\n    //3.2 While q[i−t−1] * (y[t]b + y[t−1]) > x[i]b^2 + x[i−1]b + x[i−2]\n    Q[iMt] = divThreeHalvesByTwo(X[i], X[i-1], X[i-2], yt, ytm1, base);\n\n    //3.3 x ← x − q[i−t−1] * yb^(i−t−1)\n    //3.4 If x < 0 then set x ← x + yb^(i−t−1) and q[i−t−1] ← q[i−t−1] − 1\n    if(Q[iMt] === 0){\n      continue;\n    }\n    copy(QY, 0, Y, minY, maxY);\n    let maxQY: number = singleDigitMultiplication(QY, 0, lenY, Q[iMt], base);\n    if(compare(QY, 0, maxQY, X, minX + iMt, maxR) > 0){\n      --Q[iMt];\n      maxQY = subtraction(QY, 0, maxQY, Y, minY, maxY, base);\n    }\n    maxR = subtraction(X, minX + iMt, maxR, QY, 0, maxQY, base);\n  }\n\n  //4. r ← x\n  //Adjust length of remainder\n  while(maxR > minX && X[maxR - 1] === 0){\n    --maxR;\n  }\n\n  //5. Return(q,r)\n  return [Q, X, (Q[nMt] === 0) ? nMt : nMt + 1, maxR];\n}\n\n/*\n  See: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.47.565&rep=rep1&type=pdf\n*/\nfunction divThreeHalvesByTwo(a1: number, a2: number, a3: number, b1: number, b2: number, base: number): number {\n  let q: number = a1*base + a2;\n  let r: number = q % b1;\n  q = 0 | (q / b1);\n  r = r*base - q*b2 + a3;\n  if(r < 0){\n    r = r + b1*base + b2;\n    q = (r < 0) ? q - 2 : q - 1;\n  }\n  return q;\n}\n","/*\n  f(A,B) = A*B\n  Overwrites A\n  Assumes B > 0\n*/\nexport function singleDigitMultiplication(\n  A: number[], minA: number, maxA: number,\n  multiplier: number, base: number\n): number {\n\n  //Multiply multiplicand by multiplier\n  let carry = 0;\n  while(minA < maxA){\n    let v: number = (A[minA] * multiplier) + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 0 | (v / base);\n      v = v % base;\n    }\n    A[minA++] = v;\n  }\n\n  //Add remaining carry\n  if(carry > 0){\n    A[minA++] = carry;\n  }\n\n  //Return length\n  return minA;\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {copy} from './copy';\nimport {setBase} from './setBase';\nimport {steinGCD} from '../algorithm/steinGCD';\n\nexport function gcd(A: Integer, B: Integer): Integer {\n\n  //Make A positive\n  A.isNegative = false;\n\n  //If GCD of self or B = 0\n  if(A === B || B.precision === 0){\n    return A;\n  }\n\n  //If A = 0\n  if(A.precision === 0){\n    copy(A, B);\n    A.isNegative = false;\n    return A;\n  }\n\n  //If |A| > 0 && |B| > 0\n  const base: number = A.base;\n\n  //Normalize the bases\n  setBase(A, B.base);\n\n  //If A != B\n  if(compare(A, B) !== 0){\n\n    //Calculate GCD\n    [A.digits,,A.precision] = steinGCD(\n      A.digits, 0, A.precision,\n      B.digits.slice(0, B.precision), 0, B.precision,\n      A.base\n    );\n  }\n\n  //Return A to original base\n  return setBase(A, base);\n}\n","import {compare} from './compare';\nimport {double} from './double';\nimport {halve} from './halve';\nimport {isEven} from './isEven';\nimport {subtraction} from './subtraction';\n\n/*\nf(A, B) = GCD(A, B)\nOverwrites A, B\nExpects A > 0, B > 0\n//Assumes A != B\nSee: https://en.wikipedia.org/wiki/Binary_GCD_algorithm\n*/\nexport function steinGCD(\n  A: number[], minA: number, maxA: number,\n  B: number[], minB: number, maxB: number,\n  base: number\n): [number[], number, number] {\n\n  //Count and remove common factors of 2\n  let shifts = 0;\n  while(isEven(A, minA, maxA, base) && isEven(B, minB, maxB, base)){\n    [maxA] = halve(A, minA, maxA, base);\n    [maxB] = halve(B, minB, maxB, base);\n    ++shifts;\n  }\n\n  //Remove extra factors of 2 in A\n  while(isEven(A, minA, maxA, base)){\n    [maxA] = halve(A, minA, maxA, base);\n  }\n\n  //Remove extra factors of 2 in B\n  while(isEven(B, minB, maxB, base)){\n    [maxB] = halve(B, minB, maxB, base);\n  }\n\n  //A will always be odd from now on\n  //While A != B\n  while (true) {\n    let c = compare(A, minA, maxA, B, minB, maxB);\n\n    if (c === 0){\n      break;\n    }\n\n    //Switch A and B iff A > B\n    if(c > 0){\n      const C: number[] = A;\n      A = B;\n      B = C;\n      c = minA;\n      minA = minB;\n      minB = c;\n      c = maxA;\n      maxA = maxB;\n      maxB = c;\n    }\n\n    //B = B - A\n    maxB = subtraction(B, minB, maxB, A, minA, maxA, base);\n\n    //B is now even so halve it at least once\n    do {\n      [maxB] = halve(B, minB, maxB, base);\n    } while (isEven(B, minB, maxB, base));\n  }\n\n  //Restore common factors of 2 (A = A << shifts)\n  while(shifts-- > 0){\n    maxA = double(A, minA, maxA, base);\n  }\n\n  return [A, minA, maxA];\n}\n","export function isEven(\n  A: ReadonlyArray<number>, minA: number, maxA: number, base: number\n): boolean {\n\n  //If zero\n  if(minA === maxA){\n    return true;\n  }\n\n  //If even base\n  if((base & 1) === 0){\n    return (A[minA] & 1) === 0;\n  }\n\n  //If odd base\n  let xor = 0;\n  do {\n    xor = xor ^ A[minA++];\n  } while(minA < maxA);\n  return (xor & 1) === 0;\n}\n","import {Integer} from '../integer';\nimport {decrement} from './decrement';\nimport {halve as _halve} from '../algorithm/halve';\nimport {setZero, setOne} from '../util/intUtils';\n\nexport function halve(A: Integer): [Integer, Integer] {\n  const remainder: Integer = setZero({base: A.base});\n\n  //If zero\n  if(A.precision === 0){\n    return [A, remainder];\n  }\n\n  //Halve\n  [A.precision, remainder.precision] = _halve(A.digits, 0, A.precision, A.base);\n\n  //If no remainder\n  if(remainder.precision === 0){\n    return [A, remainder];\n  }\n\n  //If remainder and C is negative\n  if(A.isNegative){\n\n    //Round down (e.g. Math.floor(-49.5) = -50)\n    decrement(A);\n  }\n\n  return [A, setOne(remainder)];\n}\n","import {Integer} from '../integer';\nimport {decrement} from '../algorithm/decrement';\nimport {increment as _increment} from '../algorithm/increment';\n\nexport function increment(A: Integer): Integer {\n\n  //If negative\n  if(A.isNegative){\n    A.precision = decrement(A.digits, 0, A.precision, A.base);\n\n    //If now zero\n    if(A.precision === 0){\n      A.isNegative = false;\n    }\n\n  //If positive\n  } else {\n    A.precision = _increment(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n","import {Integer} from '../integer';\nimport {copy} from './copy';\nimport {setBase} from './setBase';\nimport {lcm as _lcm} from '../algorithm/lcm';\nimport {setZero} from '../util/intUtils';\n\n//See: https://en.wikipedia.org/wiki/Least_common_multiple\nexport function lcm(A: Integer, B: Integer): Integer {\n\n  //Make A positive\n  A.isNegative = false;\n\n  //If LCM of self or A = 0 or B = 1\n  if(A === B || A.precision === 0 || (B.precision === 1 && B.digits[0] === 1)){\n    return A;\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return setZero(A);\n  }\n\n  const base: number = A.base;\n\n  //If A = 1\n  if(A.precision === 1 && A.digits[0] === 1){\n    copy(A, B);\n    A.isNegative = false;\n\n  //If A > 1 and B > 1\n  } else {\n\n    //Normalize bases\n    setBase(A, B.base);\n\n    //Calculate LCM\n    [A.digits, A.precision] = _lcm(\n      A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n    );\n  }\n\n  //Change A to original base\n  return setBase(A, base);\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\n\nexport function max(A: Integer, B: Integer): Integer {\n  return compare(A, B) < 0 ? B : A;\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\n\nexport function min(A: Integer, B: Integer): Integer {\n  return compare(A, B) > 0 ? B : A;\n}\n","import {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {square} from './square';\nimport {double} from '../algorithm/double';\nimport {karatsubaMultiplication} from '../algorithm/karatsubaMultiplication';\nimport {longMultiplication} from '../algorithm/longMultiplication';\nimport {singleDigitMultiplication} from '../algorithm/singleDigitMultiplication';\nimport {growArray} from '../util/arrayUtils';\nimport {setZero} from '../util/intUtils';\n\nexport function multiply(A: Integer, B: Integer): Integer {\n\n  //If self\n  if(A === B){\n    return square(A);\n  }\n\n  //If A is zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return setZero(A);\n  }\n\n  //Multiply signs\n  A.isNegative = A.isNegative !== B.isNegative;\n\n  //Normalize to B's base\n  const base: number = A.base;\n  setBase(A, B.base);\n\n  //If B is single digit\n  if(B.precision === 1){\n    const multiplicand: number = B.digits[0];\n\n    //If more than doubling\n    if(multiplicand > 2){\n      A.precision = singleDigitMultiplication(\n        A.digits, 0, A.precision, multiplicand, A.base\n      );\n\n    //If doubling\n    } else if(multiplicand === 2){\n      A.precision = double(A.digits, 0, A.precision, A.base);\n    }\n\n  //If A is single digit\n  } else if(A.precision === 1){\n    const multiplicand: number = A.digits[0];\n\n    //Copy B to A\n    A.precision = B.precision;\n    A.digits = B.digits.slice(0, B.precision);\n\n    //If more than doubling\n    if(multiplicand > 2){\n      A.precision = singleDigitMultiplication(\n        A.digits, 0, A.precision, multiplicand, A.base\n      );\n    } else if(multiplicand === 2){\n      A.precision = double(A.digits, 0, A.precision, A.base);\n    }\n\n  } else {\n\n    //Make room for multiplication\n    const maxNewLen: number = A.precision + B.precision;\n    growArray(A.digits, maxNewLen - 1, maxNewLen);\n\n    //Choose best performing algorithm\n    if(A.precision < 100 && B.precision < 100){\n      A.precision = longMultiplication(\n        A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n      );\n    } else {\n      A.precision = karatsubaMultiplication(\n        A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n      );\n    }\n  }\n\n  return setBase(A, base);\n}\n","import {addition} from './addition';\nimport {subtraction} from './subtraction';\nimport {copy, unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A) = A * A\n  Overwrites A\n  Assumes A > 0\n  See: https://en.wikipedia.org/wiki/Karatsuba_algorithm\n*/\nexport function karatsubaSquare(\n  A: number[], min: number, max: number, base: number\n): number {\n  let halfLen: number = max - min;\n\n  //Base case\n  if(halfLen < 2){\n    halfLen = A[min] * A[min];\n    if(halfLen < base){\n      A[max] = 0;\n    } else {\n      A[max++] = 0 | (halfLen / base);\n      halfLen = halfLen % base;\n    }\n    A[min] = halfLen;\n    return max;\n  }\n\n  //Split the number in half\n  halfLen = (halfLen + 1) >>> 1;\n  const mid: number = min + halfLen;\n\n  //medium = low + high\n  const medium: number[] = new Array(2*halfLen + 2);\n  copy(medium, 0, A, min, mid);\n  let mediumMax: number = addition(medium, 0, halfLen, A, mid, max, base);\n\n  //Shift high left\n  A[max] = 0;\n  unsafeShiftUp(A, mid, max, halfLen);\n\n  //low * low\n  const lowMax: number = karatsubaSquare(A, min, mid, base);\n\n  //Fill unused space with zero\n  zero(A, lowMax, max);\n\n  //high * high\n  const highMin = mid + halfLen;\n  max = karatsubaSquare(A, highMin, max + halfLen, base);\n\n  //medium = medium * medium - low - high\n  mediumMax = karatsubaSquare(medium, 0, mediumMax, base);\n  mediumMax = subtraction(medium, 0, mediumMax, A, min, lowMax, base);\n  mediumMax = subtraction(medium, 0, mediumMax, A, highMin, max, base);\n\n  //A = high*(base^len) + medium*(base ^ halfLen) + low\n  return addition(A, mid, max, medium, 0, mediumMax, base);\n}\n","import {Integer} from '../integer';\nimport {isEven} from './isEven';\nimport {exponentiation} from '../algorithm/exponentiation';\nimport {growArray} from '../util/arrayUtils';\nimport {setOne, setZero} from '../util/intUtils';\n\nexport function pow(A: Integer, B: Integer): Integer {\n\n  //C^0 = 1\n  if(B.precision === 0){\n    return setOne(A);\n  }\n\n  //If power is negative\n  if(B.isNegative){\n\n    //If 1 / 0\n    if(A.precision === 0){\n      throw new EvalError(\"Divide by zero\");\n    }\n\n    return setZero(A);\n  }\n\n  //0^B = zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //If negative base and even power\n  A.isNegative = A.isNegative && !isEven(B);\n\n  //1^B = 1\n  if(A.precision === 1 && A.digits[0] === 1){\n    return A;\n  }\n\n  //Set new size\n  growArray(A.digits,\n\n    //Min new size\n    (A.precision - 1) * (B.base ** (B.precision - 1)) + 1,\n\n    //Max new size\n    A.precision * ((B.base ** B.precision) - 1)\n  );\n\n  //C = C^B\n  A.precision = exponentiation(\n    A.digits, 0, A.precision, A.base,\n    B.digits.slice(0,B.precision), 0, B.precision, B.base\n  );\n\n  return A;\n}\n","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {toNumber} from './toNumber';\nimport {safeShiftUp, unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\nexport function shiftLeft(A: Integer, B: Integer): Integer {\n\n  // If shifting by a negative number\n  if (B.isNegative) {\n    throw new EvalError('Cannot make negative left shifts');\n  }\n  \n  // If shifting 0 or shifting by 0\n  if (A.precision === 0 || B.precision === 0) {\n    return A;\n  }\n\n  // Convert B to number\n  const b = toNumber(B);\n\n  // Check if shift too large\n  if (b > Globals.MAX_PRECISION - A.precision) {\n    throw new RangeError(\n      `Left shift result larger than max precision ${Globals.MAX_PRECISION}`\n    );\n  }\n\n  // Shift A left by b\n  A.digits.length = A.precision + b;\n  if (b >= A.precision) {\n    unsafeShiftUp(A.digits, 0, A.precision, b);\n  } else {\n    safeShiftUp(A.digits, 0, A.precision, b);\n  }\n  zero(A.digits, 0, b);\n  A.precision = A.precision + b;\n\n  // Return result\n  return A;\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {toInteger} from './toInteger';\nimport {toNumber} from './toNumber';\nimport {shiftDown} from '../util/arrayUtils';\nimport {setZero} from '../util/intUtils';\n\nexport function shiftRight(A: Integer, B: Integer): Integer {\n\n  // If shifting by a negative number\n  if (B.isNegative) {\n    throw new EvalError('Cannot make negative right shifts');\n  }\n\n  // If shifting 0 or shifting by 0\n  if (A.precision === 0 || B.precision === 0) {\n    return A;\n  }\n\n  // If shifting down to 0\n  const C = toInteger(A.precision, B.base);\n  if (compare(B, C) >= 0) {\n    return setZero(A);\n  }\n\n  // Convert B to number\n  const b = toNumber(B);\n\n  // Shift A right by b\n  shiftDown(A.digits, 0, A.precision, b);\n  A.digits.length = A.precision = A.precision - b;\n\n  // Return result\n  return A;\n}\n","import {Integer} from '../integer';\n\nexport function signum(A: Integer): number {\n  return A.isNegative ? -1 : A.precision === 0 ? 0 : 1;\n}\n","import {Globals} from '../globals';\nimport {Integer} from '../integer';\n\n//Assumes input cipher is adequate for base\nexport function toString(A: Integer): string {\n  const cipher = Globals.CIPHER;\n\n  //If zero\n  if(A.precision === 0){\n    return (cipher.length < A.base) ? '0' : cipher[0];\n  }\n\n  //If negative\n  const sign: string = A.isNegative ? \"-\" : \"\";\n\n  //Print without cipher if cipher too small for base\n  if(cipher.length < A.base){\n    return sign + A.digits.slice(0, A.precision).reverse().join(':');\n  }\n\n  //Print with cipher\n  let i = 0;\n  let n: number = A.precision;\n  const digits = A.digits;\n  const strings = new Array(n);\n  while(n > 0){\n    strings[i++] = cipher[digits[--n]];\n  }\n  return sign + strings.join('');\n}\n","//Globals\nexport {Globals as __globals__} from './globals';\n\n//Functional\nexport {abs} from './functional/abs';\nexport {add} from './functional/add';\nexport {clone} from './functional/clone';\nexport {compare} from './functional/compare';\nexport {copy} from './functional/copy';\nexport {decrement} from './functional/decrement';\nexport {divideAndRemainder} from './functional/divideAndRemainder';\nexport {double} from './functional/double';\nexport {gcd} from './functional/gcd';\nexport {halve} from './functional/halve';\nexport {increment} from './functional/increment';\nexport {isEven} from './functional/isEven';\nexport {isInteger} from './functional/isInteger';\nexport {lcm} from './functional/lcm';\nexport {max} from './functional/max';\nexport {min} from './functional/min';\nexport {multiply} from './functional/multiply';\nexport {negate} from './functional/negate';\nexport {pow} from './functional/pow';\nexport {setBase} from './functional/setBase';\nexport {shiftLeft} from './functional/shiftLeft';\nexport {shiftRight} from './functional/shiftRight';\nexport {signum} from './functional/signum';\nexport {square} from './functional/square';\nexport {subtract} from './functional/subtract';\nexport {toInteger} from './functional/toInteger';\nexport {toNumber} from './functional/toNumber';\nexport {toString} from './functional/toString';\n\n//OOP\nexport {BigInt as Int} from './oop/bigInt';\n","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","module.exports = function () { /* empty */ };\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = require('./_hide');\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","//Assumes valid inputs\nexport function setBase(\n  A: number[], minA: number, maxA: number,\n  curBase: number, newBase: number\n): [number[], number] {\n\n  //If zero or same base\n  if(maxA === minA || curBase === newBase){\n    return [A, maxA];\n  }\n\n  //Create new array\n  let maxB = 0;\n  const B: number[] = new Array(Math.ceil(\n    (maxA - minA) * Math.log(curBase) / Math.log(newBase)\n  ));\n\n  //Return number in newBase\n  do {\n    let remainder = 0;\n    for(let i: number = maxA; i > minA; remainder = remainder % newBase){\n      remainder = remainder*curBase + A[--i];\n      A[i] = 0 | (remainder / newBase);\n    }\n    B[maxB++] = remainder;\n    while(A[maxA - 1] === 0){\n      if(--maxA === minA){\n        return [B, maxB];\n      }\n    }\n  } while(true);\n}\n","/*\n  f(A, B) = A - B\n  Overwrites A\n  Assumes B > A\n*/\nexport function reverseSubtraction(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n\n  //Subtract common digits\n  let borrow = 0;\n  while(minA < maxA){\n    let v: number = B[minB++] - borrow - A[minA];\n    if (v < 0){\n      borrow = 1;\n      v = v + base;\n    } else {\n      borrow = 0;\n    }\n    A[minA++] = v;\n  }\n\n  //Subtract borrow\n  if(borrow > 0){\n    for(borrow = base - 1; B[minB] === 0; ++minB){\n      A[minA++] = borrow;\n    }\n    A[minA++] = B[minB++] - 1;\n  }\n\n  //Copy extra digits\n  if(minB < maxB){\n    do {\n      A[minA++] = B[minB++];\n    } while (minB < maxB);\n\n  //Check for new length\n  } else {\n    while(A[minA-1] === 0){\n      --minA;\n    }\n  }\n\n  return minA;\n}\n","import {Integer} from '../integer';\nimport {copy} from './copy';\n\nexport function clone(A: Integer) : Integer {\n  return copy({}, A);\n}\n","/*\n  f(A, B) = A / B\n  Overwrites A\n  Assumes B > 0\n  Assumes A > 0\n  Assumes no leading zeros\n*/\nexport function singleDigitDivision(\n  A: number[], minA: number, maxA: number,\n  B: number, base: number\n): [number, number] {\n  let remainder = 0;\n  for(let a: number = maxA; a-- > minA; remainder = remainder % B){\n    remainder = remainder * base + A[a];\n    A[a] = 0 | (remainder / B);\n  }\n\n  //Get new length\n  if(A[maxA - 1] === 0){\n    --maxA;\n  }\n\n  return [maxA, remainder];\n}\n","import {basicDivision} from './basicDivision';\nimport {karatsubaMultiplication} from './karatsubaMultiplication';\nimport {steinGCD} from './steinGCD';\n\n/*\n  f(A, B) = lcm(A, B)\n  Overwrites A\n  Asumes A > 0, B > 0\n  See: https://en.wikipedia.org/wiki/Least_common_multiple\n*/\nexport function lcm(\n  A: number[], minA: number, maxA: number,\n  B: number[], minB: number, maxB: number,\n  base: number\n): [number[], number] {\n\n  //Copy A\n  let C: number[] = A.slice(minA, maxA);\n  let maxC: number = C.length;\n\n  //Copy B\n  const D: number[] = B.slice(minB, maxB);\n  const maxD: number = D.length;\n\n  //Get gcd(A, B)\n  [C,,maxC] = steinGCD(C, 0, maxC, D, 0, maxD, base);\n  [C,,maxC] = basicDivision(A, minA, maxA, C, 0, maxC, base);\n  maxC = karatsubaMultiplication(C, 0, maxC, B, minB, maxB, base);\n  return [C, maxC];\n}\n","import {unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A) = A * A\n  Overwrites A\n\n  Explanation:\n      a   b   c   d   e   f   g   _   _   _   _   _   _   _\n    *\n      a   b   c   d   e   f   g\n    -------------------------------------------------------\n                                 ag  bg  cg  dg  eg  fg  gg\n                             af  bf  cf  df  ef  ff  fg\n                         ae  be  ce  de  ee  ef  eg\n                     ad  bd  cd  dd  de  df  dg\n                 ac  bc  cc  cd  ce  cf  cg\n             ab  bb  bc  bd  be  bf  bg\n         aa  ab  ac  ad  ae  af  ag\n    -------------------------------------------------------\n                                2ag 2bg 2cg 2dg 2eg 2fg  gg\n                            2af 2bf 2cf 2df 2ef  ff\n                        2ae 2be 2ce 2de  ee\n                    2ad 2bd 2cd  dd\n                2ac 2bc  cc\n            2ab  bb\n         aa\n    -------------------------------------------------------\n      h   i   j   k   l   m   n   o   p   q   r   s   t   u\n*/\nexport function longSquare(\n  A: number[], min: number, max: number, base: number\n): number {\n\n  //Move digits to the left\n  let newMax: number = max - min;\n  unsafeShiftUp(A, min, max, newMax);\n  zero(A, min, max);\n\n  //For every digit\n  newMax = newMax + max;\n  for(let d: number = min, s: number = max; d < newMax; d = d + 2){\n    const digit: number = A[s++];\n\n    //Square the digit\n    let carry = 0;\n    A[d] = A[d] + digit * digit;\n    if(A[d] >= base){\n      carry = 0 | (A[d] / base);\n      A[d] = A[d] % base;\n    }\n\n    //Multiply by higher digits twice\n    let o: number = d + 1;\n    for(let m: number = s; m < newMax; ++o){\n\n      //Multiply\n      let quotient = 0;\n      let product: number = A[m++] * digit;\n      if(product >= base){\n        quotient = 0 | (product / base);\n        product = product % base;\n      }\n\n      //Double\n      quotient = quotient << 1;\n      product = product << 1;\n\n      //Add\n      A[o] = A[o] + product + carry;\n      carry = quotient;\n      if(A[o] >= base){\n        carry = carry + (0 | (A[o] / base));\n        A[o] = A[o] % base;\n      }\n    }\n\n    //Place remaining carry\n    A[o] = carry;\n  }\n\n  //Return new length\n  return A[newMax - 1] === 0 ? newMax - 1 : newMax;\n}\n","import {safeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A, B) = A * B\n  Overwrites A\n  Assumes A > 0 and B > 0\n  Assumes A and B are not the same array\n\n  Explanation:\n      a  b  c  _  _  _\n    *\n      d  e  f\n    ------------------\n              cd ce cf\n           bd be bf\n        ad ae af\n    ------------------\n      g  h  i  j  k  l\n\n*/\nexport function longMultiplication(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n\n  //Shift A to the left\n  const lenB: number = maxB - minB;\n  const minC: number = minA + lenB;\n  safeShiftUp(A, minA, maxA, lenB);\n  zero(A, minA, minC);\n\n  //For each digit in multiplicand\n  const maxC: number = maxA + lenB;\n  for(let a: number = minC; a < maxC; ++a){\n    let carry = 0;\n    let i: number = a - lenB;\n\n    //Multiply by multiplier\n    for(let b: number = minB; b < maxB; ++b){\n      let v: number = A[a] * B[b] + A[i] + carry;\n      if(v < base){\n        carry = 0;\n      } else {\n        carry = 0 | (v / base);\n        v = v % base;\n      }\n      A[i++] = v;\n    }\n\n    //Add remaining carry\n    A[i] = carry;\n  }\n\n  //Return new length\n  return (A[maxC - 1] === 0) ? maxC - 1 : maxC;\n}\n","import {halve} from './halve';\nimport {karatsubaSquare} from './karatsubaSquare';\nimport {karatsubaMultiplication} from './karatsubaMultiplication';\n\n/*\n  f(A, B) = A^B = Math.pow(A, B)\n  Overwrites A\n  Overwrites B\n  Assumes A > 0\n  Assumes B > 0\n*/\nexport function exponentiation(\n  A: number[], minA: number, maxA: number, baseA: number,\n  B: number[], minB: number, maxB: number, baseB: number\n): number {\n  let maxC = 1;\n  const C: number[] = [1];\n\n  //Until power is 1\n  while(minB + 1 < maxB || B[minB] > 1){\n\n    //Divide the power in half\n    let remainder: number;\n    [maxB, remainder] = halve(B, minB, maxB, baseB);\n\n    //If remainder\n    if(remainder > 0){\n      C.length = maxC - minA + maxA;\n      maxC = karatsubaMultiplication(C, 0, maxC, A, minA, maxA, baseA);\n    }\n\n    //Square the base\n    maxA = karatsubaSquare(A, minA, maxA, baseA);\n  }\n\n  if(C.length > 1){\n    maxA = karatsubaMultiplication(A, minA, maxA, C, 0, maxC, baseA);\n  }\n\n  return maxA;\n}\n","import {Integer} from '../integer';\nimport {abs} from '../functional/abs';\nimport {add} from '../functional/add';\nimport {compare} from '../functional/compare';\nimport {copy} from '../functional/copy';\nimport {decrement} from '../functional/decrement';\nimport {divideAndRemainder} from '../functional/divideAndRemainder';\nimport {double} from '../functional/double';\nimport {gcd} from '../functional/gcd';\nimport {halve} from '../functional/halve';\nimport {increment} from '../functional/increment';\nimport {isEven} from '../functional/isEven';\nimport {lcm} from '../functional/lcm';\nimport {max} from '../functional/max';\nimport {min} from '../functional/min';\nimport {multiply} from '../functional/multiply';\nimport {negate} from '../functional/negate';\nimport {pow} from '../functional/pow';\nimport {signum} from '../functional/signum';\nimport {setBase} from '../functional/setBase';\nimport {shiftLeft} from '../functional/shiftLeft';\nimport {shiftRight} from '../functional/shiftRight';\nimport {subtract} from '../functional/subtract';\nimport {square} from '../functional/square';\nimport {isInteger} from '../functional/isInteger';\nimport {toInteger} from '../functional/toInteger';\nimport {toNumber} from '../functional/toNumber';\nimport {toString} from '../functional/toString';\nimport {assign} from '../util/intUtils';\n\nexport class BigInt implements Integer {\n  static get MINUS_ONE(): BigInt {return new BigInt(-1);}\n  static get ZERO(): BigInt {return new BigInt(0);}\n  static get ONE(): BigInt {return new BigInt(1);}\n\n  base!: number;\n  digits!: number[];\n  precision!: number;\n  isNegative!: boolean;\n\n  constructor(input: Integer | number | string) {\n    if(isInteger(input)){\n      copy(this, input);\n    } else {\n      assign(this, toInteger(input));\n    }\n  }\n\n  abs(): BigInt {\n    return BigInt.tryBigInt(abs(this));\n  }\n\n  add(addend: Integer): BigInt {\n    return BigInt.tryBigInt(add(this, addend));\n  }\n\n  clone(): BigInt {\n    return new BigInt(this);\n  }\n\n  compareTo(B: Integer): number {\n    return compare(this, B);\n  }\n\n  divide(divisor: Integer): BigInt {\n    return this.divideAndRemainder(divisor)[0];\n  }\n\n  divideAndRemainder(divisor: Integer): [BigInt, BigInt] {\n    const [Q, R]: [Integer, Integer] = divideAndRemainder(this, divisor);\n    return [BigInt.tryBigInt(Q), assign(BigInt.ZERO, R) as BigInt];\n  }\n\n  double(): BigInt {\n    return BigInt.tryBigInt(double(this));\n  }\n\n  gcd(B: Integer): BigInt {\n    return BigInt.tryBigInt(gcd(this, B));\n  }\n\n  getBase(): number {\n    return this.base;\n  }\n\n  halve(): [BigInt, BigInt] {\n    const [Q, R]: [Integer, Integer] = halve(this);\n    return [BigInt.tryBigInt(Q), new BigInt(R.precision)];\n  }\n\n  // tslint:disable-next-line:no-any\n  static isBigInt(n: any): n is BigInt {\n    return n instanceof BigInt;\n  }\n\n  isEven(): boolean {\n    return isEven(this);\n  }\n\n  isOdd(): boolean {\n    return !isEven(this);\n  }\n\n  lcm(B: Integer): BigInt {\n    return BigInt.tryBigInt(lcm(this, B));\n  }\n\n  static max(A: Integer, B: Integer): BigInt {\n    return BigInt.tryBigInt(max(A, B));\n  }\n\n  max(B: Integer): BigInt {\n    const C: Integer = max(this, B);\n    if(C === this){\n      return this;\n    }\n    if(C === B){\n      return copy(this, C) as BigInt;\n    }\n    return assign(BigInt.ZERO, C) as BigInt;\n  }\n\n  static min(A: Integer, B: Integer): BigInt {\n    return BigInt.tryBigInt(min(A, B));\n  }\n\n  min(B: Integer): BigInt {\n    const C: Integer = min(this, B);\n    if(C === this){\n      return this;\n    }\n    if(C === B){\n      return copy(this, C) as BigInt;\n    }\n    return assign(BigInt.ZERO, C) as BigInt;\n  }\n\n  minusminus(): BigInt {\n    return BigInt.tryBigInt(decrement(this));\n  }\n\n  multiply(multiplier: Integer): BigInt {\n    return BigInt.tryBigInt(multiply(this, multiplier));\n  }\n\n  negate(): BigInt {\n    return BigInt.tryBigInt(negate(this));\n  }\n\n  plusplus(): BigInt {\n    return BigInt.tryBigInt(increment(this));\n  }\n\n  pow(power: Integer): BigInt {\n    return BigInt.tryBigInt(pow(this, power));\n  }\n\n  remainder(divisor: Integer): BigInt {\n    const R: BigInt = this.divideAndRemainder(divisor)[1];\n    return assign(this, R) as BigInt;\n  }\n\n  set(source: Integer): BigInt {\n    return copy(this, source) as BigInt;\n  }\n\n  setBase(base: number): BigInt {\n    return BigInt.tryBigInt(setBase(this, base));\n  }\n\n  shiftLeft(shifts: Integer): BigInt {\n    return shiftLeft(this, BigInt.tryBigInt(shifts)) as BigInt;\n  }\n\n  shiftRight(shifts: Integer): BigInt {\n    return shiftRight(this, BigInt.tryBigInt(shifts)) as BigInt;\n  }\n\n  signum(): number {\n    return signum(this);\n  }\n\n  square(): BigInt {\n    return BigInt.tryBigInt(square(this));\n  }\n\n  subtract(subtrahend: Integer): BigInt {\n    return BigInt.tryBigInt(subtract(this, subtrahend));\n  }\n\n  toNumber(): number {\n    return toNumber(this);\n  }\n\n  toString(): string {\n    return toString(this);\n  }\n\n  private static tryBigInt(A: Integer): BigInt {\n    return BigInt.isBigInt(A) ? A : assign(BigInt.ZERO, A) as BigInt;\n  }\n}\n","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n"],"sourceRoot":""}
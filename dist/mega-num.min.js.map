{"version":3,"sources":["webpack://MegaNum/webpack/universalModuleDefinition","webpack://MegaNum/webpack/bootstrap","webpack://MegaNum/./src/util/arrayUtils.ts","webpack://MegaNum/./src/util/intUtils.ts","webpack://MegaNum/./node_modules/babel-runtime/helpers/slicedToArray.js","webpack://MegaNum/./src/functional/setBase.ts","webpack://MegaNum/./src/functional/compare.ts","webpack://MegaNum/./src/util/numUtils.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_wks.js","webpack://MegaNum/./src/functional/copy.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_core.js","webpack://MegaNum/./node_modules/core-js/library/modules/_global.js","webpack://MegaNum/./src/globals.ts","webpack://MegaNum/./src/algorithm/subtraction.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_descriptors.js","webpack://MegaNum/./node_modules/core-js/library/modules/_hide.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iterators.js","webpack://MegaNum/./src/functional/toInteger.ts","webpack://MegaNum/./src/functional/toNumber.ts","webpack://MegaNum/./src/algorithm/addition.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_has.js","webpack://MegaNum/./node_modules/core-js/library/modules/_an-object.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-dp.js","webpack://MegaNum/./src/functional/negate.ts","webpack://MegaNum/./src/functional/square.ts","webpack://MegaNum/./src/algorithm/karatsubaMultiplication.ts","webpack://MegaNum/./src/functional/isInteger.ts","webpack://MegaNum/./src/functional/isEven.ts","webpack://MegaNum/./src/algorithm/halve.ts","webpack://MegaNum/./src/functional/decrement.ts","webpack://MegaNum/./src/algorithm/increment.ts","webpack://MegaNum/./src/algorithm/decrement.ts","webpack://MegaNum/./src/algorithm/compare.ts","webpack://MegaNum/./src/functional/subtract.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_shared-key.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-integer.js","webpack://MegaNum/./node_modules/core-js/library/modules/_is-object.js","webpack://MegaNum/./node_modules/core-js/library/modules/_defined.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-iobject.js","webpack://MegaNum/./src/algorithm/double.ts","webpack://MegaNum/./src/functional/double.ts","webpack://MegaNum/./src/functional/add.ts","webpack://MegaNum/./src/functional/toString.ts","webpack://MegaNum/./src/functional/signum.ts","webpack://MegaNum/./src/functional/shiftRight.ts","webpack://MegaNum/./src/functional/shiftLeft.ts","webpack://MegaNum/./src/functional/pow.ts","webpack://MegaNum/./src/algorithm/karatsubaSquare.ts","webpack://MegaNum/./src/functional/multiply.ts","webpack://MegaNum/./src/functional/min.ts","webpack://MegaNum/./src/functional/max.ts","webpack://MegaNum/./src/functional/lcm.ts","webpack://MegaNum/./src/functional/increment.ts","webpack://MegaNum/./src/functional/halve.ts","webpack://MegaNum/./src/algorithm/isEven.ts","webpack://MegaNum/./src/algorithm/steinGCD.ts","webpack://MegaNum/./src/functional/gcd.ts","webpack://MegaNum/./src/algorithm/singleDigitMultiplication.ts","webpack://MegaNum/./src/algorithm/basicDivision.ts","webpack://MegaNum/./src/functional/divideAndRemainder.ts","webpack://MegaNum/./src/algorithm/reverseAddition.ts","webpack://MegaNum/./node_modules/core-js/library/modules/_classof.js","webpack://MegaNum/./node_modules/core-js/library/modules/es6.string.iterator.js","webpack://MegaNum/./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack://MegaNum/./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://MegaNum/./node_modules/core-js/library/modules/_uid.js","webpack://MegaNum/./node_modules/core-js/library/modules/_shared.js","webpack://MegaNum/./node_modules/core-js/library/modules/_property-desc.js","webpack://MegaNum/./node_modules/core-js/library/modules/_dom-create.js","webpack://MegaNum/./node_modules/core-js/library/modules/_fails.js","webpack://MegaNum/./node_modules/core-js/library/modules/_export.js","webpack://MegaNum/./node_modules/core-js/library/modules/_library.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iter-define.js","webpack://MegaNum/./node_modules/core-js/library/modules/_cof.js","webpack://MegaNum/./node_modules/core-js/library/modules/web.dom.iterable.js","webpack://MegaNum/./src/functional/abs.ts","webpack://MegaNum/./node_modules/core-js/library/modules/es6.object.define-property.js","webpack://MegaNum/./node_modules/core-js/library/fn/object/define-property.js","webpack://MegaNum/./node_modules/babel-runtime/core-js/object/define-property.js","webpack://MegaNum/./node_modules/babel-runtime/helpers/createClass.js","webpack://MegaNum/./node_modules/babel-runtime/helpers/classCallCheck.js","webpack://MegaNum/./src/oop/bigInt.ts","webpack://MegaNum/./src/algorithm/exponentiation.ts","webpack://MegaNum/./src/algorithm/longMultiplication.ts","webpack://MegaNum/./src/algorithm/longSquare.ts","webpack://MegaNum/./src/algorithm/lcm.ts","webpack://MegaNum/./src/algorithm/singleDigitDivision.ts","webpack://MegaNum/./src/functional/clone.ts","webpack://MegaNum/./src/algorithm/reverseSubtraction.ts","webpack://MegaNum/./src/algorithm/setBase.ts","webpack://MegaNum/./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack://MegaNum/./node_modules/core-js/library/modules/core.get-iterator.js","webpack://MegaNum/./node_modules/core-js/library/fn/get-iterator.js","webpack://MegaNum/./node_modules/babel-runtime/core-js/get-iterator.js","webpack://MegaNum/./node_modules/core-js/library/modules/core.is-iterable.js","webpack://MegaNum/./node_modules/core-js/library/modules/_string-at.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-object.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-gpo.js","webpack://MegaNum/./node_modules/core-js/library/modules/_html.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-absolute-index.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-length.js","webpack://MegaNum/./node_modules/core-js/library/modules/_array-includes.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-keys-internal.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-keys.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-dps.js","webpack://MegaNum/./node_modules/core-js/library/modules/_object-create.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iter-create.js","webpack://MegaNum/./node_modules/core-js/library/modules/_redefine.js","webpack://MegaNum/./node_modules/core-js/library/modules/_to-primitive.js","webpack://MegaNum/./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://MegaNum/./node_modules/core-js/library/modules/_a-function.js","webpack://MegaNum/./node_modules/core-js/library/modules/_ctx.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iobject.js","webpack://MegaNum/./node_modules/core-js/library/modules/_iter-step.js","webpack://MegaNum/./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack://MegaNum/./node_modules/core-js/library/modules/es6.array.iterator.js","webpack://MegaNum/./node_modules/core-js/library/fn/is-iterable.js","webpack://MegaNum/./node_modules/babel-runtime/core-js/is-iterable.js","webpack://MegaNum/./src/index.ts"],"names":["root","factory","exports","module","define","amd","MegaNum","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","globals_1","copy","to","minTo","from","minFrom","maxFrom","growArray","A","minNewLen","maxNewLen","newLen","Globals","MAX_PRECISION","RangeError","length","printArr","min","max","minSub","arguments","maxSub","B","map","v","slice","join","safeShiftUp","shifts","shiftDown","unsafeShiftUp","assign","target","source","base","digits","precision","isNegative","setOne","setZero","toInteger","_isIterable3","_interopRequireDefault","_getIterator3","obj","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","err","return","TypeError","setBase_1","setBase","MIN_BASE","MAX_BASE","_setBase_1$setBase","_setBase_1$setBase2","_slicedToArray3","compare_1","compare","out","ratio","Math","log","ceil","a","b","strToDigits","trim","replace","match","j","zero","store","uid","USE_SYMBOL","intUtils_1","core","version","__e","global","self","Function","__g","DEFAULT_BASE","CIPHER","freeze","decrement_1","subtraction","minA","maxA","minB","maxB","borrow","decrement","dP","createDesc","f","isInteger_1","numUtils_1","isInteger","_numUtils_1$strToDigi","_numUtils_1$strToDigi2","toInteger_1","toNumber","Number","MAX_SAFE_INTEGER","increment_1","addition","carry","increment","it","isObject","anObject","IE8_DOM_DEFINE","toPrimitive","O","P","Attributes","negate","karatsubaSquare_1","longSquare_1","arrayUtils_1","square","longSquare","karatsubaSquare","addition_1","reverseAddition_1","subtraction_1","karatsubaMultiplication","halfLen","halfA","midA","midB","mediumB","mediumMaxB","medium","mediumMax","lowMax","reverseAddition","highMin","isEven_1","isEven","halve","remainder","add_1","copy_1","negate_1","reverseSubtraction_1","subtract","add","reverseSubtraction","shared","floor","isNaN","IObject","defined","double","double_1","subtract_1","toString","cipher","sign","reverse","strings","signum","toNumber_1","shiftRight","EvalError","C","shiftLeft","exponentiation_1","pow","exponentiation","mid","square_1","karatsubaMultiplication_1","longMultiplication_1","singleDigitMultiplication_1","multiply","multiplicand","singleDigitMultiplication","_multiplicand","longMultiplication","lcm_1","lcm","_lcm_1$lcm","_lcm_1$lcm2","halve_1","_halve_1$halve","_halve_1$halve2","xor","steinGCD","_halve_1$halve3","_halve_1$halve5","_halve_1$halve7","_halve_1$halve9","steinGCD_1","gcd","_steinGCD_1$steinGCD","_steinGCD_1$steinGCD2","multiplier","divThreeHalvesByTwo","a1","a2","a3","b1","b2","q","basicDivision","X","minX","maxX","Y","minY","maxY","lenY","nMt","Q","maxR","yt","ytm1","QY","iMt","maxQY","basicDivision_1","singleDigitDivision_1","divideAndRemainder","_remainder","R","_singleDigitDivision_","singleDigitDivision","_singleDigitDivision_2","_basicDivision_1$basi","_basicDivision_1$basi2","newMaxB","cof","TAG","ARG","T","callee","$at","String","iterated","this","_t","point","index","def","has","tag","stat","configurable","split","id","px","random","concat","copyright","bitmap","writable","document","is","createElement","exec","ctx","hide","$export","type","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","apply","virtual","U","LIBRARY","redefine","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","returnThis","Base","NAME","Constructor","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","TO_STRING_TAG","DOMIterables","Collection","abs","$Object","desc","_defineProperty2","defineProperties","props","descriptor","protoProps","staticProps","instance","abs_1","divideAndRemainder_1","gcd_1","max_1","min_1","multiply_1","pow_1","signum_1","shiftLeft_1","shiftRight_1","toString_1","BigInt","input","_classCallCheck3","tryBigInt","addend","divisor","_divideAndRemainder_","_divideAndRemainder_2","ZERO","power","subtrahend","isBigInt","baseA","baseB","maxC","lenB","minC","newMax","digit","quotient","product","D","maxD","clone","curBase","newBase","classof","getIteratorMethod","getIterator","iterFn","isIterable","TO_STRING","that","pos","charCodeAt","charAt","toObject","IE_PROTO","ObjectProto","constructor","documentElement","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","arrayIndexOf","names","result","$keys","enumBugKeys","getKeys","Properties","dPs","Empty","createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","open","write","lt","close","fn","val","valueOf","aFunction","propertyIsEnumerable","addToUnscopables","step","_k","Arguments","__globals__","clone_1","bigInt_1","Int"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAAI,QAAAL,IAEAD,EAAAM,QAAAL,IARA,CASCM,OAAA,WACD,gBAAAC,GCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,IACAC,EAAAD,EACAE,KACAX,YAUA,OANAY,EAAAH,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,KAGAV,EAAAD,QA0DA,OArDAQ,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,GAA0CK,cAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAxB,GACA,oBAAAyB,eAAAC,aACAN,OAAAC,eAAArB,EAAAyB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAArB,EAAA,cAAiD2B,YAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,cAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAlC,GACA,IAAAiB,EAAAjB,KAAA6B,WACA,WAA2B,OAAA7B,EAAAmC,SAC3B,WAAiC,OAAAnC,GAEjC,OADAO,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAkB,EAAAC,GAAsD,OAAAlB,OAAAmB,UAAAC,eAAA3B,KAAAwB,EAAAC,IAGtD9B,EAAAiC,EAAA,GAIAjC,IAAAkC,EAAA,KDxEA,ECwEA,SAAApC,EAAAsB,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IClFA,IAAAgB,EAAAnC,EAAA,IAGAR,EAAA4C,KAAA,SAAwBC,EAASC,EAAeC,EAAwBC,EAAiBC,GACvF,KAAMD,EAAUC,GACdJ,EAAGC,KAAWC,EAAKC,MAIvBhD,EAAAkD,UAAA,SAA6BC,EAAQC,EAAmBC,GACtD,IAAIC,EAAiBD,EACrB,GAAGC,EAASX,EAAAY,QAAQC,cAAc,CAChC,GAAGJ,EAAYT,EAAAY,QAAQC,cACrB,MAAM,IAAIC,WAAJ,8CAC0Cd,EAAAY,QAAQC,eAG1DF,EAASF,EAGRD,EAAEO,OAASJ,IACZH,EAAEO,OAASJ,IAIftD,EAAA2D,SAAA,SAA4BR,EAAQS,EAAaC,GAAuD,IAA1CC,EAA0CC,UAAAL,OAAA,YAAAK,UAAA,GAAAA,UAAA,GAAzBH,EAAKI,EAAoBD,UAAAL,OAAA,YAAAK,UAAA,GAAAA,UAAA,GAAHF,EAC7FI,EAAId,EAAEe,IAAI,SAAAC,GAAA,OAAW,MAALA,GAAaA,GAAMA,EAAKA,EAAI,GAAKA,IACvD,MAAO,IACLF,EAAEG,MAAMR,EAAIE,GAAQO,KAAK,MACzB,IAAMJ,EAAEG,MAAMN,EAAOE,GAAQK,KAAK,MAClC,IAAMJ,EAAEG,MAAMJ,EAAOH,GAAKQ,KAAK,MACjC,KAGFrE,EAAAsE,YAAA,SAA+BnB,EAAQS,EAAaC,EAAaU,GAC/D,IAAI,IAAI7D,EAAYmD,EAAMU,EAAQV,EAAMD,EAAKT,IAAIzC,GAAKyC,IAAIU,MAI5D7D,EAAAwE,UAAA,SAA6BrB,EAAQS,EAAaC,EAAaU,GAC7D,IAAI,IAAI7D,EAAYkD,EAAMW,EAAQX,EAAMC,EAAKV,EAAEzC,KAAOyC,EAAES,QAK1D5D,EAAAyE,cAAA,SAAiCtB,EAAQS,EAAaC,EAAaU,GACjE,IAAI,IAAI7D,EAAYkD,EAAMW,EAAQX,EAAMC,EAAKV,EAAEzC,KAAOyC,EAAES,sCC3C1D,SAAAc,EAAuBC,EAAaC,GAKlC,OAJAD,EAAOE,KAAOD,EAAOC,KACrBF,EAAOG,OAASF,EAAOE,OACvBH,EAAOI,UAAYH,EAAOG,UAC1BJ,EAAOK,WAAaJ,EAAOI,WACpBL,mDALT3E,EAAA0E,SASA1E,EAAA4C,KAAA,SAAqB+B,EAAaC,GAChC,IAAMzB,EAAauB,EAAOC,EAAQC,GAElC,OADAzB,EAAE2B,OAAS3B,EAAE2B,OAAOV,MAAM,EAAGjB,EAAE4B,WACxB5B,GAITnD,EAAAiF,OAAA,SAAuB9B,GAIrB,OAHAA,EAAE4B,UAAY,EACd5B,EAAE2B,QAAU,GACZ3B,EAAE6B,cACK7B,GAITnD,EAAAkF,QAAA,SAAwB/B,GAItB,OAHAA,EAAE4B,UAAY,EACd5B,EAAE2B,UACF3B,EAAE6B,cACK7B,GAGTnD,EAAAmF,UAAA,SACEL,EACAC,EACAC,EACAH,GAEA,OAAQA,OAAMC,SAAQC,YAAWC,6CCtCnChF,EAAA8B,cAEA,IAEAsD,EAAAC,EAFA7E,EAAA,MAMA8E,EAAAD,EAFA7E,EAAA,KAIA,SAAA6E,EAAAE,GAAsC,OAAAA,KAAAzD,WAAAyD,GAAuCnD,QAAAmD,GAE7EvF,EAAAoC,QA2BA,SAAAoD,EAAA9E,GACA,GAAA+E,MAAAC,QAAAF,GACA,OAAAA,EACK,MAAAJ,EAAAhD,SAAAhB,OAAAoE,IACL,OA9BA,SAAAA,EAAA9E,GACA,IAAAiF,KACAC,KACAC,KACAC,SAEA,IACA,QAAAC,EAAAC,KAAAV,EAAAlD,SAAAoD,KAAwDI,GAAAG,EAAAC,EAAAC,QAAAC,QACxDP,EAAAQ,KAAAJ,EAAApE,QAEAjB,GAAAiF,EAAAjC,SAAAhD,GAHuFkF,OAKlF,MAAAQ,GACLP,KACAC,EAAAM,EACK,QACL,KACAR,GAAAI,EAAAK,QAAAL,EAAAK,SACO,QACP,GAAAR,EAAA,MAAAC,GAIA,OAAAH,EAvBA,CA8BAH,EAAA9E,GAEA,UAAA4F,UAAA,0DAjCA,SAAAhG,EAAAsB,EAAAJ,GAAA,iBAAAd,EAAAS,GAAAT,EAAAc,EAAA,KAAAd,EAAAoB,WAAApB,GAAA0B,QAAA1B,GAAAU,OAAAC,eAAAO,EAAA,cAAAD,OAAA,ICdA,IAAAgB,EAAAnC,EAAA,IAEA+F,EAAA/F,EAAA,IAEAR,EAAAwG,QAAA,SAAwBrD,EAAY0B,GAMlC,IAHAA,GAAO,GAGGlC,EAAAY,QAAQkD,SAChB,MAAMhD,WAAcoB,EAAd,gBAAkClC,EAAAY,QAAQkD,SAA1C,KAIR,GAAG5B,EAAOlC,EAAAY,QAAQmD,SAChB,MAAMjD,WAAcoB,EAAd,gBAAkClC,EAAAY,QAAQmD,SAA1C,KAZsC,IAAAC,EAgBpBJ,EAAAC,QAASrD,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,KAAMA,GAhBvB+B,KAAAC,EAAAzE,SAAAuE,EAAA,GAkB9C,OAFCxD,EAAE2B,OAhB2C8B,EAAA,GAgBnCzD,EAAE4B,UAhBiC6B,EAAA,GAiB9CzD,EAAE0B,KAAOA,EACF1B,kFCrBT,IAAAoD,EAAA/F,EAAA,GACAsG,EAAAtG,EAAA,IAEAR,EAAA+G,QAAA,SAAwB5D,EAAYc,GAGlC,GAAGd,IAAMc,EACP,OAAO,EAGT,IAAI+C,EAAM7D,EAAE6B,YAAc,EAAI,EAG9B,GAAG7B,EAAE6B,aAAef,EAAEe,WACpB,OAAOgC,EAIT,IAAMnC,EAAe1B,EAAE0B,KACvB,GAAG1B,EAAE0B,OAASZ,EAAEY,KAAK,CAGnB,IAAMoC,EAAgBC,KAAKC,IAAIhE,EAAE0B,MAAQqC,KAAKC,IAAIlD,EAAEY,MACpD,GAAGqC,KAAKE,KAAKjE,EAAE4B,UAAYkC,GAAShD,EAAEc,UACpC,OAAQiC,EAEV,GAAGE,KAAKE,MAAMjE,EAAE4B,UAAY,GAAKkC,GAAShD,EAAEc,UAC1C,OAAOiC,EAITT,EAAAC,QAAQrD,EAAGc,EAAEY,MAaf,OATAmC,GAAYF,EAAAC,QACV5D,EAAE2B,OAAQ,EAAG3B,EAAE4B,UACfd,EAAEa,OAAQ,EAAGb,EAAEc,WAIjBwB,EAAAC,QAAQrD,EAAG0B,GAGJmC,kFC7CThH,EAAA6D,IAAA,SAAoBwD,EAAWC,GAC7B,OAAQD,EAAIC,EAAKA,EAAID,GAGvBrH,EAAA4D,IAAA,SAAoByD,EAAWC,GAC7B,OAAQD,EAAIC,EAAKA,EAAID,GAGvBrH,EAAAuH,YAAA,SAA4B7E,GAI1B,IAHAA,EAAIA,EAAE8E,QAGD9D,OAAS,EACZ,MAAM,IAAI4C,UAAU,OAItB,IAAMtB,EAA+B,MAATtC,EAAE,GAM9B,IAHAA,EAAIA,EAAE+E,QAAQ,WAAY,IAAIA,QAAQ,YAAa,KAG9CC,MAAM,SACT,MAAM,IAAIpB,UAAU,OAItB,IAAMvB,EAAoBrC,EAAEgB,OAC5B,GAAiB,IAAdqB,EACD,cAKF,IADA,IAAMD,EAAmB,IAAIW,MAAcV,GACnCrE,EAAI,EAAGiH,EAAI5C,EAAW4C,EAAI,IAAKjH,EACrCoE,EAAOpE,IAAMgC,IAAIiF,GAGnB,OAAQ7C,EAAQE,IAIlBhF,EAAA4H,KAAA,SAAqBzE,EAAaS,EAAaC,GAC7C,KAAMD,EAAMC,GACVV,EAAES,KAAS,aAAAtD,EAAAsB,EAAAJ,GC7Cf,IAAAqG,EAAArH,EAAA,GAAAA,CAAA,OACAsH,EAAAtH,EAAA,IACAiB,EAAAjB,EAAA,GAAAiB,OACAsG,EAAA,mBAAAtG,GAEAxB,EAAAD,QAAA,SAAAiB,GACA,OAAA4G,EAAA5G,KAAA4G,EAAA5G,GACA8G,GAAAtG,EAAAR,KAAA8G,EAAAtG,EAAAqG,GAAA,UAAA7G,MAGA4G,uFCTA,IAAAG,EAAAxH,EAAA,GAGAR,EAAA4C,KAAA,SAAqB+B,EAAaC,GAChC,OAAOoD,EAAApF,KAAM+B,EAAQC,mBCLvB,IAAAqD,EAAAhI,EAAAD,SAA6BkI,QAAA,SAC7B,iBAAAC,UAAAF,kBCAA,IAAAG,EAAAnI,EAAAD,QAAA,oBAAAK,eAAA6G,WACA7G,OAAA,oBAAAgI,WAAAnB,WAAAmB,KAEAC,SAAA,cAAAA,GACA,iBAAAC,UAAAH,kFCJA,SAAiB7E,GACFA,EAAAkD,SAAW,EACXlD,EAAAmD,SAAW,SACXnD,EAAAC,cAAgB,WAElBD,EAAAiF,aAAe,SACfjF,EAAAkF,OAAgCrH,OAAOsH,QAChD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IACpC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IACpC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IACpC,IAAI,IAAI,IAAI,IAAI,IAAI,MAVxB,CAAiB1I,EAAAuD,UAAAvD,EAAAuD,4FCDjB,IAAAoF,EAAAnI,EAAA,IASAR,EAAA4I,YAAA,SACEzF,EAAa0F,EAAcC,EAC3B7E,EAA0B8E,EAAcC,EACxCnE,GAMA,IAJA,IAAIwC,EAAYwB,EACZI,EAAS,EAGPF,EAAOC,GAAK,CAChB,IAAI7E,EAAYhB,EAAEkE,GAAK4B,EAAShF,EAAE8E,KAC/B5E,EAAI,GACL8E,EAAS,EACT9E,GAAQU,GAERoE,EAAS,EAEX9F,EAAEkE,KAAOlD,EAIX,GAAG8E,EAAS,EACV,OAAON,EAAAO,UAAU/F,EAAGkE,EAAGyB,EAAMjE,GAI/B,GAAGwC,IAAMyB,EAAK,CACZ,KAAMzB,KAAMwB,GAAiB,IAAT1F,EAAEkE,KAEtByB,EAAOzB,EAAI,EAIb,OAAOyB,oBCzCT7I,EAAAD,SAAAQ,EAAA,GAAAA,CAAA,WACA,OAA0E,GAA1EY,OAAAC,kBAAiC,KAAQE,IAAA,WAAmB,YAAc8F,qBCF1E,IAAA8B,EAAA3I,EAAA,IACA4I,EAAA5I,EAAA,IACAP,EAAAD,QAAAQ,EAAA,aAAA6B,EAAAJ,EAAAN,GACA,OAAAwH,EAAAE,EAAAhH,EAAAJ,EAAAmH,EAAA,EAAAzH,KACC,SAAAU,EAAAJ,EAAAN,GAED,OADAU,EAAAJ,GAAAN,EACAU,kBCNApC,EAAAD,uICAA,IAAA2C,EAAAnC,EAAA,IAEA+F,EAAA/F,EAAA,GACA8I,EAAA9I,EAAA,IACAwH,EAAAxH,EAAA,GACA+I,EAAA/I,EAAA,GAEAR,EAAAmF,UAAA,SAA0BhC,EAA8B0B,GAGtD,GAAGyE,EAAAE,UAAUrG,GACX,OAAOA,EAIT,GAAgB,iBAANA,EACRA,EAAI,GAAKA,OAGJ,GAAgB,iBAANA,EACf,MAAMmD,UAAU,4CAIlB,IAAMrC,EAAa+D,EAAA9C,SAASL,KAAM,KAjBiC4E,EAkBxCF,EAAAhC,YAAYpE,GAlB4BuG,KAAA7C,EAAAzE,SAAAqH,EAAA,GAsBnE,OAJCxF,EAAEa,OAlBgE4E,EAAA,GAkBxDzF,EAAEe,WAlBsD0E,EAAA,GAmBnEzF,EAAEc,UAAYd,EAAEa,OAAOpB,OAGhB6C,EAAAC,QAAQvC,EAAY,MAARY,EAAgBlC,EAAAY,QAAQiF,aAAe3D,mFC5B5D,IAAAiC,EAAAtG,EAAA,GACAmJ,EAAAnJ,EAAA,IAEAR,EAAA4J,SAAA,SAAyBzG,GAGvB,IAAMc,EAAI0F,EAAAxE,UAAU0E,OAAOC,iBAAkB3G,EAAE0B,MAG/C,GAFAZ,EAAEe,WAAa7B,EAAE6B,YACE7B,EAAE6B,WAAa8B,EAAAC,QAAQ9C,EAAGd,GAAK2D,EAAAC,QAAQ5D,EAAGc,IAC5C,EACf,MAAM,IAAIR,WAAW,yCAOvB,IAHA,IAAM+B,EAAMrC,EAAE2B,OACRD,EAAO1B,EAAE0B,KACXwC,EAAI,EACC3G,EAAIyC,EAAE4B,UAAWrE,EAAI,EAAG2G,EAAIA,EAAIxC,EAAOW,IAAM9E,IAItD,OAAOyC,EAAE6B,YAAcqC,EAAIA,kFCtB7B,IAAA0C,EAAAvJ,EAAA,IASAR,EAAAgK,SAAA,SACE7G,EAAa0F,EAAcC,EAC3B7E,EAA0B8E,EAAcC,EACxCnE,GAKA,IAHA,IAAIoF,EAAQ,EAGLlB,EAAOC,GAAK,CACjB,IAAI7E,EAAYhB,EAAE0F,GAAQ5E,EAAE8E,KAAUkB,EACnC9F,EAAIU,EACLoF,EAAQ,GAERA,EAAQ,EACR9F,GAAQU,GAEV1B,EAAE0F,KAAU1E,EAId,OAAQ8F,EAAQ,EAAKF,EAAAG,UAAU/G,EAAG0F,EAAMC,EAAMjE,GAAQiE,kBC7BxD,IAAAtG,KAAuBA,eACvBvC,EAAAD,QAAA,SAAAmK,EAAAlI,GACA,OAAAO,EAAA3B,KAAAsJ,EAAAlI,qBCFA,IAAAmI,EAAA5J,EAAA,IACAP,EAAAD,QAAA,SAAAmK,GACA,IAAAC,EAAAD,GAAA,MAAA7D,UAAA6D,EAAA,sBACA,OAAAA,oBCHA,IAAAE,EAAA7J,EAAA,IACA8J,EAAA9J,EAAA,KACA+J,EAAA/J,EAAA,KACA2I,EAAA/H,OAAAC,eAEArB,EAAAqJ,EAAA7I,EAAA,IAAAY,OAAAC,eAAA,SAAAmJ,EAAAC,EAAAC,GAIA,GAHAL,EAAAG,GACAC,EAAAF,EAAAE,MACAJ,EAAAK,GACAJ,EAAA,IACA,OAAAnB,EAAAqB,EAAAC,EAAAC,GACG,MAAApK,IACH,WAAAoK,GAAA,QAAAA,EAAA,MAAApE,UAAA,4BAEA,MADA,UAAAoE,IAAAF,EAAAC,GAAAC,EAAA/I,OACA6I,kFCZAxK,EAAA2K,OAAA,SAAuBxH,GAErB,OADAA,EAAE6B,WAAa7B,EAAE4B,UAAY,IAAM5B,EAAE6B,WAC9B7B,kFCHT,IAAAyH,EAAApK,EAAA,IACAqK,EAAArK,EAAA,IACAsK,EAAAtK,EAAA,GAEAR,EAAA+K,OAAA,SAAuB5H,GAGrB,GAAmB,IAAhBA,EAAE4B,UACH,OAAO5B,EAITA,EAAE6B,cAGF,IAAM3B,EAAoB,EAAIF,EAAE4B,UAUhC,OATA+F,EAAA5H,UAAUC,EAAE2B,OAAQzB,EAAY,EAAGA,GAGhCF,EAAE4B,UAAY,IACf5B,EAAE4B,UAAY8F,EAAAG,WAAW7H,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAErD1B,EAAE4B,UAAY6F,EAAAK,gBAAgB9H,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAGrD1B,kFC1BT,IAAA+H,EAAA1K,EAAA,IACA2K,EAAA3K,EAAA,IACA4K,EAAA5K,EAAA,IACAsK,EAAAtK,EAAA,GACA+I,EAAA/I,EAAA,GASAR,EAAAqL,wBAAA,SAAAA,EACElI,EAAa0F,EAAcC,EAC3B7E,EAA0B8E,EAAcC,EACxCnE,GAEA,IAAIyG,EAAkB/B,EAAA1F,IAAIiF,EAAOD,EAAMG,EAAOD,GAG9C,GAAGuC,EAAU,EASX,OARAA,EAAUnI,EAAE0F,GAAQ5E,EAAE8E,IACTlE,EACX1B,EAAE2F,GAAQ,GAEV3F,EAAE2F,KAAU,EAAKwC,EAAUzG,EAC3ByG,GAAoBzG,GAEtB1B,EAAE0F,GAAQyC,EACHxC,EAKT,IAAMyC,EAAgB1C,GADtByC,EAAWA,EAAU,IAAO,GAEtBE,EAAejC,EAAA3F,IAAI2H,EAAOzC,GAC1B2C,EAAelC,EAAA3F,IAAImF,EAAOuC,EAAStC,GAGnC0C,EAAoB,IAAIjG,MAAMgG,EAAO1C,EAAO,GAClD+B,EAAAlI,KAAK8I,EAAS,EAAGzH,EAAG8E,EAAM0C,GAC1B,IAAME,EAAqBT,EAAAlB,SACzB0B,EAAS,EAAGD,EAAO1C,EAAM9E,EAAGwH,EAAMzC,EAAMnE,GAIpC+G,EAAmB,IAAInG,MAAM+F,EAAO3C,EAAO,EAAI8C,GACrDb,EAAAlI,KAAKgJ,EAAQ,EAAGzI,EAAG0F,EAAM2C,GACzB,IAAIK,EAAoBX,EAAAlB,SAAS4B,EAAQ,EAAGJ,EAAO3C,EAAM1F,EAAGqI,EAAM1C,EAAMjE,GAGxEgH,EAAYR,EACVO,EAAQ,EAAGC,EAAWH,EAAS,EAAGC,EAAY9G,GAIhD1B,EAAE2F,GAAQ,EACVgC,EAAArG,cAActB,EAAGqI,EAAM1C,EAAMwC,GAG7B,IAAMQ,EAAiBT,EACrBlI,EAAG0F,EAAM2C,EAAMvH,EAAG8E,EAAM0C,EAAM5G,GAOhC,GAHAgH,EAAYT,EAAAxC,YAAYgD,EAAQ,EAAGC,EAAW1I,EAAG0F,EAAMiD,EAAQjH,GAG5D2G,IAAS1C,GAAQ2C,IAASzC,EAU3B,OATG8C,GAAUP,GACXzC,EAAOyC,EAAQM,EACftC,EAAA3B,KAAKzE,EAAG2I,EAAQP,GAChBT,EAAAlI,KAAKO,EAAGoI,EAAOK,EAAQ,EAAGC,IAE1B/C,EADQ+C,EAAYC,EAASP,EACtBJ,EAAAY,gBAAgB5I,EAAGoI,EAAOO,EAAQF,EAAQ,EAAGC,EAAWhH,GAExDqG,EAAAlB,SAAS7G,EAAGoI,EAAOO,EAAQF,EAAQ,EAAGC,EAAWhH,GAEnDiE,EAITS,EAAA3B,KAAKzE,EAAG2I,EAAQhD,GAGhB,IAAMkD,EAAkBR,EAAOF,EAU/B,OATAxC,EAAOuC,EACLlI,EAAG6I,EAASlD,EAAOwC,EAASrH,EAAGwH,EAAMzC,EAAMnE,GAI7CgH,EAAYT,EAAAxC,YAAYgD,EAAQ,EAAGC,EAAW1I,EAAG6I,EAASlD,EAAMjE,GAGzDqG,EAAAlB,SAAS7G,EAAGoI,EAAOzC,EAAM8C,EAAQ,EAAGC,EAAWhH,mFC5FxD7E,EAAAwJ,UAAA,SAA0BrG,GACxB,OAAOA,EAAEX,eAAe,SACrBW,EAAEX,eAAe,WACjBW,EAAEX,eAAe,cACjBW,EAAEX,eAAe,yBAAAlC,EAAAsB,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,ICNtB,IAAAsK,EAAAzL,EAAA,IAEAR,EAAAkM,OAAA,SAAuB/I,GACrB,OAAO8I,EAAAC,OAAQ/I,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,sFCC7C7E,EAAAmM,MAAA,SACEhJ,EAAa0F,EAAcC,EAAcjE,GAKzC,IADA,IAAIuH,EAAY,EACR1L,EAAYoI,EAAMpI,KAAMmI,EAAM1F,EAAEzC,GAAKyC,EAAEzC,KAAO,EACpDyC,EAAEzC,GAAKyC,EAAEzC,IAAMmE,GAAQuH,GACvBA,EAAmB,EAAPjJ,EAAEzC,GAQhB,OAJmB,IAAhByC,EAAE2F,EAAO,MACRA,GAGIA,EAAMsD,mFCpBhB,IAAAzD,EAAAnI,EAAA,IACAuJ,EAAAvJ,EAAA,IACAwH,EAAAxH,EAAA,GAEAR,EAAAkJ,UAAA,SAA0B/F,GAgBxB,OAbGA,EAAE6B,WACH7B,EAAE4B,UAAYgF,EAAAG,UAAU/G,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAG3B,IAAhB1B,EAAE4B,WACXiD,EAAA/C,OAAO9B,GACPA,EAAE6B,eAIF7B,EAAE4B,UAAY4D,EAAAO,UAAW/F,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAGhD1B,kFCfTnD,EAAAkK,UAAA,SACE/G,EAAa0F,EAAcC,EAAcjE,GAIzC,MAAMA,EAAMgE,EAAOC,GAAQ3F,EAAE0F,KAAUhE,EAAM1B,EAAE0F,KAAU,GAWzD,OAPGA,IAASC,EACV3F,EAAE2F,KAAU,EAEZ3F,EAAE0F,GAAQ1F,EAAE0F,GAAQ,EAIfC,kFCjBT9I,EAAAkJ,UAAA,SACE/F,EAAa0F,EAAcC,EAAcjE,GAIzC,IAAI,IAAMoE,EAAiBpE,EAAO,EAAe,IAAZ1B,EAAE0F,GAAa1F,EAAE0F,KAAUI,GAOhE,OAHA9F,EAAE0F,GAAQ1F,EAAE0F,GAAQ,EAGZA,EAAK,IAAMC,GAAoB,IAAZ3F,EAAE0F,GAAeC,EAAO,EAAIA,kFCfzD9I,EAAA+G,QAAA,SACE5D,EAA0B0F,EAAcC,EACxC7E,EAA0B8E,EAAcC,GAIxC,IAAMhI,EAAY8H,EAAOD,EAAOG,EAAOD,EACvC,GAAS,IAAN/H,EACD,OAAOA,EAAI,GAAK,EAAI,EAItB,KAAM8H,EAAOD,GACX,GAAG1F,IAAI2F,KAAU7E,IAAI+E,GACnB,OAAO7F,EAAE2F,GAAQ7E,EAAE+E,IAAS,EAAI,EAKpC,OAAO,aAAA1I,EAAAsB,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,ICpBT,IAAA0K,EAAA7L,EAAA,IACAsG,EAAAtG,EAAA,GACA8L,EAAA9L,EAAA,GACA+L,EAAA/L,EAAA,IACA+F,EAAA/F,EAAA,GACAgM,EAAAhM,EAAA,IACA4K,EAAA5K,EAAA,IACAwH,EAAAxH,EAAA,GAEAR,EAAAyM,SAAA,SAAyBtJ,EAAYc,GAGnC,GAAGd,IAAMc,EACP,OAAO+D,EAAA9C,QAAQ/B,GAIjB,GAAmB,IAAhBc,EAAEc,UACH,OAAO5B,EAGT,IAAM0B,EAAe1B,EAAE0B,KAGvB,GAAmB,IAAhB1B,EAAE4B,UAKH,OAFAuH,EAAA1J,KAAKO,EAAGc,GACRsI,EAAA5B,OAAOxH,GACAoD,EAAAC,QAAQrD,EAAG0B,GAIpB,GAAG1B,EAAE6B,aAAef,EAAEe,WAKpB,OAFAuH,EAAA5B,OAAOxH,GACPkJ,EAAAK,IAAIvJ,EAAGc,GACAsI,EAAA5B,OAAOxH,GAIhBoD,EAAAC,QAAQrD,EAAGc,EAAEY,MAGb,IAAM9D,EAAIoC,EAAE6B,WAAa8B,EAAAC,QAAQ9C,EAAGd,GAAK2D,EAAAC,QAAQ5D,EAAGc,GAGpD,OAAS,IAANlD,GACDoC,EAAE0B,KAAOA,EACFmD,EAAA9C,QAAQ/B,KAIdpC,EAAI,GAGLwL,EAAA5B,OAAOxH,GAGJA,EAAE2B,OAAOpB,OAASO,EAAEc,YACrB5B,EAAE2B,OAAOpB,OAASO,EAAEc,WAItB5B,EAAE4B,UAAYyH,EAAAG,mBACZxJ,EAAE2B,OAAQ,EAAG3B,EAAE4B,UACfd,EAAEa,OAAQ,EAAGb,EAAEc,UACf5B,EAAE0B,OAKJ1B,EAAE4B,UAAYqG,EAAAxC,YACZzF,EAAE2B,OAAQ,EAAG3B,EAAE4B,UACfd,EAAEa,OAAQ,EAAGb,EAAEc,UACf5B,EAAE0B,MAIC0B,EAAAC,QAAQrD,EAAG0B,sBCjFpB,IAAA+H,EAAApM,EAAA,GAAAA,CAAA,QACAsH,EAAAtH,EAAA,IACAP,EAAAD,QAAA,SAAAiC,GACA,OAAA2K,EAAA3K,KAAA2K,EAAA3K,GAAA6F,EAAA7F,oBCFA,IAAAmF,EAAAF,KAAAE,KACAyF,EAAA3F,KAAA2F,MACA5M,EAAAD,QAAA,SAAAmK,GACA,OAAA2C,MAAA3C,MAAA,GAAAA,EAAA,EAAA0C,EAAAzF,GAAA+C,mBCJAlK,EAAAD,QAAA,SAAAmK,GACA,uBAAAA,EAAA,OAAAA,EAAA,mBAAAA,kBCAAlK,EAAAD,QAAA,SAAAmK,GACA,WAAAA,EAAA,MAAA7D,UAAA,yBAAA6D,GACA,OAAAA,oBCFA,IAAA4C,EAAAvM,EAAA,KACAwM,EAAAxM,EAAA,IACAP,EAAAD,QAAA,SAAAmK,GACA,OAAA4C,EAAAC,EAAA7C,oFCAAnK,EAAAiN,OAAA,SACE9J,EAAa0F,EAAcC,EAAcjE,GAKzC,IADA,IAAIoF,EAAQ,EACNpB,EAAOC,GAAK,CAChB,IAAI3E,GAAahB,EAAE0F,IAAS,GAAKoB,EAC9B9F,EAAIU,EACLoF,EAAQ,GAERA,EAAQ,EACR9F,GAAQU,GAEV1B,EAAE0F,KAAU1E,EASd,OALI8F,EAAQ,IACV9G,EAAE0F,KAAU,GAIPA,kFC1BT,IAAAqE,EAAA1M,EAAA,IAEAR,EAAAiN,OAAA,SAAuB9J,GAErB,OADAA,EAAE4B,UAAYmI,EAAAD,OAAQ9J,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAC3C1B,kFCJT,IAAAmJ,EAAA9L,EAAA,GACA0M,EAAA1M,EAAA,IACA+L,EAAA/L,EAAA,IACA+F,EAAA/F,EAAA,GACA2M,EAAA3M,EAAA,IACA0K,EAAA1K,EAAA,IACA2K,EAAA3K,EAAA,IACAsK,EAAAtK,EAAA,GAIAR,EAAA0M,IAAA,SAAoBvJ,EAAYc,GAG9B,GAAGd,IAAMc,EACP,OAAOiJ,EAAAD,OAAO9J,GAIhB,GAAmB,IAAhBc,EAAEc,UACH,OAAO5B,EAGT,IAAM0B,EAAe1B,EAAE0B,KAGvB,OAAmB,IAAhB1B,EAAE4B,WACHuH,EAAA1J,KAAKO,EAAGc,GACDsC,EAAAC,QAAQrD,EAAG0B,IAIjB1B,EAAE6B,aAAef,EAAEe,YAGpBuH,EAAA5B,OAAOxH,GACPgK,EAAAV,SAAStJ,EAAGc,GACLsI,EAAA5B,OAAOxH,KAIhBoD,EAAAC,QAAQrD,EAAGc,EAAEY,MAGV1B,EAAE4B,UAAYd,EAAEc,WAGjB+F,EAAA5H,UAAUC,EAAE2B,OAAQb,EAAEc,UAAWd,EAAEc,UAAY,GAG/C5B,EAAE4B,UAAYoG,EAAAY,gBACZ5I,EAAE2B,OAAQ,EAAG3B,EAAE4B,UACfd,EAAEa,OAAQ,EAAGb,EAAEc,UACf5B,EAAE0B,OAOJ1B,EAAE4B,UAAYmG,EAAAlB,SACZ7G,EAAE2B,OAAQ,EAAG3B,EAAE4B,UACfd,EAAEa,OAAQ,EAAGb,EAAEc,UACf5B,EAAE0B,MAKC0B,EAAAC,QAAQrD,EAAG0B,oFCrEpB,IAAAlC,EAAAnC,EAAA,IAIAR,EAAAoN,SAAA,SAAyBjK,GACvB,IAAMkK,EAAS1K,EAAAY,QAAQkF,OAGvB,GAAmB,IAAhBtF,EAAE4B,UACH,OAAQsI,EAAO3J,OAASP,EAAE0B,KAAQ,IAAMwI,EAAO,GAIjD,IAAMC,EAAenK,EAAE6B,WAAa,IAAM,GAG1C,GAAGqI,EAAO3J,OAASP,EAAE0B,KACnB,OAAOyI,EAAOnK,EAAE2B,OAAOV,MAAM,EAAGjB,EAAE4B,WAAWwI,UAAUlJ,KAAK,KAQ9D,IAJA,IAAI3D,EAAI,EACJyB,EAAYgB,EAAE4B,UACZD,EAAS3B,EAAE2B,OACX0I,EAAU,IAAI/H,MAAMtD,GACpBA,EAAI,GACRqL,EAAQ9M,KAAO2M,EAAOvI,IAAS3C,IAEjC,OAAOmL,EAAOE,EAAQnJ,KAAK,eAAA/D,EAAAsB,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IC1B7B3B,EAAAyN,OAAA,SAAuBtK,GACrB,OAAOA,EAAE6B,YAAc,EAAoB,IAAhB7B,EAAE4B,UAAkB,EAAI,aAAAzE,EAAAsB,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,ICFrD,IAAAmF,EAAAtG,EAAA,GACAmJ,EAAAnJ,EAAA,IACAkN,EAAAlN,EAAA,IACAsK,EAAAtK,EAAA,GACAwH,EAAAxH,EAAA,GAEAR,EAAA2N,WAAA,SAA2BxK,EAAYc,GAGrC,GAAIA,EAAEe,WACJ,MAAM,IAAI4I,UAAU,qCAItB,GAAoB,IAAhBzK,EAAE4B,WAAmC,IAAhBd,EAAEc,UACzB,OAAO5B,EAIT,IAAM0K,EAAIlE,EAAAxE,UAAUhC,EAAE4B,UAAWd,EAAEY,MACnC,GAAIiC,EAAAC,QAAQ9C,EAAG4J,IAAM,EACnB,OAAO7F,EAAA9C,QAAQ/B,GAIjB,IAAMmE,EAAIoG,EAAA9D,SAAS3F,GAOnB,OAJA6G,EAAAtG,UAAUrB,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWuC,GACpCnE,EAAE2B,OAAOpB,OAASP,EAAE4B,UAAY5B,EAAE4B,UAAYuC,EAGvCnE,kFCjCT,IAAAR,EAAAnC,EAAA,IAEAkN,EAAAlN,EAAA,IACAsK,EAAAtK,EAAA,GACA+I,EAAA/I,EAAA,GAEAR,EAAA8N,UAAA,SAA0B3K,EAAYc,GAGpC,GAAIA,EAAEe,WACJ,MAAM,IAAI4I,UAAU,oCAItB,GAAoB,IAAhBzK,EAAE4B,WAAmC,IAAhBd,EAAEc,UACzB,OAAO5B,EAIT,IAAMmE,EAAIoG,EAAA9D,SAAS3F,GAGnB,GAAIqD,EAAI3E,EAAAY,QAAQC,cAAgBL,EAAE4B,UAChC,MAAM,IAAItB,WAAJ,+CAC2Cd,EAAAY,QAAQC,eAe3D,OAVAL,EAAE2B,OAAOpB,OAASP,EAAE4B,UAAYuC,EAC5BA,GAAKnE,EAAE4B,UACT+F,EAAArG,cAActB,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWuC,GAExCwD,EAAAxG,YAAYnB,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWuC,GAExCiC,EAAA3B,KAAKzE,EAAE2B,OAAQ,EAAGwC,GAClBnE,EAAE4B,UAAY5B,EAAE4B,UAAYuC,EAGrBnE,kFCtCT,IAAA8I,EAAAzL,EAAA,IACAuN,EAAAvN,EAAA,IACAsK,EAAAtK,EAAA,GACAwH,EAAAxH,EAAA,GAEAR,EAAAgO,IAAA,SAAoB7K,EAAYc,GAG9B,GAAmB,IAAhBA,EAAEc,UACH,OAAOiD,EAAA/C,OAAO9B,GAIhB,GAAGc,EAAEe,WAAW,CAGd,GAAmB,IAAhB7B,EAAE4B,UACH,MAAM,IAAI6I,UAAU,kBAGtB,OAAO5F,EAAA9C,QAAQ/B,GAIjB,OAAmB,IAAhBA,EAAE4B,UACI5B,GAITA,EAAE6B,WAAa7B,EAAE6B,aAAeiH,EAAAC,OAAOjI,GAGpB,IAAhBd,EAAE4B,WAAmC,IAAhB5B,EAAE2B,OAAO,GACxB3B,GAIT2H,EAAA5H,UAAUC,EAAE2B,QAGT3B,EAAE4B,UAAY,GAAfmC,KAAA8G,IAAqB/J,EAAEY,KAASZ,EAAEc,UAAY,GAAM,EAGpD5B,EAAE4B,WAAamC,KAAA8G,IAAC/J,EAAEY,KAAQZ,EAAEc,WAAa,IAI3C5B,EAAE4B,UAAYgJ,EAAAE,eACZ9K,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,KAC5BZ,EAAEa,OAAOV,MAAM,EAAEH,EAAEc,WAAY,EAAGd,EAAEc,UAAWd,EAAEY,MAG5C1B,oFCrDT,IAAA+H,EAAA1K,EAAA,IACA4K,EAAA5K,EAAA,IACAsK,EAAAtK,EAAA,GACA+I,EAAA/I,EAAA,GAQAR,EAAAiL,gBAAA,SAAAA,EACE9H,EAAaS,EAAaC,EAAagB,GAEvC,IAAIyG,EAAkBzH,EAAMD,EAG5B,GAAG0H,EAAU,EASX,OARAA,EAAUnI,EAAES,GAAOT,EAAES,IACRiB,EACX1B,EAAEU,GAAO,GAETV,EAAEU,KAAS,EAAKyH,EAAUzG,EAC1ByG,GAAoBzG,GAEtB1B,EAAES,GAAO0H,EACFzH,EAKT,IAAMqK,EAActK,GADpB0H,EAAWA,EAAU,IAAO,GAItBM,EAAmB,IAAInG,MAAM,EAAE6F,EAAU,GAC/CR,EAAAlI,KAAKgJ,EAAQ,EAAGzI,EAAGS,EAAKsK,GACxB,IAAIrC,EAAoBX,EAAAlB,SAAS4B,EAAQ,EAAGN,EAASnI,EAAG+K,EAAKrK,EAAKgB,GAGlE1B,EAAEU,GAAO,EACTiH,EAAArG,cAActB,EAAG+K,EAAKrK,EAAKyH,GAG3B,IAAMQ,EAAiBb,EAAgB9H,EAAGS,EAAKsK,EAAKrJ,GAGpD0E,EAAA3B,KAAKzE,EAAG2I,EAAQjI,GAGhB,IAAMmI,EAAUkC,EAAM5C,EAStB,OARAzH,EAAMoH,EAAgB9H,EAAG6I,EAASnI,EAAMyH,EAASzG,GAGjDgH,EAAYZ,EAAgBW,EAAQ,EAAGC,EAAWhH,GAClDgH,EAAYT,EAAAxC,YAAYgD,EAAQ,EAAGC,EAAW1I,EAAGS,EAAKkI,EAAQjH,GAC9DgH,EAAYT,EAAAxC,YAAYgD,EAAQ,EAAGC,EAAW1I,EAAG6I,EAASnI,EAAKgB,GAGxDqG,EAAAlB,SAAS7G,EAAG+K,EAAKrK,EAAK+H,EAAQ,EAAGC,EAAWhH,mFCzDrD,IAAA0B,EAAA/F,EAAA,GACA2N,EAAA3N,EAAA,IACA0M,EAAA1M,EAAA,IACA4N,EAAA5N,EAAA,IACA6N,EAAA7N,EAAA,IACA8N,EAAA9N,EAAA,IACAsK,EAAAtK,EAAA,GACAwH,EAAAxH,EAAA,GAEAR,EAAAuO,SAAA,SAAyBpL,EAAYc,GAGnC,GAAGd,IAAMc,EACP,OAAOkK,EAAApD,OAAO5H,GAIhB,GAAmB,IAAhBA,EAAE4B,UACH,OAAO5B,EAIT,GAAmB,IAAhBc,EAAEc,UACH,OAAOiD,EAAA9C,QAAQ/B,GAIjBA,EAAE6B,WAAa7B,EAAE6B,aAAef,EAAEe,WAGlC,IAAMH,EAAe1B,EAAE0B,KAIvB,GAHA0B,EAAAC,QAAQrD,EAAGc,EAAEY,MAGM,IAAhBZ,EAAEc,UAAgB,CACnB,IAAMyJ,EAAuBvK,EAAEa,OAAO,GAGnC0J,EAAe,EAChBrL,EAAE4B,UAAYuJ,EAAAG,0BACZtL,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWyJ,EAAcrL,EAAE0B,MAInB,IAAjB2J,IACRrL,EAAE4B,UAAYmI,EAAAD,OAAO9J,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,YAI9C,GAAmB,IAAhB1B,EAAE4B,UAAgB,CAC1B,IAAM2J,EAAuBvL,EAAE2B,OAAO,GAGtC3B,EAAE4B,UAAYd,EAAEc,UAChB5B,EAAE2B,OAASb,EAAEa,OAAOV,MAAM,EAAGH,EAAEc,WAG5B2J,EAAe,EAChBvL,EAAE4B,UAAYuJ,EAAAG,0BACZtL,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW2J,EAAcvL,EAAE0B,MAEnB,IAAjB6J,IACRvL,EAAE4B,UAAYmI,EAAAD,OAAO9J,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,WAG9C,CAGL,IAAMxB,EAAoBF,EAAE4B,UAAYd,EAAEc,UAC1C+F,EAAA5H,UAAUC,EAAE2B,OAAQzB,EAAY,EAAGA,GAGhCF,EAAE4B,UAAY,KAAOd,EAAEc,UAAY,IACpC5B,EAAE4B,UAAYsJ,EAAAM,mBACZxL,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWd,EAAEa,OAAQ,EAAGb,EAAEc,UAAW5B,EAAE0B,MAGxD1B,EAAE4B,UAAYqJ,EAAA/C,wBACZlI,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWd,EAAEa,OAAQ,EAAGb,EAAEc,UAAW5B,EAAE0B,MAK5D,OAAO0B,EAAAC,QAAQrD,EAAG0B,mFCnFpB,IAAAiC,EAAAtG,EAAA,GAEAR,EAAA4D,IAAA,SAAoBT,EAAYc,GAC9B,OAAO6C,EAAAC,QAAQ5D,EAAGc,GAAK,EAAIA,EAAId,kFCHjC,IAAA2D,EAAAtG,EAAA,GAEAR,EAAA6D,IAAA,SAAoBV,EAAYc,GAC9B,OAAO6C,EAAAC,QAAQ5D,EAAGc,GAAK,EAAIA,EAAId,+HCHjC,IAAAmJ,EAAA9L,EAAA,GACA+F,EAAA/F,EAAA,GACAoO,EAAApO,EAAA,IACAwH,EAAAxH,EAAA,GAGAR,EAAA6O,IAAA,SAAoB1L,EAAYc,GAM9B,GAHAd,EAAE6B,cAGC7B,IAAMc,GAAqB,IAAhBd,EAAE4B,WAAoC,IAAhBd,EAAEc,WAAmC,IAAhBd,EAAEa,OAAO,GAChE,OAAO3B,EAIT,GAAmB,IAAhBc,EAAEc,UACH,OAAOiD,EAAA9C,QAAQ/B,GAGjB,IAAM0B,EAAe1B,EAAE0B,KAGvB,GAAmB,IAAhB1B,EAAE4B,WAAmC,IAAhB5B,EAAE2B,OAAO,GAC/BwH,EAAA1J,KAAKO,EAAGc,GACRd,EAAE6B,kBAGG,CAGLuB,EAAAC,QAAQrD,EAAGc,EAAEY,MAHR,IAAAiK,EAMqBF,EAAAC,IACxB1L,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWd,EAAEa,OAAQ,EAAGb,EAAEc,UAAW5B,EAAE0B,MAPnDkK,KAAAlI,EAAAzE,SAAA0M,EAAA,GAMJ3L,EAAE2B,OANEiK,EAAA,GAMM5L,EAAE4B,UANRgK,EAAA,GAYP,OAAOxI,EAAAC,QAAQrD,EAAG0B,mFCzCpB,IAAA8D,EAAAnI,EAAA,IACAuJ,EAAAvJ,EAAA,IAEAR,EAAAkK,UAAA,SAA0B/G,GAgBxB,OAbGA,EAAE6B,YACH7B,EAAE4B,UAAY4D,EAAAO,UAAU/F,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAGjC,IAAhB1B,EAAE4B,YACH5B,EAAE6B,gBAKJ7B,EAAE4B,UAAYgF,EAAAG,UAAW/G,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAGhD1B,+HCnBT,IAAAwF,EAAAnI,EAAA,IACAwO,EAAAxO,EAAA,IACAwH,EAAAxH,EAAA,GAEAR,EAAAmM,MAAA,SAAsBhJ,GACpB,IAAMiJ,EAAqBpE,EAAA9C,SAASL,KAAM1B,EAAE0B,OAG5C,GAAmB,IAAhB1B,EAAE4B,UACH,OAAQ5B,EAAGiJ,GALiB,IAAA6C,EASOD,EAAA7C,MAAOhJ,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAW5B,EAAE0B,MAT1CqK,KAAArI,EAAAzE,SAAA6M,EAAA,GAY9B,OAHC9L,EAAE4B,UAT2BmK,EAAA,GAShB9C,EAAUrH,UATMmK,EAAA,GAYH,IAAxB9C,EAAUrH,WACH5B,EAAGiJ,IAIVjJ,EAAE6B,YAGH2D,EAAAO,UAAU/F,IAGJA,EAAG6E,EAAA/C,OAAOmH,qFC5BpBpM,EAAAkM,OAAA,SACE/I,EAA0B0F,EAAcC,EAAcjE,GAItD,GAAGgE,IAASC,EACV,SAIF,GAAkB,IAAP,EAAPjE,GACF,OAAyB,IAAP,EAAV1B,EAAE0F,IAIZ,IAAIsG,EAAM,EACV,GACEA,GAAYhM,EAAE0F,WACRA,EAAOC,GACf,OAAqB,IAAP,EAANqG,gICnBV,IAAArI,EAAAtG,EAAA,IACA0M,EAAA1M,EAAA,IACAwO,EAAAxO,EAAA,IACAyL,EAAAzL,EAAA,IACA4K,EAAA5K,EAAA,IASAR,EAAAoP,SAAA,SACEjM,EAAa0F,EAAcC,EAC3B7E,EAAa8E,EAAcC,EAC3BnE,GAKA,IADA,IAAIN,EAAS,EACP0H,EAAAC,OAAO/I,EAAG0F,EAAMC,EAAMjE,IAASoH,EAAAC,OAAOjI,EAAG8E,EAAMC,EAAMnE,IAAM,KAAAoK,EACtDD,EAAA7C,MAAMhJ,EAAG0F,EAAMC,EAAMjE,GAA7BiE,KAD8DjC,EAAAzE,SAAA6M,EAAA,UAAAI,EAEtDL,EAAA7C,MAAMlI,EAAG8E,EAAMC,EAAMnE,GAA7BmE,KAF8DnC,EAAAzE,SAAAiN,EAAA,QAG7D9K,EAIJ,KAAM0H,EAAAC,OAAO/I,EAAG0F,EAAMC,EAAMjE,IAAM,KAAAyK,EACvBN,EAAA7C,MAAMhJ,EAAG0F,EAAMC,EAAMjE,GAA7BiE,KAD+BjC,EAAAzE,SAAAkN,EAAA,MAKlC,KAAMrD,EAAAC,OAAOjI,EAAG8E,EAAMC,EAAMnE,IAAM,KAAA0K,EACvBP,EAAA7C,MAAMlI,EAAG8E,EAAMC,EAAMnE,GAA7BmE,KAD+BnC,EAAAzE,SAAAmN,EAAA,MAMlC,OAAa,CACX,IAAIxO,EAAI+F,EAAAC,QAAQ5D,EAAG0F,EAAMC,EAAM7E,EAAG8E,EAAMC,GAExC,GAAU,IAANjI,EACF,MAIF,GAAGA,EAAI,EAAE,CACP,IAAM8M,EAAc1K,EACpBA,EAAIc,EACJA,EAAI4J,EACJ9M,EAAI8H,EACJA,EAAOE,EACPA,EAAOhI,EACPA,EAAI+H,EACJA,EAAOE,EACPA,EAAOjI,EAITiI,EAAOoC,EAAAxC,YAAY3E,EAAG8E,EAAMC,EAAM7F,EAAG0F,EAAMC,EAAMjE,GAGjD,EAAG,KAAA2K,EACQR,EAAA7C,MAAMlI,EAAG8E,EAAMC,EAAMnE,GAA7BmE,KADAnC,EAAAzE,SAAAoN,EAAA,YAEMvD,EAAAC,OAAOjI,EAAG8E,EAAMC,EAAMnE,IAIjC,KAAMN,KAAW,GACfuE,EAAOoE,EAAAD,OAAO9J,EAAG0F,EAAMC,EAAMjE,GAG/B,OAAQ1B,EAAG0F,EAAMC,gICxEnB,IAAAhC,EAAAtG,EAAA,GACA8L,EAAA9L,EAAA,GACA+F,EAAA/F,EAAA,GACAiP,EAAAjP,EAAA,IAEAR,EAAA0P,IAAA,SAAoBvM,EAAYc,GAM9B,GAHAd,EAAE6B,cAGC7B,IAAMc,GAAqB,IAAhBA,EAAEc,UACd,OAAO5B,EAIT,GAAmB,IAAhBA,EAAE4B,UAGH,OAFAuH,EAAA1J,KAAKO,EAAGc,GACRd,EAAE6B,cACK7B,EAIT,IAAM0B,EAAe1B,EAAE0B,KAMvB,GAHA0B,EAAAC,QAAQrD,EAAGc,EAAEY,MAGQ,IAAlBiC,EAAAC,QAAQ5D,EAAGc,GAAS,KAAA0L,EAGKF,EAAAL,SACxBjM,EAAE2B,OAAQ,EAAG3B,EAAE4B,UACfd,EAAEa,OAAOV,MAAM,EAAGH,EAAEc,WAAY,EAAGd,EAAEc,UACrC5B,EAAE0B,MANiB+K,KAAA/I,EAAAzE,SAAAuN,EAAA,GAGpBxM,EAAE2B,OAHkB8K,EAAA,GAGVzM,EAAE4B,UAHQ6K,EAAA,GAWvB,OAAOrJ,EAAAC,QAAQrD,EAAG0B,mFCpCpB7E,EAAAyO,0BAAA,SACEtL,EAAa0F,EAAcC,EAC3B+G,EAAoBhL,GAKpB,IADA,IAAIoF,EAAQ,EACNpB,EAAOC,GAAK,CAChB,IAAI3E,EAAahB,EAAE0F,GAAQgH,EAAc5F,EACtC9F,EAAIU,EACLoF,EAAQ,GAERA,EAAQ,EAAK9F,EAAIU,EACjBV,GAAQU,GAEV1B,EAAE0F,KAAU1E,EASd,OALG8F,EAAQ,IACT9G,EAAE0F,KAAUoB,GAIPpB,kFC7BT,IAAA/B,EAAAtG,EAAA,IACA8N,EAAA9N,EAAA,IACA4K,EAAA5K,EAAA,IACAsK,EAAAtK,EAAA,GACA+I,EAAA/I,EAAA,GAwEA,SAAAsP,EAA6BC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYtL,GACvF,IAAIuL,EAAYL,EAAGlL,EAAOmL,EACtBxO,EAAY4O,EAAIF,EAOpB,OALA1O,EAAIA,EAAEqD,GADNuL,EAAI,EAAKA,EAAIF,GACEC,EAAKF,GACb,IAELG,GADA5O,EAAIA,EAAI0O,EAAGrL,EAAOsL,GACT,EAAKC,EAAI,EAAIA,EAAI,GAErBA,EArETpQ,EAAAqQ,cAAA,SACEC,EAAaC,EAAcC,EAC3BC,EAA0BC,EAAcC,EACxC9L,GAIA,IAAM+L,EAAeD,EAAOD,EACtBG,EAAcL,EAAOD,EAAOK,EAC5BE,EAAc,IAAIrL,MAAMoL,EAAM,GACpCtH,EAAA3B,KAAKkJ,EAAG,EAAGD,EAAM,GAIjB,IADA,IAAIE,EAAeP,EACb1J,EAAAC,QAAQuJ,EAAGC,EAAOM,EAAKE,EAAMN,EAAGC,EAAMC,IAAS,KAGjDG,EAAED,GAGJE,EAAO3F,EAAAxC,YAAY0H,EAAGC,EAAOM,EAAKE,EAAMN,EAAGC,EAAMC,EAAM9L,GAOzD,IAHA,IAAMmM,EAAaP,EAAEE,EAAK,GACpBM,EAAeR,EAAEE,EAAK,GACtBO,EAAe,IAAIzL,MAAMmL,EAAO,GAC9BlQ,EAAY8P,EAAO,EAAGW,EAAcN,EAAKM,KAAQ,IAAKzQ,EAQ5D,GAJAoQ,EAAEK,GAAOrB,EAAoBQ,EAAE5P,GAAI4P,EAAE5P,EAAE,GAAI4P,EAAE5P,EAAE,GAAIsQ,EAAIC,EAAMpM,GAI/C,IAAXiM,EAAEK,GAAL,CAGArG,EAAAlI,KAAKsO,EAAI,EAAGT,EAAGC,EAAMC,GACrB,IAAIS,EAAgB9C,EAAAG,0BAA0ByC,EAAI,EAAGN,EAAME,EAAEK,GAAMtM,GAChEiC,EAAAC,QAAQmK,EAAI,EAAGE,EAAOd,EAAGC,EAAOY,EAAKJ,GAAQ,MAC5CD,EAAEK,GACJC,EAAQhG,EAAAxC,YAAYsI,EAAI,EAAGE,EAAOX,EAAGC,EAAMC,EAAM9L,IAEnDkM,EAAO3F,EAAAxC,YAAY0H,EAAGC,EAAOY,EAAKJ,EAAMG,EAAI,EAAGE,EAAOvM,GAKxD,KAAMkM,EAAOR,GAAwB,IAAhBD,EAAES,EAAO,MAC1BA,EAIJ,OAAQD,EAAGR,EAAe,IAAXQ,EAAED,GAAcA,EAAMA,EAAM,EAAGE,gICrEhD,IAAAxK,EAAA/F,EAAA,GACA6Q,EAAA7Q,EAAA,IACA8Q,EAAA9Q,EAAA,IACAwH,EAAAxH,EAAA,GAEAR,EAAAuR,mBAAA,SAAmCpO,EAAYc,GAG7C,GAAmB,IAAhBA,EAAEc,UACH,MAAM,IAAI6I,UAAU,kBAItB,GAAGzK,IAAMc,EACP,OAAQ+D,EAAA/C,OAAO9B,GAAI6E,EAAA9C,SAASL,KAAM1B,EAAE0B,QAOtC,GAHA1B,EAAE6B,WAAa7B,EAAE6B,aAAef,EAAEe,WAGf,IAAhB7B,EAAE4B,WAAoC,IAAhBd,EAAEc,WAAmC,IAAhBd,EAAEa,OAAO,GACrD,OAAQ3B,EAAG6E,EAAA9C,SAASL,KAAM1B,EAAE0B,QAI9B,GAAmB,IAAhB1B,EAAE4B,WAAmC,IAAhB5B,EAAE2B,OAAO,GAC/B,OAAQkD,EAAA9C,QAAQ/B,GAAI6E,EAAA/C,QAAQJ,KAAM1B,EAAE0B,QAItC,IAAMA,EAAe1B,EAAE0B,KACvB,GAAGA,IAASZ,EAAEY,KAAK,CAGjB,IAAMoC,EAAgBC,KAAKC,IAAItC,GAAQqC,KAAKC,IAAIlD,EAAEY,MAClD,GAAGqC,KAAKE,KAAKjE,EAAE4B,UAAYkC,GAAShD,EAAEc,UAAU,CAC9C,IAAMqH,EAAqBpE,EAAAtD,UAAWvB,GACtC,OAAQ6E,EAAA9C,QAAQ/B,GAAIiJ,GAItB7F,EAAAC,QAAQrD,EAAGc,EAAEY,MAIf,GAAG1B,EAAE4B,UAAYd,EAAEc,UAAU,CAC3BwB,EAAAC,QAAQrD,EAAG0B,GACX,IAAM2M,EAAqBxJ,EAAAtD,UAAWvB,GACtC,OAAQ6E,EAAA9C,QAAQ/B,GAAIqO,GAItB,IAAMC,EAAazJ,EAAA/C,QAAQJ,KAAM1B,EAAE0B,OACnC,GAAGZ,EAAEc,UAAY,EAAE,KAAA2M,EACYJ,EAAAK,oBAC3BxO,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWd,EAAEa,OAAO,GAAI3B,EAAE0B,MAF1B+M,KAAA/K,EAAAzE,SAAAsP,EAAA,GAChBvO,EAAE4B,UADc6M,EAAA,GACHH,EAAE3M,OAAO,GADN8M,EAAA,GAIE,IAAhBH,EAAE3M,OAAO,IACVkD,EAAA9C,QAAQuM,OAEL,KAAAI,EAGDR,EAAAhB,cACFlN,EAAE2B,OAAQ,EAAG3B,EAAE4B,UAAWd,EAAEa,OAAQ,EAAGb,EAAEc,UAAW5B,EAAE0B,MAJnDiN,KAAAjL,EAAAzE,SAAAyP,EAAA,GAEH1O,EAAE2B,OAFCgN,EAAA,GAEOL,EAAE3M,OAFTgN,EAAA,GAEiB3O,EAAE4B,UAFnB+M,EAAA,GAE8BL,EAAE1M,UAFhC+M,EAAA,GAWP,OAFAvL,EAAAC,QAAQrD,EAAG0B,GACX0B,EAAAC,QAAQiL,EAAG5M,IACH1B,EAAGsO,mFCzEb,IAAAvG,EAAA1K,EAAA,IASAR,EAAA+L,gBAAA,SACE5I,EAAa0F,EAAcC,EAC3B7E,EAA0B8E,EAAcC,EACxCnE,GAKA,IADA,IAAMkN,EAAkBhJ,EAAOF,EAAOC,EAC9BxB,EAAYyK,EAASzK,EAAI0B,EAAM7F,EAAE2F,KAAU7E,EAAEqD,MAIrD,OAAO4D,EAAAlB,SAAS7G,EAAG0F,EAAMC,EAAM7E,EAAG8E,EAAMgJ,EAASlN,qBCpBnD,IAAAmN,EAAAxR,EAAA,IACAyR,EAAAzR,EAAA,EAAAA,CAAA,eAEA0R,EAA+C,aAA/CF,EAAA,WAA2B,OAAAjO,UAA3B,IASA9D,EAAAD,QAAA,SAAAmK,GACA,IAAAK,EAAA2H,EAAAlO,EACA,gBAAAkG,EAAA,mBAAAA,EAAA,OAEA,iBAAAgI,EAVA,SAAAhI,EAAAlI,GACA,IACA,OAAAkI,EAAAlI,GACG,MAAA3B,KAHH,CAUAkK,EAAApJ,OAAA+I,GAAA8H,IAAAE,EAEAD,EAAAF,EAAAxH,GAEA,WAAAvG,EAAA+N,EAAAxH,KAAA,mBAAAA,EAAA4H,OAAA,YAAAnO,iCCpBA,IAAAoO,EAAA7R,EAAA,GAAAA,KAGAA,EAAA,GAAAA,CAAA8R,OAAA,kBAAAC,GACAC,KAAAC,GAAAH,OAAAC,GACAC,KAAAxM,GAAA,GAEC,WACD,IAEA0M,EAFAlI,EAAAgI,KAAAC,GACAE,EAAAH,KAAAxM,GAEA,OAAA2M,GAAAnI,EAAA9G,QAAiC/B,aAAAuE,UACjCwM,EAAAL,EAAA7H,EAAAmI,GACAH,KAAAxM,IAAA0M,EAAAhP,QACU/B,MAAA+Q,EAAAxM,aAAA,SAAA5F,EAAAsB,EAAAJ,GCfV,IAAAoR,EAAApS,EAAA,IAAA6I,EACAwJ,EAAArS,EAAA,IACAyR,EAAAzR,EAAA,EAAAA,CAAA,eAEAP,EAAAD,QAAA,SAAAmK,EAAA2I,EAAAC,GACA5I,IAAA0I,EAAA1I,EAAA4I,EAAA5I,IAAA5H,UAAA0P,IAAAW,EAAAzI,EAAA8H,GAAoEe,gBAAArR,MAAAmR,oBCJpE7S,EAAAD,QAAA,gGAEAiT,MAAA,eAAA3S,EAAAsB,GCHA,IAAAsR,EAAA,EACAC,EAAAjM,KAAAkM,SACAnT,EAAAD,QAAA,SAAAiC,GACA,gBAAAoR,gBAAApR,EAAA,GAAAA,EAAA,QAAAiR,EAAAC,GAAA/F,SAAA,gBAAA9M,EAAAsB,EAAAJ,GCHA,IAAAyG,EAAAzH,EAAA,GACA4H,EAAA5H,EAAA,GAEAqH,EAAAO,EADA,wBACAA,EADA,2BAGAnI,EAAAD,QAAA,SAAAiC,EAAAN,GACA,OAAAkG,EAAA5F,KAAA4F,EAAA5F,YAAAN,UACC,eAAAwE,MACD+B,QAAAD,EAAAC,QACArG,KAAArB,EAAA,oBACA8S,UAAA,mDAAAhT,EAAAsB,GCVA3B,EAAAD,QAAA,SAAAuT,EAAA5R,GACA,OACAL,aAAA,EAAAiS,GACAP,eAAA,EAAAO,GACAC,WAAA,EAAAD,GACA5R,2BCLA,IAAAyI,EAAA5J,EAAA,IACAiT,EAAAjT,EAAA,GAAAiT,SAEAC,EAAAtJ,EAAAqJ,IAAArJ,EAAAqJ,EAAAE,eACA1T,EAAAD,QAAA,SAAAmK,GACA,OAAAuJ,EAAAD,EAAAE,cAAAxJ,sBCLAlK,EAAAD,QAAA,SAAA4T,GACA,IACA,QAAAA,IACG,MAAAtT,GACH,qBAAAA,EAAAsB,EAAAJ,GCJA,IAAA4G,EAAA5H,EAAA,GACAyH,EAAAzH,EAAA,GACAqT,EAAArT,EAAA,KACAsT,EAAAtT,EAAA,IACAqS,EAAArS,EAAA,IAGAuT,EAAA,SAAAC,EAAA/S,EAAA2D,GACA,IASA3C,EAAAgS,EAAAjN,EATAkN,EAAAF,EAAAD,EAAAI,EACAC,EAAAJ,EAAAD,EAAAM,EACAC,EAAAN,EAAAD,EAAAQ,EACAC,EAAAR,EAAAD,EAAAtJ,EACAgK,EAAAT,EAAAD,EAAA9P,EACAyQ,EAAAV,EAAAD,EAAAY,EACA3U,EAAAoU,EAAAnM,IAAAhH,KAAAgH,EAAAhH,OACA2T,EAAA5U,EAAAuC,UACAoC,EAAAyP,EAAAhM,EAAAkM,EAAAlM,EAAAnH,IAAAmH,EAAAnH,QAAkFsB,UAGlF,IAAAN,KADAmS,IAAAxP,EAAA3D,GACA2D,GAEAqP,GAAAC,GAAAvP,cAAA1C,KACA4Q,EAAA7S,EAAAiC,KAEA+E,EAAAiN,EAAAtP,EAAA1C,GAAA2C,EAAA3C,GAEAjC,EAAAiC,GAAAmS,GAAA,mBAAAzP,EAAA1C,GAAA2C,EAAA3C,GAEAwS,GAAAR,EAAAJ,EAAA7M,EAAAoB,GAEAsM,GAAA/P,EAAA1C,IAAA+E,EAAA,SAAA6G,GACA,IAAAsG,EAAA,SAAA9M,EAAAC,EAAAvG,GACA,GAAAyR,gBAAA3E,EAAA,CACA,OAAA9J,UAAAL,QACA,kBAAAmK,EACA,kBAAAA,EAAAxG,GACA,kBAAAwG,EAAAxG,EAAAC,GACW,WAAAuG,EAAAxG,EAAAC,EAAAvG,GACF,OAAA8M,EAAAgH,MAAArC,KAAAzO,YAGT,OADAoQ,EAAA5R,UAAAsL,EAAAtL,UACA4R,EAXA,CAaKnN,GAAAwN,GAAA,mBAAAxN,EAAA6M,EAAAvL,SAAAzH,KAAAmG,KAELwN,KACAxU,EAAA8U,UAAA9U,EAAA8U,aAA+C7S,GAAA+E,EAE/CgN,EAAAD,EAAAtC,GAAAmD,MAAA3S,IAAA6R,EAAAc,EAAA3S,EAAA+E,MAKA+M,EAAAI,EAAA,EACAJ,EAAAM,EAAA,EACAN,EAAAQ,EAAA,EACAR,EAAAtJ,EAAA,EACAsJ,EAAA9P,EAAA,GACA8P,EAAAY,EAAA,GACAZ,EAAAgB,EAAA,GACAhB,EAAAtC,EAAA,IACAxR,EAAAD,QAAA+T,iBC7DA9T,EAAAD,YAAA,SAAAM,EAAAsB,EAAAJ,GAAA,aCCA,IAAAwT,EAAAxU,EAAA,IACAuT,EAAAvT,EAAA,IACAyU,EAAAzU,EAAA,KACAsT,EAAAtT,EAAA,IACA0U,EAAA1U,EAAA,IACA2U,EAAA3U,EAAA,KACA4U,EAAA5U,EAAA,IACA6U,EAAA7U,EAAA,IACA8U,EAAA9U,EAAA,EAAAA,CAAA,YACA+U,OAAAC,MAAA,WAAAA,QAKAC,EAAA,WAA8B,OAAAjD,MAE9BvS,EAAAD,QAAA,SAAA0V,EAAAC,EAAAC,EAAA3P,EAAA4P,EAAAC,EAAAC,GACAZ,EAAAS,EAAAD,EAAA1P,GACA,IAeA+P,EAAA/T,EAAAgU,EAfAC,EAAA,SAAAC,GACA,IAAAZ,GAAAY,KAAAC,EAAA,OAAAA,EAAAD,GACA,OAAAA,GACA,IAVA,OAWA,IAVA,SAUA,kBAA6C,WAAAP,EAAApD,KAAA2D,IACxC,kBAA4B,WAAAP,EAAApD,KAAA2D,KAEjClE,EAAA0D,EAAA,YACAU,EAdA,UAcAR,EACAS,KACAF,EAAAV,EAAAnT,UACAgU,EAAAH,EAAAd,IAAAc,EAnBA,eAmBAP,GAAAO,EAAAP,GACAW,EAAAD,GAAAL,EAAAL,GACAY,EAAAZ,EAAAQ,EAAAH,EAAA,WAAAM,SACAE,EAAA,SAAAf,GAAAS,EAAAO,SAAAJ,EAwBA,GArBAG,IACAT,EAAAZ,EAAAqB,EAAA7V,KAAA,IAAA6U,OACAtU,OAAAmB,WAAA0T,EAAAhQ,OAEAmP,EAAAa,EAAAhE,MAEA+C,GAAA,mBAAAiB,EAAAX,IAAAxB,EAAAmC,EAAAX,EAAAG,IAIAY,GAAAE,GAjCA,WAiCAA,EAAAtV,OACAqV,KACAE,EAAA,WAAkC,OAAAD,EAAA1V,KAAA2R,QAGlCwC,IAAAe,IAAAR,IAAAe,GAAAF,EAAAd,IACAxB,EAAAsC,EAAAd,EAAAkB,GAGAtB,EAAAS,GAAAa,EACAtB,EAAAjD,GAAAwD,EACAI,EAMA,GALAG,GACAY,OAAAP,EAAAG,EAAAN,EA9CA,UA+CAV,KAAAM,EAAAU,EAAAN,EAhDA,QAiDAS,QAAAF,GAEAV,EAAA,IAAA9T,KAAA+T,EACA/T,KAAAmU,GAAAnB,EAAAmB,EAAAnU,EAAA+T,EAAA/T,SACK8R,IAAAtJ,EAAAsJ,EAAAI,GAAAoB,GAAAe,GAAAX,EAAAK,GAEL,OAAAA,kBCnEA,IAAA5I,KAAiBA,SAEjBnN,EAAAD,QAAA,SAAAmK,GACA,OAAAiD,EAAAvM,KAAAsJ,GAAA/F,MAAA,iBAAA9D,EAAAsB,EAAAJ,GCHAhB,EAAA,KAYA,IAXA,IAAA4H,EAAA5H,EAAA,GACAsT,EAAAtT,EAAA,IACA0U,EAAA1U,EAAA,IACAqW,EAAArW,EAAA,EAAAA,CAAA,eAEAsW,EAAA,wbAIA7D,MAAA,KAEAvS,EAAA,EAAeA,EAAAoW,EAAApT,OAAyBhD,IAAA,CACxC,IAAAiV,EAAAmB,EAAApW,GACAqW,EAAA3O,EAAAuN,GACAS,EAAAW,KAAAxU,UACA6T,MAAAS,IAAA/C,EAAAsC,EAAAS,EAAAlB,GACAT,EAAAS,GAAAT,EAAAzP,sFCfAzF,EAAAgX,IAAA,SAAoB7T,GAElB,OADAA,EAAE6B,cACK7B,oBCJT,IAAA4Q,EAAAvT,EAAA,IAEAuT,IAAAQ,EAAAR,EAAAI,GAAA3T,EAAA,cAAuEa,eAAAb,EAAA,IAAA6I,qBCFvE7I,EAAA,IACA,IAAAyW,EAAAzW,EAAA,GAAAY,OACAnB,EAAAD,QAAA,SAAAmK,EAAAlI,EAAAiV,GACA,OAAAD,EAAA5V,eAAA8I,EAAAlI,EAAAiV,qBCHAjX,EAAAD,SAAkBoC,QAAA5B,EAAA,IAAAsB,gBAAA,SAAAxB,EAAAsB,EAAAJ,GAAA,aCElBxB,EAAA8B,cAEA,IAIAyD,EAFA4R,GAEA5R,EAJA/E,EAAA,MAIsC+E,EAAAzD,WAAAyD,GAAuCnD,QAAAmD,GAE7EvF,EAAAoC,QAAA,WACA,SAAAgV,EAAAzS,EAAA0S,GACA,QAAA3W,EAAA,EAAmBA,EAAA2W,EAAA3T,OAAkBhD,IAAA,CACrC,IAAA4W,EAAAD,EAAA3W,GACA4W,EAAAhW,WAAAgW,EAAAhW,eACAgW,EAAAtE,gBACA,UAAAsE,MAAA9D,cAAA,EACA2D,EAAA/U,SAAAuC,EAAA2S,EAAArV,IAAAqV,IAIA,gBAAA1B,EAAA2B,EAAAC,GAGA,OAFAD,GAAAH,EAAAxB,EAAArT,UAAAgV,GACAC,GAAAJ,EAAAxB,EAAA4B,GACA5B,GAdA,aAAAtV,EAAAsB,EAAAJ,GAAA,aCRAxB,EAAA8B,cAEA9B,EAAAoC,QAAA,SAAAqV,EAAA7B,GACA,KAAA6B,aAAA7B,GACA,UAAAtP,UAAA,gDAAAhG,EAAAsB,EAAAJ,GAAA,iBAAAd,EAAAgC,EAAAlB,EAAA,IAAAW,EAAAO,EAAAlB,EAAA,KAAAL,EAAAuB,EAAAlB,EAAA,cAAAkB,EAAApC,GAAA,OAAAA,KAAAwB,WAAAxB,GAAA8B,QAAA9B,GAAAc,OAAAC,eAAAO,EAAA,cAAAD,OAAA,ICLA,IAAA+V,EAAAlX,EAAA,IACA6L,EAAA7L,EAAA,IACAsG,EAAAtG,EAAA,GACA8L,EAAA9L,EAAA,GACAmI,EAAAnI,EAAA,IACAmX,EAAAnX,EAAA,IACA0M,EAAA1M,EAAA,IACAoX,EAAApX,EAAA,IACAwO,EAAAxO,EAAA,IACAuJ,EAAAvJ,EAAA,IACAyL,EAAAzL,EAAA,IACAoO,EAAApO,EAAA,IACAqX,EAAArX,EAAA,IACAsX,EAAAtX,EAAA,IACAuX,EAAAvX,EAAA,IACA+L,EAAA/L,EAAA,IACAwX,EAAAxX,EAAA,IACAyX,EAAAzX,EAAA,IACA+F,EAAA/F,EAAA,GACA0X,EAAA1X,EAAA,IACA2X,EAAA3X,EAAA,IACA2M,EAAA3M,EAAA,IACA2N,EAAA3N,EAAA,IACA8I,EAAA9I,EAAA,IACAmJ,EAAAnJ,EAAA,IACAkN,EAAAlN,EAAA,IACA4X,EAAA5X,EAAA,IACAwH,EAAAxH,EAAA,GAEA6X,aAUE,SAAAA,EAAYC,MAAgCC,EAAAnW,SAAAoQ,KAAA6F,GACvC/O,EAAAE,UAAU8O,GACXhM,EAAA1J,KAAK4P,KAAM8F,GAEXtQ,EAAAtD,OAAO8N,KAAM7I,EAAAxE,UAAUmT,gEAbK,OAAO,IAAID,GAAQ,MAAApW,IAAA,OAAAV,IAAA,WACxB,OAAO,IAAI8W,EAAO,MAAApW,IAAA,MAAAV,IAAA,WACnB,OAAO,IAAI8W,EAAO,UAAAlX,EAAAiB,SAAA9B,IAAA2B,IAAA,MAAAN,MAAA,WAgB1C,OAAO0W,EAAOG,UAAUd,EAAAV,IAAIxE,mCAG1BiG,GACF,OAAOJ,EAAOG,UAAUnM,EAAAK,IAAI8F,KAAMiG,oCAIlC,OAAO,IAAIJ,EAAO7F,wCAGVvO,GACR,OAAO6C,EAAAC,QAAQyL,KAAMvO,kCAGhByU,GACL,OAAOlG,KAAKjB,mBAAmBmH,GAAS,MAAAzW,IAAA,qBAAAN,MAAA,SAGvB+W,GAAgB,IAAAC,EACEhB,EAAApG,mBAAmBiB,KAAMkG,GAD3BE,KAAA/R,EAAAzE,SAAAuW,EAAA,GAC1B7H,EAD0B8H,EAAA,GACvBnH,EADuBmH,EAAA,GAEjC,OAAQP,EAAOG,UAAU1H,GAAI9I,EAAAtD,OAAO2T,EAAOQ,KAAMpH,qCAIjD,OAAO4G,EAAOG,UAAUtL,EAAAD,OAAOuF,mCAG7BvO,GACF,OAAOoU,EAAOG,UAAUZ,EAAAlI,IAAI8C,KAAMvO,sCAIlC,OAAOuO,KAAK3N,qCAGT,IAAAoK,EACgCD,EAAA7C,MAAMqG,MADtCtD,KAAArI,EAAAzE,SAAA6M,EAAA,GACI6B,EADJ5B,EAAA,GACOuC,EADPvC,EAAA,GAEH,OAAQmJ,EAAOG,UAAU1H,GAAI,IAAIuH,EAAO5G,EAAE1M,6CAS1C,OAAOkH,EAAAC,OAAOsG,sCAId,OAAQvG,EAAAC,OAAOsG,kCAGbvO,GACF,OAAOoU,EAAOG,UAAU5J,EAAAC,IAAI2D,KAAMvO,gCAOhCA,GACF,IAAM4J,EAAagK,EAAAhU,IAAI2O,KAAMvO,GAC7B,OAAG4J,IAAM2E,KACAA,KAEN3E,IAAM5J,EACAqI,EAAA1J,KAAK4P,KAAM3E,GAEb7F,EAAAtD,OAAO2T,EAAOQ,KAAMhL,+BAOzB5J,GACF,IAAM4J,EAAaiK,EAAAlU,IAAI4O,KAAMvO,GAC7B,OAAG4J,IAAM2E,KACAA,KAEN3E,IAAM5J,EACAqI,EAAA1J,KAAK4P,KAAM3E,GAEb7F,EAAAtD,OAAO2T,EAAOQ,KAAMhL,wCAI3B,OAAOwK,EAAOG,UAAU7P,EAAAO,UAAUsJ,wCAG3B3C,GACP,OAAOwI,EAAOG,UAAUT,EAAAxJ,SAASiE,KAAM3C,qCAIvC,OAAOwI,EAAOG,UAAUjM,EAAA5B,OAAO6H,0CAI/B,OAAO6F,EAAOG,UAAUzO,EAAAG,UAAUsI,mCAGhCsG,GACF,OAAOT,EAAOG,UAAUR,EAAAhK,IAAIwE,KAAMsG,sCAG1BJ,GACR,IAAMjH,EAAYe,KAAKjB,mBAAmBmH,GAAS,GACnD,OAAO1Q,EAAAtD,OAAO8N,KAAMf,+BAGlB7M,GACF,OAAO0H,EAAA1J,KAAK4P,KAAM5N,mCAGZC,GACN,OAAOwT,EAAOG,UAAUjS,EAAAC,QAAQgM,KAAM3N,sCAG9BN,GACR,OAAO2T,EAAApK,UAAU0E,KAAM6F,EAAOG,UAAUjU,uCAG/BA,GACT,OAAO4T,EAAAxK,WAAW6E,KAAM6F,EAAOG,UAAUjU,qCAIzC,OAAO0T,EAAAxK,OAAO+E,uCAId,OAAO6F,EAAOG,UAAUrK,EAAApD,OAAOyH,wCAGxBuG,GACP,OAAOV,EAAOG,UAAUrL,EAAAV,SAAS+F,KAAMuG,uCAIvC,OAAOrL,EAAA9D,SAAS4I,yCAIhB,OAAO4F,EAAAhL,SAASoF,yCAxGFrQ,GACd,OAAOA,aAAakW,8BAeXlV,EAAYc,GACrB,OAAOoU,EAAOG,UAAUX,EAAAhU,IAAIV,EAAGc,gCActBd,EAAYc,GACrB,OAAOoU,EAAOG,UAAUV,EAAAlU,IAAIT,EAAGc,sCA2ERd,GACvB,OAAOkV,EAAOW,SAAS7V,GAAKA,EAAI6E,EAAAtD,OAAO2T,EAAOQ,KAAM1V,SAzKxDkV,GAAArY,EAAAqY,qIC9BA,IAAArJ,EAAAxO,EAAA,IACAoK,EAAApK,EAAA,IACA4N,EAAA5N,EAAA,IASAR,EAAAiO,eAAA,SACE9K,EAAa0F,EAAcC,EAAcmQ,EACzChV,EAAa8E,EAAcC,EAAckQ,GAMzC,IAJA,IAAIC,EAAO,EACLtL,GAAe,GAGf9E,EAAO,EAAIC,GAAQ/E,EAAE8E,GAAQ,GAAE,CAGnC,IAHmCkG,EAIfD,EAAA7C,MAAMlI,EAAG8E,EAAMC,EAAMkQ,GAJNhK,KAAArI,EAAAzE,SAAA6M,EAAA,GAIlCjG,EAJkCkG,EAAA,GAAAA,EAAA,GAOpB,IACbrB,EAAEnK,OAASyV,EAAOtQ,EAAOC,EACzBqQ,EAAO/K,EAAA/C,wBAAwBwC,EAAG,EAAGsL,EAAMhW,EAAG0F,EAAMC,EAAMmQ,IAI5DnQ,EAAO8B,EAAAK,gBAAgB9H,EAAG0F,EAAMC,EAAMmQ,GAOxC,OAJGpL,EAAEnK,OAAS,IACZoF,EAAOsF,EAAA/C,wBAAwBlI,EAAG0F,EAAMC,EAAM+E,EAAG,EAAGsL,EAAMF,IAGrDnQ,kFCvCT,IAAAgC,EAAAtK,EAAA,GACA+I,EAAA/I,EAAA,GAoBAR,EAAA2O,mBAAA,SACExL,EAAa0F,EAAcC,EAC3B7E,EAA0B8E,EAAcC,EACxCnE,GAIA,IAAMuU,EAAepQ,EAAOD,EACtBsQ,EAAexQ,EAAOuQ,EAC5BtO,EAAAxG,YAAYnB,EAAG0F,EAAMC,EAAMsQ,GAC3B7P,EAAA3B,KAAKzE,EAAG0F,EAAMwQ,GAId,IADA,IAAMF,EAAerQ,EAAOsQ,EACpB/R,EAAYgS,EAAMhS,EAAI8R,IAAQ9R,EAAE,CAKtC,IAJA,IAAI4C,EAAQ,EACRvJ,EAAY2G,EAAI+R,EAGZ9R,EAAYyB,EAAMzB,EAAI0B,IAAQ1B,EAAE,CACtC,IAAInD,EAAYhB,EAAEkE,GAAKpD,EAAEqD,GAAKnE,EAAEzC,GAAKuJ,EAClC9F,EAAIU,EACLoF,EAAQ,GAERA,EAAQ,EAAK9F,EAAIU,EACjBV,GAAQU,GAEV1B,EAAEzC,KAAOyD,EAIXhB,EAAEzC,GAAKuJ,EAIT,OAAwB,IAAhB9G,EAAEgW,EAAO,GAAYA,EAAO,EAAIA,kFCxD1C,IAAArO,EAAAtK,EAAA,GACA+I,EAAA/I,EAAA,GA6BAR,EAAAgL,WAAA,SACE7H,EAAaS,EAAaC,EAAagB,GAIvC,IAAIyU,EAAiBzV,EAAMD,EAC3BkH,EAAArG,cAActB,EAAGS,EAAKC,EAAKyV,GAC3B/P,EAAA3B,KAAKzE,EAAGS,EAAKC,GAGbyV,GAAkBzV,EAClB,IAAI,IAAI7C,EAAY4C,EAAKlB,EAAYmB,EAAK7C,EAAIsY,EAAQtY,GAAQ,EAAE,CAC9D,IAAMuY,EAAgBpW,EAAET,KAGpBuH,EAAQ,EACZ9G,EAAEnC,GAAKmC,EAAEnC,GAAKuY,EAAQA,EACnBpW,EAAEnC,IAAM6D,IACToF,EAAQ,EAAK9G,EAAEnC,GAAK6D,EACpB1B,EAAEnC,GAAKmC,EAAEnC,GAAK6D,GAKhB,IADA,IAAI1D,EAAYH,EAAI,EACZF,EAAY4B,EAAG5B,EAAIwY,IAAUnY,EAAE,CAGrC,IAAIqY,EAAW,EACXC,EAAkBtW,EAAErC,KAAOyY,EAC5BE,GAAW5U,IACZ2U,EAAW,EAAKC,EAAU5U,EAC1B4U,GAAoB5U,GAItB2U,IAAuB,EACvBC,IAAqB,EAGrBtW,EAAEhC,GAAKgC,EAAEhC,GAAKsY,EAAUxP,EACxBA,EAAQuP,EACLrW,EAAEhC,IAAM0D,IACToF,GAAiB,EAAK9G,EAAEhC,GAAK0D,EAC7B1B,EAAEhC,GAAKgC,EAAEhC,GAAK0D,GAKlB1B,EAAEhC,GAAK8I,EAIT,OAAyB,IAAlB9G,EAAEmW,EAAS,GAAWA,EAAS,EAAIA,+HClF5C,IAAAjI,EAAA7Q,EAAA,IACA4N,EAAA5N,EAAA,IACAiP,EAAAjP,EAAA,IAQAR,EAAA6O,IAAA,SACE1L,EAAa0F,EAAcC,EAC3B7E,EAAa8E,EAAcC,EAC3BnE,GAIA,IAAIgJ,EAAc1K,EAAEiB,MAAMyE,EAAMC,GAC5BqQ,EAAetL,EAAEnK,OAGfgW,EAAczV,EAAEG,MAAM2E,EAAMC,GAC5B2Q,EAAeD,EAAEhW,OATXiM,EAYAF,EAAAL,SAASvB,EAAG,EAAGsL,EAAMO,EAAG,EAAGC,EAAM9U,GAZjC+K,KAAA/I,EAAAzE,SAAAuN,EAAA,GAYX9B,EAZW+B,EAAA,GAYRuJ,EAZQvJ,EAAA,OAAAiC,EAaAR,EAAAhB,cAAclN,EAAG0F,EAAMC,EAAM+E,EAAG,EAAGsL,EAAMtU,GAbzCiN,KAAAjL,EAAAzE,SAAAyP,EAAA,GAeZ,OAFChE,EAbWiE,EAAA,GAaRqH,EAbQrH,EAAA,IAeJjE,EADRsL,EAAO/K,EAAA/C,wBAAwBwC,EAAG,EAAGsL,EAAMlV,EAAG8E,EAAMC,EAAMnE,oFCpB5D7E,EAAA2R,oBAAA,SACExO,EAAa0F,EAAcC,EAC3B7E,EAAWY,GAGX,IADA,IAAIuH,EAAY,EACR/E,EAAYyB,EAAMzB,KAAMwB,EAAMuD,GAAwBnI,EAC5DmI,EAAYA,EAAYvH,EAAO1B,EAAEkE,GACjClE,EAAEkE,GAAK,EAAK+E,EAAYnI,EAQ1B,OAJmB,IAAhBd,EAAE2F,EAAO,MACRA,GAGIA,EAAMsD,mFCrBhB,IAAAE,EAAA9L,EAAA,GAEAR,EAAA4Z,MAAA,SAAsBzW,GACpB,OAAOmJ,EAAA1J,QAASO,mFCClBnD,EAAA2M,mBAAA,SACExJ,EAAa0F,EAAcC,EAC3B7E,EAA0B8E,EAAcC,EACxCnE,GAKA,IADA,IAAIoE,EAAS,EACPJ,EAAOC,GAAK,CAChB,IAAI3E,EAAYF,EAAE8E,KAAUE,EAAS9F,EAAE0F,GACnC1E,EAAI,GACN8E,EAAS,EACT9E,GAAQU,GAERoE,EAAS,EAEX9F,EAAE0F,KAAU1E,EAId,GAAG8E,EAAS,EAAE,CACZ,IAAIA,EAASpE,EAAO,EAAe,IAAZZ,EAAE8E,KAAeA,EACtC5F,EAAE0F,KAAUI,EAEd9F,EAAE0F,KAAU5E,EAAE8E,KAAU,EAI1B,GAAGA,EAAOC,EACR,GACE7F,EAAE0F,KAAU5E,EAAE8E,WACPA,EAAOC,QAIhB,KAAoB,IAAd7F,EAAE0F,EAAK,MACTA,EAIN,OAAOA,kFC5CT7I,EAAAwG,QAAA,SACErD,EAAa0F,EAAcC,EAC3B+Q,EAAiBC,GAIjB,GAAGhR,IAASD,GAAQgR,IAAYC,EAC9B,OAAQ3W,EAAG2F,GAUb,IANA,IAAIE,EAAO,EACL/E,EAAc,IAAIwB,MAAMyB,KAAKE,MAChC0B,EAAOD,GAAQ3B,KAAKC,IAAI0S,GAAW3S,KAAKC,IAAI2S,OAI5C,CAED,IADA,IAAI1N,EAAY,EACR1L,EAAYoI,EAAMpI,EAAImI,EAAMuD,GAAwB0N,EAC1D1N,EAAYA,EAAUyN,EAAU1W,IAAIzC,GACpCyC,EAAEzC,GAAK,EAAK0L,EAAY0N,EAG1B,IADA7V,EAAE+E,KAAUoD,EACU,IAAhBjJ,EAAE2F,EAAO,IACb,KAAKA,IAASD,EACZ,OAAQ5E,EAAG+E,sBC3BnB,IAAA+Q,EAAAvZ,EAAA,IACA8U,EAAA9U,EAAA,EAAAA,CAAA,YACA0U,EAAA1U,EAAA,IACAP,EAAAD,QAAAQ,EAAA,GAAAwZ,kBAAA,SAAA7P,GACA,WAAAA,EAAA,OAAAA,EAAAmL,IACAnL,EAAA,eACA+K,EAAA6E,EAAA5P,sBCNA,IAAAE,EAAA7J,EAAA,IACAe,EAAAf,EAAA,IACAP,EAAAD,QAAAQ,EAAA,GAAAyZ,YAAA,SAAA9P,GACA,IAAA+P,EAAA3Y,EAAA4I,GACA,sBAAA+P,EAAA,MAAA5T,UAAA6D,EAAA,qBACA,OAAAE,EAAA6P,EAAArZ,KAAAsJ,sBCLA3J,EAAA,IACAA,EAAA,IACAP,EAAAD,QAAAQ,EAAA,cAAAF,EAAAsB,EAAAJ,GCFAvB,EAAAD,SAAkBoC,QAAA5B,EAAA,IAAAsB,gBAAA,SAAAxB,EAAAsB,EAAAJ,GCAlB,IAAAuY,EAAAvZ,EAAA,IACA8U,EAAA9U,EAAA,EAAAA,CAAA,YACA0U,EAAA1U,EAAA,IACAP,EAAAD,QAAAQ,EAAA,GAAA2Z,WAAA,SAAAhQ,GACA,IAAAK,EAAApJ,OAAA+I,GACA,gBAAAK,EAAA8K,IACA,eAAA9K,GAEA0K,EAAA1S,eAAAuX,EAAAvP,sBCRA,IAAArF,EAAA3E,EAAA,IACAwM,EAAAxM,EAAA,IAGAP,EAAAD,QAAA,SAAAoa,GACA,gBAAAC,EAAAC,GACA,IAGAjT,EAAAC,EAHA5E,EAAA4P,OAAAtF,EAAAqN,IACA3Z,EAAAyE,EAAAmV,GACA3Z,EAAA+B,EAAAgB,OAEA,OAAAhD,EAAA,GAAAA,GAAAC,EAAAyZ,EAAA,WACA/S,EAAA3E,EAAA6X,WAAA7Z,IACA,OAAA2G,EAAA,OAAA3G,EAAA,IAAAC,IAAA2G,EAAA5E,EAAA6X,WAAA7Z,EAAA,WAAA4G,EAAA,MACA8S,EAAA1X,EAAA8X,OAAA9Z,GAAA2G,EACA+S,EAAA1X,EAAA0B,MAAA1D,IAAA,GAAA4G,EAAA,OAAAD,EAAA,6BAAA/G,EAAAsB,EAAAJ,GCbA,IAAAwL,EAAAxM,EAAA,IACAP,EAAAD,QAAA,SAAAmK,GACA,OAAA/I,OAAA4L,EAAA7C,sBCFA,IAAA0I,EAAArS,EAAA,IACAia,EAAAja,EAAA,IACAka,EAAAla,EAAA,GAAAA,CAAA,YACAma,EAAAvZ,OAAAmB,UAEAtC,EAAAD,QAAAoB,OAAAiU,gBAAA,SAAA7K,GAEA,OADAA,EAAAiQ,EAAAjQ,GACAqI,EAAArI,EAAAkQ,GAAAlQ,EAAAkQ,GACA,mBAAAlQ,EAAAoQ,aAAApQ,eAAAoQ,YACApQ,EAAAoQ,YAAArY,UACGiI,aAAApJ,OAAAuZ,EAAA,gBAAAra,EAAAsB,EAAAJ,GCXH,IAAAiS,EAAAjT,EAAA,GAAAiT,SACAxT,EAAAD,QAAAyT,KAAAoH,iCCDA,IAAA1V,EAAA3E,EAAA,IACAqD,EAAAqD,KAAArD,IACAD,EAAAsD,KAAAtD,IACA3D,EAAAD,QAAA,SAAA2S,EAAAjP,GAEA,OADAiP,EAAAxN,EAAAwN,IACA,EAAA9O,EAAA8O,EAAAjP,EAAA,GAAAE,EAAA+O,EAAAjP,qBCJA,IAAAyB,EAAA3E,EAAA,IACAoD,EAAAsD,KAAAtD,IACA3D,EAAAD,QAAA,SAAAmK,GACA,OAAAA,EAAA,EAAAvG,EAAAuB,EAAAgF,GAAA,+BAAA7J,EAAAsB,EAAAJ,GCFA,IAAAsZ,EAAAta,EAAA,IACAua,EAAAva,EAAA,IACAwa,EAAAxa,EAAA,IACAP,EAAAD,QAAA,SAAAib,GACA,gBAAAC,EAAAC,EAAAC,GACA,IAGAzZ,EAHA6I,EAAAsQ,EAAAI,GACAxX,EAAAqX,EAAAvQ,EAAA9G,QACAiP,EAAAqI,EAAAI,EAAA1X,GAIA,GAAAuX,GAAAE,MAAA,KAAAzX,EAAAiP,GAGA,IAFAhR,EAAA6I,EAAAmI,OAEAhR,EAAA,cAEK,KAAY+B,EAAAiP,EAAeA,IAAA,IAAAsI,GAAAtI,KAAAnI,IAChCA,EAAAmI,KAAAwI,EAAA,OAAAF,GAAAtI,GAAA,EACK,OAAAsI,IAAA,cAAA3a,EAAAsB,EAAAJ,GCpBL,IAAAqR,EAAArS,EAAA,IACAsa,EAAAta,EAAA,IACA6a,EAAA7a,EAAA,GAAAA,KACAka,EAAAla,EAAA,GAAAA,CAAA,YAEAP,EAAAD,QAAA,SAAAqC,EAAAiZ,GACA,IAGArZ,EAHAuI,EAAAsQ,EAAAzY,GACA3B,EAAA,EACA6a,KAEA,IAAAtZ,KAAAuI,EAAAvI,GAAAyY,GAAA7H,EAAArI,EAAAvI,IAAAsZ,EAAApV,KAAAlE,GAEA,KAAAqZ,EAAA5X,OAAAhD,GAAAmS,EAAArI,EAAAvI,EAAAqZ,EAAA5a,SACA2a,EAAAE,EAAAtZ,IAAAsZ,EAAApV,KAAAlE,IAEA,OAAAsZ,oBCdA,IAAAC,EAAAhb,EAAA,KACAib,EAAAjb,EAAA,IAEAP,EAAAD,QAAAoB,OAAAoU,MAAA,SAAAhL,GACA,OAAAgR,EAAAhR,EAAAiR,qBCLA,IAAAtS,EAAA3I,EAAA,IACA6J,EAAA7J,EAAA,IACAkb,EAAAlb,EAAA,KAEAP,EAAAD,QAAAQ,EAAA,IAAAY,OAAAgW,iBAAA,SAAA5M,EAAAmR,GACAtR,EAAAG,GAKA,IAJA,IAGAC,EAHA+K,EAAAkG,EAAAC,GACAjY,EAAA8R,EAAA9R,OACAhD,EAAA,EAEAgD,EAAAhD,GAAAyI,EAAAE,EAAAmB,EAAAC,EAAA+K,EAAA9U,KAAAib,EAAAlR,IACA,OAAAD,oBCVA,IAAAH,EAAA7J,EAAA,IACAob,EAAApb,EAAA,KACAib,EAAAjb,EAAA,IACAka,EAAAla,EAAA,GAAAA,CAAA,YACAqb,EAAA,aAIAC,EAAA,WAEA,IAIAC,EAJAC,EAAAxb,EAAA,GAAAA,CAAA,UACAE,EAAA+a,EAAA/X,OAcA,IAVAsY,EAAAC,MAAAC,QAAA,OACA1b,EAAA,IAAA2b,YAAAH,GACAA,EAAAI,IAAA,eAGAL,EAAAC,EAAAK,cAAA5I,UACA6I,OACAP,EAAAQ,MAAAC,uCACAT,EAAAU,QACAX,EAAAC,EAAA5H,EACAzT,YAAAob,EAAAvZ,UAAAkZ,EAAA/a,IACA,OAAAob,KAGA7b,EAAAD,QAAAoB,OAAAY,QAAA,SAAAwI,EAAAmR,GACA,IAAAJ,EAQA,OAPA,OAAA/Q,GACAqR,EAAAtZ,UAAA8H,EAAAG,GACA+Q,EAAA,IAAAM,EACAA,EAAAtZ,UAAA,KAEAgZ,EAAAb,GAAAlQ,GACG+Q,EAAAO,aACHH,EAAAJ,EAAAK,EAAAL,EAAAI,kCCtCA,IAAA3Z,EAAAxB,EAAA,KACA8W,EAAA9W,EAAA,IACA4U,EAAA5U,EAAA,IACAyV,KAGAzV,EAAA,GAAAA,CAAAyV,EAAAzV,EAAA,EAAAA,CAAA,uBAAkF,OAAAgS,OAElFvS,EAAAD,QAAA,SAAA4V,EAAAD,EAAA1P,GACA2P,EAAArT,UAAAP,EAAAiU,GAAqDhQ,KAAAqR,EAAA,EAAArR,KACrDmP,EAAAQ,EAAAD,EAAA,wBAAArV,EAAAsB,EAAAJ,GCXAvB,EAAAD,QAAAQ,EAAA,cAAAF,EAAAsB,EAAAJ,GCCA,IAAA4I,EAAA5J,EAAA,IAGAP,EAAAD,QAAA,SAAAmK,EAAAoK,GACA,IAAAnK,EAAAD,GAAA,OAAAA,EACA,IAAAuS,EAAAC,EACA,GAAApI,GAAA,mBAAAmI,EAAAvS,EAAAiD,YAAAhD,EAAAuS,EAAAD,EAAA7b,KAAAsJ,IAAA,OAAAwS,EACA,sBAAAD,EAAAvS,EAAAyS,WAAAxS,EAAAuS,EAAAD,EAAA7b,KAAAsJ,IAAA,OAAAwS,EACA,IAAApI,GAAA,mBAAAmI,EAAAvS,EAAAiD,YAAAhD,EAAAuS,EAAAD,EAAA7b,KAAAsJ,IAAA,OAAAwS,EACA,MAAArW,UAAA,sDAAAhG,EAAAsB,EAAAJ,GCVAvB,EAAAD,SAAAQ,EAAA,MAAAA,EAAA,GAAAA,CAAA,WACA,OAAuG,GAAvGY,OAAAC,eAAAb,EAAA,GAAAA,CAAA,YAAsEe,IAAA,WAAmB,YAAc8F,mBCDvGpH,EAAAD,QAAA,SAAAmK,GACA,sBAAAA,EAAA,MAAA7D,UAAA6D,EAAA,uBACA,OAAAA,oBCDA,IAAA0S,EAAArc,EAAA,KACAP,EAAAD,QAAA,SAAA0c,EAAArC,EAAA3W,GAEA,GADAmZ,EAAAH,YACArC,EAAA,OAAAqC,EACA,OAAAhZ,GACA,uBAAA2D,GACA,OAAAqV,EAAA7b,KAAAwZ,EAAAhT,IAEA,uBAAAA,EAAAC,GACA,OAAAoV,EAAA7b,KAAAwZ,EAAAhT,EAAAC,IAEA,uBAAAD,EAAAC,EAAAvG,GACA,OAAA2b,EAAA7b,KAAAwZ,EAAAhT,EAAAC,EAAAvG,IAGA,kBACA,OAAA2b,EAAA7H,MAAAwF,EAAAtW,8BChBA,IAAAiO,EAAAxR,EAAA,IAEAP,EAAAD,QAAAoB,OAAA,KAAA0b,qBAAA,GAAA1b,OAAA,SAAA+I,GACA,gBAAA6H,EAAA7H,KAAA8I,MAAA,IAAA7R,OAAA+I,mBCJAlK,EAAAD,QAAA,SAAAkG,EAAAvE,GACA,OAAUA,QAAAuE,0BCDVjG,EAAAD,QAAA,uBAAAM,EAAAsB,EAAAJ,GAAA,aCCA,IAAAub,EAAAvc,EAAA,KACAwc,EAAAxc,EAAA,KACA0U,EAAA1U,EAAA,IACAsa,EAAAta,EAAA,IAMAP,EAAAD,QAAAQ,EAAA,GAAAA,CAAAiF,MAAA,iBAAA8M,EAAA4D,GACA3D,KAAAC,GAAAqI,EAAAvI,GACAC,KAAAxM,GAAA,EACAwM,KAAAyK,GAAA9G,GAEC,WACD,IAAA3L,EAAAgI,KAAAC,GACA0D,EAAA3D,KAAAyK,GACAtK,EAAAH,KAAAxM,KACA,OAAAwE,GAAAmI,GAAAnI,EAAA9G,QACA8O,KAAAC,UACAuK,EAAA,IAEAA,EAAA,UAAA7G,EAAAxD,EACA,UAAAwD,EAAA3L,EAAAmI,IACAA,EAAAnI,EAAAmI,MACC,UAGDuC,EAAAgI,UAAAhI,EAAAzP,MAEAsX,EAAA,QACAA,EAAA,UACAA,EAAA,qBAAAzc,EAAAsB,EAAAJ,GCjCAhB,EAAA,IACAA,EAAA,IACAP,EAAAD,QAAAQ,EAAA,cAAAF,EAAAsB,EAAAJ,GCFAvB,EAAAD,SAAkBoC,QAAA5B,EAAA,KAAAsB,gBAAA,SAAAxB,EAAAsB,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,ICClB,IAAAgB,EAAAnC,EAAA,IAAQR,EAAAmd,YAAAxa,EAAAY,QAGR,IAAAmU,EAAAlX,EAAA,IAAQR,EAAAgX,IAAAU,EAAAV,IACR,IAAA3K,EAAA7L,EAAA,IAAQR,EAAA0M,IAAAL,EAAAK,IACR,IAAA0Q,EAAA5c,EAAA,IAAQR,EAAA4Z,MAAAwD,EAAAxD,MACR,IAAA9S,EAAAtG,EAAA,GAAQR,EAAA+G,QAAAD,EAAAC,QACR,IAAAuF,EAAA9L,EAAA,GAAQR,EAAA4C,KAAA0J,EAAA1J,KACR,IAAA+F,EAAAnI,EAAA,IAAQR,EAAAkJ,UAAAP,EAAAO,UACR,IAAAyO,EAAAnX,EAAA,IAAQR,EAAAuR,mBAAAoG,EAAApG,mBACR,IAAArE,EAAA1M,EAAA,IAAQR,EAAAiN,OAAAC,EAAAD,OACR,IAAA2K,EAAApX,EAAA,IAAQR,EAAA0P,IAAAkI,EAAAlI,IACR,IAAAV,EAAAxO,EAAA,IAAQR,EAAAmM,MAAA6C,EAAA7C,MACR,IAAApC,EAAAvJ,EAAA,IAAQR,EAAAkK,UAAAH,EAAAG,UACR,IAAA+B,EAAAzL,EAAA,IAAQR,EAAAkM,OAAAD,EAAAC,OACR,IAAA5C,EAAA9I,EAAA,IAAQR,EAAAwJ,UAAAF,EAAAE,UACR,IAAAoF,EAAApO,EAAA,IAAQR,EAAA6O,IAAAD,EAAAC,IACR,IAAAgJ,EAAArX,EAAA,IAAQR,EAAA6D,IAAAgU,EAAAhU,IACR,IAAAiU,EAAAtX,EAAA,IAAQR,EAAA4D,IAAAkU,EAAAlU,IACR,IAAAmU,EAAAvX,EAAA,IAAQR,EAAAuO,SAAAwJ,EAAAxJ,SACR,IAAAhC,EAAA/L,EAAA,IAAQR,EAAA2K,OAAA4B,EAAA5B,OACR,IAAAqN,EAAAxX,EAAA,IAAQR,EAAAgO,IAAAgK,EAAAhK,IACR,IAAAzH,EAAA/F,EAAA,GAAQR,EAAAwG,QAAAD,EAAAC,QACR,IAAA0R,EAAA1X,EAAA,IAAQR,EAAA8N,UAAAoK,EAAApK,UACR,IAAAqK,EAAA3X,EAAA,IAAQR,EAAA2N,WAAAwK,EAAAxK,WACR,IAAAsK,EAAAzX,EAAA,IAAQR,EAAAyN,OAAAwK,EAAAxK,OACR,IAAAU,EAAA3N,EAAA,IAAQR,EAAA+K,OAAAoD,EAAApD,OACR,IAAAoC,EAAA3M,EAAA,IAAQR,EAAAyM,SAAAU,EAAAV,SACR,IAAA9C,EAAAnJ,EAAA,IAAQR,EAAAmF,UAAAwE,EAAAxE,UACR,IAAAuI,EAAAlN,EAAA,IAAQR,EAAA4J,SAAA8D,EAAA9D,SACR,IAAAwO,EAAA5X,EAAA,IAAQR,EAAAoN,SAAAgL,EAAAhL,SAGR,IAAAiQ,EAAA7c,EAAA,IAAQR,EAAAsd,IAAAD,EAAAhF","file":"mega-num.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MegaNum\"] = factory();\n\telse\n\t\troot[\"MegaNum\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 116);\n","import {Globals} from '../globals';\n\n//Assumes A and B not same array or sections A and B do not intersect\nexport function copy<T>(to: T[], minTo: number, from: ReadonlyArray<T>, minFrom: number, maxFrom: number): void {\n  while(minFrom < maxFrom){\n    to[minTo++] = from[minFrom++];\n  }\n}\n\nexport function growArray<T>(A: T[], minNewLen: number, maxNewLen: number): void {\n  let newLen: number = maxNewLen;\n  if(newLen > Globals.MAX_PRECISION){\n    if(minNewLen > Globals.MAX_PRECISION){\n      throw new RangeError(\n        `Array length greater than supported length ${Globals.MAX_PRECISION}`\n      );\n    }\n    newLen = minNewLen;\n  }\n\n  if(A.length < newLen){\n    A.length = newLen;\n  }\n}\n\nexport function printArr<T>(A: T[], min: number, max: number, minSub: number = min, maxSub: number = max): string {\n  const B = A.map(v => (v == null || v !== v) ? v + '' : v);\n  return \"[\" +\n    B.slice(min,minSub).join(', ') +\n    \"|\" + B.slice(minSub,maxSub).join(', ') +\n    \"|\" + B.slice(maxSub,max).join(', ') +\n  \"]\";\n}\n\nexport function safeShiftUp<T>(A: T[], min: number, max: number, shifts: number): void {\n  for(let i: number = max + shifts; max > min; A[--i] = A[--max]){\n  }\n}\n\nexport function shiftDown<T>(A: T[], min: number, max: number, shifts: number): void {\n  for(let i: number = min - shifts; min < max; A[i++] = A[min++]){\n  }\n}\n\n//Assumes shifts >= max - min, shifts > 0\nexport function unsafeShiftUp<T>(A: T[], min: number, max: number, shifts: number): void {\n  for(let i: number = min + shifts; min < max; A[i++] = A[min++]){\n  }\n}\n","import {Integer} from '../integer';\n\n// tslint:disable-next-line:no-any\nexport function assign(target: any, source: Integer): Integer {\n  target.base = source.base;\n  target.digits = source.digits;\n  target.precision = source.precision;\n  target.isNegative = source.isNegative;\n  return target;\n}\n\n// tslint:disable-next-line:no-any\nexport function copy(target: any, source: Integer): Integer {\n  const A: Integer = assign(target, source);\n  A.digits = A.digits.slice(0, A.precision);\n  return A;\n}\n\n// tslint:disable-next-line:no-any\nexport function setOne(A: any): Integer {\n  A.precision = 1;\n  A.digits = [1];\n  A.isNegative = false;\n  return A;\n}\n\n// tslint:disable-next-line:no-any\nexport function setZero(A: any): Integer {\n  A.precision = 0;\n  A.digits = [];\n  A.isNegative = false;\n  return A;\n}\n\nexport function toInteger(\n  digits: number[],\n  precision: number,\n  isNegative: boolean,\n  base: number\n): Integer {\n  return {base, digits, precision, isNegative};\n}\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {setBase as _setBase} from '../algorithm/setBase';\n\nexport function setBase(A: Integer, base: number): Integer {\n\n  //Sanitize base\n  base = 0 | base;\n\n  //If new base too low\n  if(base < Globals.MIN_BASE){\n    throw RangeError(`${base} < MIN_BASE (${Globals.MIN_BASE})`);\n  }\n\n  //If new base too high\n  if(base > Globals.MAX_BASE){\n    throw RangeError(`${base} > MAX_BASE (${Globals.MAX_BASE})`);\n  }\n\n  //Convert to base\n  [A.digits, A.precision] = _setBase(A.digits, 0, A.precision, A.base, base);\n  A.base = base;\n  return A;\n}\n","import {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {compare as _compare} from '../algorithm/compare';\n\nexport function compare(A: Integer, B: Integer): number {\n\n  //If self\n  if(A === B){\n    return 0;\n  }\n\n  let out = A.isNegative ? -1 : 1;\n\n  //Check if different signs\n  if(A.isNegative !== B.isNegative){\n    return out;\n  }\n\n  //If not same base\n  const base: number = A.base;\n  if(A.base !== B.base){\n\n    //Estimate number of digits of A if converted to B's base\n    const ratio: number = Math.log(A.base) / Math.log(B.base);\n    if(Math.ceil(A.precision * ratio) < B.precision){\n      return -out;\n    }\n    if(Math.ceil((A.precision - 1) * ratio) > B.precision){\n      return out;\n    }\n\n    //Convert A to B's base\n    setBase(A, B.base);\n  }\n  \n  //Compare A and B\n  out = out * _compare(\n    A.digits, 0, A.precision,\n    B.digits, 0, B.precision\n  );\n\n  //Change A back to original base (if needed)\n  setBase(A, base);\n\n  //Return result\n  return out;\n}\n","export function max(a: number, b: number): number {\n  return (a < b) ? b : a;\n}\n\nexport function min(a: number, b: number): number {\n  return (a > b) ? b : a;\n}\n\nexport function strToDigits(s: string): [number[], boolean] {\n  s = s.trim();\n\n  //Check if empty string\n  if(s.length < 1){\n    throw new TypeError(\"NaN\");\n  }\n\n  //Check for leading sign\n  const isNegative: boolean = s[0] === '-';\n\n  //Trim signs, leading zeros and decimal part\n  s = s.replace(/^[-+]?0*/, '').replace(/\\.[0-9]+$/, '');\n\n  //Check if string is not a number\n  if(s.match(/[^\\d]/)){\n    throw new TypeError(\"NaN\");\n  }\n\n  //If zero\n  const precision: number = s.length;\n  if(precision === 0){\n    return [[], false];\n  }\n\n  //Convert to decimal array\n  const digits: number[] = new Array<number>(precision);\n  for(let i = 0, j = precision; j > 0; ++i){\n    digits[i] = +s[--j];\n  }\n\n  return [digits, isNegative];\n}\n\n//Sets indices between [min, max) to 0\nexport function zero(A: number[], min: number, max: number): void {\n  while(min < max){\n    A[min++] = 0;\n  }\n}\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","import {Integer} from '../integer';\nimport {copy as _copy} from '../util/intUtils';\n\n// tslint:disable-next-line:no-any\nexport function copy(target: any, source: Integer): Integer {\n  return _copy(target, source);\n}\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","// tslint:disable-next-line:no-namespace\nexport namespace Globals {\n  export const MIN_BASE = 2;\n  export const MAX_BASE = 94906265; //2^26 < sqrt(Number.MAX_SAFE_INTEGER) < 2^27\n  export const MAX_PRECISION = 4294967295; //2^32 - 1\n\n  export let DEFAULT_BASE = 67108864; // 2^26\n  export let CIPHER: ReadonlyArray<string> = Object.freeze([\n    '0','1','2','3','4','5','6','7','8','9',\n    'A','B','C','D','E','F','G','H','I','J',\n    'K','L','M','N','O','P','Q','R','S','T',\n    'U','V','W','X','Y','Z'\n  ]);\n}\n","import {decrement} from './decrement';\n\n/*\n  f(A, B) = A - B\n  Assumes\n     A >= B\n  Note\n     Overwrites A\n*/\nexport function subtraction(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n  let a: number = minA;\n  let borrow = 0;\n\n  //Subtract common digits\n  while(minB < maxB){\n    let v: number = A[a] - borrow - B[minB++];\n    if(v < 0){\n      borrow = 1;\n      v = v + base;\n    } else {\n      borrow = 0;\n    }\n    A[a++] = v;\n  }\n\n  //Subtract borrow\n  if(borrow > 0){\n    return decrement(A, a, maxA, base);\n  }\n\n  //Find new length\n  if(a === maxA){\n    while(a-- > minA && A[a] === 0){\n    }\n    maxA = a + 1;\n  }\n\n  //Return length\n  return maxA;\n}\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = {};\n","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {isInteger} from './isInteger';\nimport {setZero} from '../util/intUtils';\nimport {strToDigits} from '../util/numUtils';\n\nexport function toInteger(A: Integer | number | string, base?: number): Integer {\n\n  //If already an integer\n  if(isInteger(A)){\n    return A;\n  }\n\n  //Convert numbers to string\n  if(typeof A === \"number\"){\n    A = '' + A;\n\n  //If not an expected type\n  } else if(typeof A !== \"string\"){\n    throw TypeError(\"Expecting type Integer | string | number\");\n  }\n\n  //Convert string to base 10\n  const B: Integer = setZero({base: 10});\n  [B.digits, B.isNegative] = strToDigits(A);\n  B.precision = B.digits.length;\n\n  //Convert to chosen base\n  return setBase(B, (base == null) ? Globals.DEFAULT_BASE : base);\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {toInteger} from './toInteger';\n\nexport function toNumber(A: Integer): number {\n\n  // If A is too large to be represented as a number\n  const B = toInteger(Number.MAX_SAFE_INTEGER, A.base);\n  B.isNegative = A.isNegative;\n  const comparison = A.isNegative ? compare(B, A) : compare(A, B);\n  if (comparison > 0) {\n    throw new RangeError(\"Value too large for number conversion\");\n  }\n\n  // Convert A to a number\n  const arr = A.digits;\n  const base = A.base;\n  let a = 0;\n  for (let i = A.precision; i > 0; a = a * base + arr[--i]) {\n  }\n\n  // Return result\n  return A.isNegative ? -a : a;\n}\n","import {increment} from './increment';\n\n/*\n  f(A, B) = A + B\n  Overwrites A\n  Assumes\n    A.length >= B.length\n    A and B not same array or non-intersecting segments\n*/\nexport function addition(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number{\n  let carry = 0;\n\n  //Add common digits\n  while (minB < maxB){\n    let v: number = A[minA] + B[minB++] + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 1;\n      v = v - base;\n    }\n    A[minA++] = v;\n  }\n\n  //Return length\n  return (carry > 0) ? increment(A, minA, maxA, base) : maxA;\n}\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","import {Integer} from '../integer';\n\nexport function negate(A: Integer): Integer {\n  A.isNegative = A.precision > 0 && !A.isNegative;\n  return A;\n}\n","import {Integer} from '../integer';\nimport {karatsubaSquare} from '../algorithm/karatsubaSquare';\nimport {longSquare} from '../algorithm/longSquare';\nimport {growArray} from '../util/arrayUtils';\n\nexport function square(A: Integer): Integer {\n\n  //If zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //Make positive\n  A.isNegative = false;\n\n  //Make minimum room for squaring\n  const maxNewLen: number = 2 * A.precision;\n  growArray(A.digits, maxNewLen - 1, maxNewLen);\n\n  //Choose best performing algorithm\n  if(A.precision < 100){\n    A.precision = longSquare(A.digits, 0, A.precision, A.base);\n  } else {\n    A.precision = karatsubaSquare(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n","import {addition} from './addition';\nimport {reverseAddition} from './reverseAddition';\nimport {subtraction} from './subtraction';\nimport {copy, unsafeShiftUp} from '../util/arrayUtils';\nimport {min, max, zero} from '../util/numUtils';\n\n/*\n  f(A) = A * B\n  Overwrites A\n  Assumes A > 0 and B > 0\n  Assumes A and B are not the same array\n  Explanation: https://en.wikipedia.org/wiki/Karatsuba_algorithm\n*/\nexport function karatsubaMultiplication(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n  let halfLen: number = max(maxA - minA, maxB - minB);\n\n  //Base case\n  if(halfLen < 2){\n    halfLen = A[minA] * B[minB];\n    if(halfLen < base){\n      A[maxA] = 0;\n    } else {\n      A[maxA++] = 0 | (halfLen / base);\n      halfLen = halfLen % base;\n    }\n    A[minA] = halfLen;\n    return maxA;\n  }\n\n  //Split the numbers in half\n  halfLen = (halfLen + 1) >>> 1;\n  const halfA: number = minA + halfLen;\n  const midA: number = min(halfA, maxA);\n  const midB: number = min(minB + halfLen, maxB);\n\n  //mediumB = lowB + highB\n  const mediumB: number[] = new Array(midB - minB + 1);\n  copy(mediumB, 0, B, minB, midB);\n  const mediumMaxB: number = addition(\n    mediumB, 0, midB - minB, B, midB, maxB, base\n  );\n\n  //medium = lowA + highA\n  const medium: number[] = new Array(midA - minA + 1 + mediumMaxB);\n  copy(medium, 0, A, minA, midA);\n  let mediumMax: number = addition(medium, 0, midA - minA, A, midA, maxA, base);\n\n  //medium = medium * mediumB\n  mediumMax = karatsubaMultiplication(\n    medium, 0, mediumMax, mediumB, 0, mediumMaxB, base\n  );\n\n  //Shift highA left\n  A[maxA] = 0;\n  unsafeShiftUp(A, midA, maxA, halfLen);\n\n  //lowA = lowA * lowB\n  const lowMax: number = karatsubaMultiplication(\n    A, minA, midA, B, minB, midB, base\n  );\n\n  //medium = medium - lowA\n  mediumMax = subtraction(medium, 0, mediumMax, A, minA, lowMax, base);\n\n  //A = medium*(base^halfLen) + lowA\n  if(midA === maxA || midB === maxB){\n    if(lowMax <= halfA){\n      maxA = halfA + mediumMax;\n      zero(A, lowMax, halfA);\n      copy(A, halfA, medium, 0, mediumMax);\n    } else if(mediumMax > lowMax - halfA){\n      maxA = reverseAddition(A, halfA, lowMax, medium, 0, mediumMax, base);\n    } else {\n      maxA = addition(A, halfA, lowMax, medium, 0, mediumMax, base);\n    }\n    return maxA;\n  }\n\n  //Fill unused space with zero\n  zero(A, lowMax, maxA);\n\n  //highA = highA * highB\n  const highMin: number = midA + halfLen;\n  maxA = karatsubaMultiplication(\n    A, highMin, maxA + halfLen, B, midB, maxB, base\n  );\n\n  //medium = medium - highA\n  mediumMax = subtraction(medium, 0, mediumMax, A, highMin, maxA, base);\n\n  //A = highA*(base^len) + medium*(base^halfLen) + lowA\n  maxA = addition(A, halfA, maxA, medium, 0, mediumMax, base);\n  return maxA;\n}\n","import {Integer} from '../integer';\n\n// tslint:disable-next-line:no-any\nexport function isInteger(A: any): A is Integer {\n  return A.hasOwnProperty('base')\n  && A.hasOwnProperty('digits')\n  && A.hasOwnProperty('precision')\n  && A.hasOwnProperty('isNegative');\n}\n","import {Integer} from '../integer';\nimport {isEven as _isEven} from '../algorithm/isEven';\n\nexport function isEven(A: Integer): boolean {\n  return _isEven(A.digits, 0, A.precision, A.base);\n}\n","/*\n  f(A) = A / 2\n  Overwrites A\n  Assumes A > 0\n*/\nexport function halve(\n  A: number[], minA: number, maxA: number, base: number\n): [number, number] {\n\n  //Halve\n  let remainder = 0;\n  for(let i: number = maxA; i-- > minA; A[i] = A[i] >>> 1){\n    A[i] = A[i] + (base & -remainder);\n    remainder = A[i] & 1;\n  }\n\n  //Get new length\n  if(A[maxA - 1] === 0){\n    --maxA;\n  }\n\n  return [maxA, remainder];\n}\n","import {Integer} from '../integer';\nimport {decrement as _decrement} from '../algorithm/decrement';\nimport {increment} from '../algorithm/increment';\nimport {setOne} from '../util/intUtils';\n\nexport function decrement(A: Integer): Integer {\n\n  //If negative\n  if(A.isNegative){\n    A.precision = increment(A.digits, 0, A.precision, A.base);\n\n  //If zero\n  } else if (A.precision === 0){\n    setOne(A);\n    A.isNegative = true;\n\n  //If positive\n  } else {\n    A.precision = _decrement(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n","/*\n  f(A) = A + 1\n  Overwrites A\n  Assumes A >= 0\n*/\n\nexport function increment(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Deal with any carries\n  for(--base; minA < maxA && A[minA] === base; A[minA++] = 0){\n  }\n\n  //Add one\n  if(minA === maxA){\n    A[maxA++] = 1;\n  } else {\n    A[minA] = A[minA] + 1;\n  }\n\n  //Return length\n  return maxA;\n}\n","/*\n  f(A) = A - 1\n  Overwrites A\n  Assumes A > 0\n*/\nexport function decrement(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Deal with any borrows\n  for(const borrow: number = base - 1; A[minA] === 0; A[minA++] = borrow){\n  }\n\n  //Subtract one\n  A[minA] = A[minA] - 1;\n\n  //Return length\n  return (minA+1 === maxA && A[minA] === 0) ? maxA - 1 : maxA;\n}\n","//Assumes valid inputs\n//Assumes numbers are in same base\nexport function compare(\n  A: ReadonlyArray<number>, minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number\n): number {\n\n  //Compare number of digits\n  const d: number = maxA - minA - maxB + minB;\n  if(d !== 0){\n    return d < 0 ? -1 : 1;\n  }\n\n  //Compare digits\n  while(maxA > minA){\n    if(A[--maxA] !== B[--maxB]){\n      return A[maxA] < B[maxB] ? -1 : 1;\n    }\n  }\n\n  //Numbers are equal\n  return 0;\n}\n","import {Integer} from '../integer';\nimport {add} from './add';\nimport {compare} from './compare';\nimport {copy} from './copy';\nimport {negate} from './negate';\nimport {setBase} from './setBase';\nimport {reverseSubtraction} from '../algorithm/reverseSubtraction';\nimport {subtraction} from '../algorithm/subtraction';\nimport {setZero} from '../util/intUtils';\n\nexport function subtract(A: Integer, B: Integer): Integer {\n\n  //If subtracting itself\n  if(A === B){\n    return setZero(A);\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return A;\n  }\n\n  const base: number = A.base;\n\n  //If A is zero\n  if(A.precision === 0){\n\n    //Copy B\n    copy(A, B);\n    negate(A);\n    return setBase(A, base);\n  }\n\n  //If signs differ\n  if(A.isNegative !== B.isNegative){\n\n    //Change sign, add, change sign again\n    negate(A);\n    add(A, B);\n    return negate(A);\n  }\n\n  //Normalize to B's base\n  setBase(A, B.base);\n\n  //Compare A and B\n  const c = A.isNegative ? compare(B, A) : compare(A, B);\n\n  //If A == B\n  if(c === 0){\n    A.base = base;\n    return setZero(A);\n  }\n\n  //If A < B\n  if(c < 0){\n\n    //Switch sign\n    negate(A);\n\n    //Make room for subtraction\n    if(A.digits.length < B.precision){\n      A.digits.length = B.precision;\n    }\n\n    //Subtract\n    A.precision = reverseSubtraction(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n\n  //If A > B\n  } else {\n    A.precision = subtraction(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n  }\n\n  return setBase(A, base);\n}\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","/*\nf(A) = A + A\nOverwrites A\n*/\nexport function double(\n  A: number[], minA: number, maxA: number, base: number\n): number {\n\n  //Double\n  let carry = 0;\n  while(minA < maxA){\n    let v: number = (A[minA] << 1) + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 1;\n      v = v - base;\n    }\n    A[minA++] = v;\n  }\n\n  //Add carry\n  if (carry > 0){\n    A[minA++] = 1;\n  }\n\n  //Return length\n  return minA;\n}\n","import {Integer} from '../integer';\nimport {double as _double} from '../algorithm/double';\n\nexport function double(A: Integer): Integer {\n  A.precision = _double(A.digits, 0, A.precision, A.base);\n  return A;\n}\n","import {Integer} from '../integer';\nimport {copy} from './copy';\nimport {double} from './double';\nimport {negate} from './negate';\nimport {setBase} from './setBase';\nimport {subtract} from './subtract';\nimport {addition} from '../algorithm/addition';\nimport {reverseAddition} from '../algorithm/reverseAddition';\nimport {growArray} from '../util/arrayUtils';\n\n//A = toInteger([3], 1, false, 10);\n//B = toInteger([1], 1, true, 10);\nexport function add(A: Integer, B: Integer): Integer {\n\n  //If self\n  if(A === B){\n    return double(A);\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return A;\n  }\n\n  const base: number = A.base;\n\n  //If A is zero\n  if(A.precision === 0){\n    copy(A, B);\n    return setBase(A, base);\n  }\n\n  //If signs differ\n  if(A.isNegative !== B.isNegative){\n\n    //Change sign, subtract, change sign again\n    negate(A);\n    subtract(A, B);\n    return negate(A);\n  }\n\n  //Normalize to B's base\n  setBase(A, B.base);\n\n  //If C < B\n  if(A.precision < B.precision){\n\n    //Update C's digit array to minimum result size\n    growArray(A.digits, B.precision, B.precision + 1);\n\n    //Add\n    A.precision = reverseAddition(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n\n  //If A >= B\n  } else {\n\n    //Add\n    A.precision = addition(\n      A.digits, 0, A.precision,\n      B.digits, 0, B.precision,\n      A.base\n    );\n  }\n\n  //Change A back to original base\n  return setBase(A, base);\n}\n","import {Globals} from '../globals';\nimport {Integer} from '../integer';\n\n//Assumes input cipher is adequate for base\nexport function toString(A: Integer): string {\n  const cipher = Globals.CIPHER;\n\n  //If zero\n  if(A.precision === 0){\n    return (cipher.length < A.base) ? '0' : cipher[0];\n  }\n\n  //If negative\n  const sign: string = A.isNegative ? \"-\" : \"\";\n\n  //Print without cipher if cipher too small for base\n  if(cipher.length < A.base){\n    return sign + A.digits.slice(0, A.precision).reverse().join(':');\n  }\n\n  //Print with cipher\n  let i = 0;\n  let n: number = A.precision;\n  const digits = A.digits;\n  const strings = new Array(n);\n  while(n > 0){\n    strings[i++] = cipher[digits[--n]];\n  }\n  return sign + strings.join('');\n}\n","import {Integer} from '../integer';\n\nexport function signum(A: Integer): number {\n  return A.isNegative ? -1 : A.precision === 0 ? 0 : 1;\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {toInteger} from './toInteger';\nimport {toNumber} from './toNumber';\nimport {shiftDown} from '../util/arrayUtils';\nimport {setZero} from '../util/intUtils';\n\nexport function shiftRight(A: Integer, B: Integer): Integer {\n\n  // If shifting by a negative number\n  if (B.isNegative) {\n    throw new EvalError('Cannot make negative right shifts');\n  }\n\n  // If shifting 0 or shifting by 0\n  if (A.precision === 0 || B.precision === 0) {\n    return A;\n  }\n\n  // If shifting down to 0\n  const C = toInteger(A.precision, B.base);\n  if (compare(B, C) >= 0) {\n    return setZero(A);\n  }\n\n  // Convert B to number\n  const b = toNumber(B);\n\n  // Shift A right by b\n  shiftDown(A.digits, 0, A.precision, b);\n  A.digits.length = A.precision = A.precision - b;\n\n  // Return result\n  return A;\n}\n","import {Globals} from '../globals';\nimport {Integer} from '../integer';\nimport {toNumber} from './toNumber';\nimport {safeShiftUp, unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\nexport function shiftLeft(A: Integer, B: Integer): Integer {\n\n  // If shifting by a negative number\n  if (B.isNegative) {\n    throw new EvalError('Cannot make negative left shifts');\n  }\n  \n  // If shifting 0 or shifting by 0\n  if (A.precision === 0 || B.precision === 0) {\n    return A;\n  }\n\n  // Convert B to number\n  const b = toNumber(B);\n\n  // Check if shift too large\n  if (b > Globals.MAX_PRECISION - A.precision) {\n    throw new RangeError(\n      `Left shift result larger than max precision ${Globals.MAX_PRECISION}`\n    );\n  }\n\n  // Shift A left by b\n  A.digits.length = A.precision + b;\n  if (b >= A.precision) {\n    unsafeShiftUp(A.digits, 0, A.precision, b);\n  } else {\n    safeShiftUp(A.digits, 0, A.precision, b);\n  }\n  zero(A.digits, 0, b);\n  A.precision = A.precision + b;\n\n  // Return result\n  return A;\n}\n","import {Integer} from '../integer';\nimport {isEven} from './isEven';\nimport {exponentiation} from '../algorithm/exponentiation';\nimport {growArray} from '../util/arrayUtils';\nimport {setOne, setZero} from '../util/intUtils';\n\nexport function pow(A: Integer, B: Integer): Integer {\n\n  //C^0 = 1\n  if(B.precision === 0){\n    return setOne(A);\n  }\n\n  //If power is negative\n  if(B.isNegative){\n\n    //If 1 / 0\n    if(A.precision === 0){\n      throw new EvalError(\"Divide by zero\");\n    }\n\n    return setZero(A);\n  }\n\n  //0^B = zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //If negative base and even power\n  A.isNegative = A.isNegative && !isEven(B);\n\n  //1^B = 1\n  if(A.precision === 1 && A.digits[0] === 1){\n    return A;\n  }\n\n  //Set new size\n  growArray(A.digits,\n\n    //Min new size\n    (A.precision - 1) * (B.base ** (B.precision - 1)) + 1,\n\n    //Max new size\n    A.precision * ((B.base ** B.precision) - 1)\n  );\n\n  //C = C^B\n  A.precision = exponentiation(\n    A.digits, 0, A.precision, A.base,\n    B.digits.slice(0,B.precision), 0, B.precision, B.base\n  );\n\n  return A;\n}\n","import {addition} from './addition';\nimport {subtraction} from './subtraction';\nimport {copy, unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A) = A * A\n  Overwrites A\n  Assumes A > 0\n  See: https://en.wikipedia.org/wiki/Karatsuba_algorithm\n*/\nexport function karatsubaSquare(\n  A: number[], min: number, max: number, base: number\n): number {\n  let halfLen: number = max - min;\n\n  //Base case\n  if(halfLen < 2){\n    halfLen = A[min] * A[min];\n    if(halfLen < base){\n      A[max] = 0;\n    } else {\n      A[max++] = 0 | (halfLen / base);\n      halfLen = halfLen % base;\n    }\n    A[min] = halfLen;\n    return max;\n  }\n\n  //Split the number in half\n  halfLen = (halfLen + 1) >>> 1;\n  const mid: number = min + halfLen;\n\n  //medium = low + high\n  const medium: number[] = new Array(2*halfLen + 2);\n  copy(medium, 0, A, min, mid);\n  let mediumMax: number = addition(medium, 0, halfLen, A, mid, max, base);\n\n  //Shift high left\n  A[max] = 0;\n  unsafeShiftUp(A, mid, max, halfLen);\n\n  //low * low\n  const lowMax: number = karatsubaSquare(A, min, mid, base);\n\n  //Fill unused space with zero\n  zero(A, lowMax, max);\n\n  //high * high\n  const highMin = mid + halfLen;\n  max = karatsubaSquare(A, highMin, max + halfLen, base);\n\n  //medium = medium * medium - low - high\n  mediumMax = karatsubaSquare(medium, 0, mediumMax, base);\n  mediumMax = subtraction(medium, 0, mediumMax, A, min, lowMax, base);\n  mediumMax = subtraction(medium, 0, mediumMax, A, highMin, max, base);\n\n  //A = high*(base^len) + medium*(base ^ halfLen) + low\n  return addition(A, mid, max, medium, 0, mediumMax, base);\n}\n","import {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {square} from './square';\nimport {double} from '../algorithm/double';\nimport {karatsubaMultiplication} from '../algorithm/karatsubaMultiplication';\nimport {longMultiplication} from '../algorithm/longMultiplication';\nimport {singleDigitMultiplication} from '../algorithm/singleDigitMultiplication';\nimport {growArray} from '../util/arrayUtils';\nimport {setZero} from '../util/intUtils';\n\nexport function multiply(A: Integer, B: Integer): Integer {\n\n  //If self\n  if(A === B){\n    return square(A);\n  }\n\n  //If A is zero\n  if(A.precision === 0){\n    return A;\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return setZero(A);\n  }\n\n  //Multiply signs\n  A.isNegative = A.isNegative !== B.isNegative;\n\n  //Normalize to B's base\n  const base: number = A.base;\n  setBase(A, B.base);\n\n  //If B is single digit\n  if(B.precision === 1){\n    const multiplicand: number = B.digits[0];\n\n    //If more than doubling\n    if(multiplicand > 2){\n      A.precision = singleDigitMultiplication(\n        A.digits, 0, A.precision, multiplicand, A.base\n      );\n\n    //If doubling\n    } else if(multiplicand === 2){\n      A.precision = double(A.digits, 0, A.precision, A.base);\n    }\n\n  //If A is single digit\n  } else if(A.precision === 1){\n    const multiplicand: number = A.digits[0];\n\n    //Copy B to A\n    A.precision = B.precision;\n    A.digits = B.digits.slice(0, B.precision);\n\n    //If more than doubling\n    if(multiplicand > 2){\n      A.precision = singleDigitMultiplication(\n        A.digits, 0, A.precision, multiplicand, A.base\n      );\n    } else if(multiplicand === 2){\n      A.precision = double(A.digits, 0, A.precision, A.base);\n    }\n\n  } else {\n\n    //Make room for multiplication\n    const maxNewLen: number = A.precision + B.precision;\n    growArray(A.digits, maxNewLen - 1, maxNewLen);\n\n    //Choose best performing algorithm\n    if(A.precision < 100 && B.precision < 100){\n      A.precision = longMultiplication(\n        A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n      );\n    } else {\n      A.precision = karatsubaMultiplication(\n        A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n      );\n    }\n  }\n\n  return setBase(A, base);\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\n\nexport function min(A: Integer, B: Integer): Integer {\n  return compare(A, B) > 0 ? B : A;\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\n\nexport function max(A: Integer, B: Integer): Integer {\n  return compare(A, B) < 0 ? B : A;\n}\n","import {Integer} from '../integer';\nimport {copy} from './copy';\nimport {setBase} from './setBase';\nimport {lcm as _lcm} from '../algorithm/lcm';\nimport {setZero} from '../util/intUtils';\n\n//See: https://en.wikipedia.org/wiki/Least_common_multiple\nexport function lcm(A: Integer, B: Integer): Integer {\n\n  //Make A positive\n  A.isNegative = false;\n\n  //If LCM of self or A = 0 or B = 1\n  if(A === B || A.precision === 0 || (B.precision === 1 && B.digits[0] === 1)){\n    return A;\n  }\n\n  //If B is zero\n  if(B.precision === 0){\n    return setZero(A);\n  }\n\n  const base: number = A.base;\n\n  //If A = 1\n  if(A.precision === 1 && A.digits[0] === 1){\n    copy(A, B);\n    A.isNegative = false;\n\n  //If A > 1 and B > 1\n  } else {\n\n    //Normalize bases\n    setBase(A, B.base);\n\n    //Calculate LCM\n    [A.digits, A.precision] = _lcm(\n      A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n    );\n  }\n\n  //Change A to original base\n  return setBase(A, base);\n}\n","import {Integer} from '../integer';\nimport {decrement} from '../algorithm/decrement';\nimport {increment as _increment} from '../algorithm/increment';\n\nexport function increment(A: Integer): Integer {\n\n  //If negative\n  if(A.isNegative){\n    A.precision = decrement(A.digits, 0, A.precision, A.base);\n\n    //If now zero\n    if(A.precision === 0){\n      A.isNegative = false;\n    }\n\n  //If positive\n  } else {\n    A.precision = _increment(A.digits, 0, A.precision, A.base);\n  }\n\n  return A;\n}\n","import {Integer} from '../integer';\nimport {decrement} from './decrement';\nimport {halve as _halve} from '../algorithm/halve';\nimport {setZero, setOne} from '../util/intUtils';\n\nexport function halve(A: Integer): [Integer, Integer] {\n  const remainder: Integer = setZero({base: A.base});\n\n  //If zero\n  if(A.precision === 0){\n    return [A, remainder];\n  }\n\n  //Halve\n  [A.precision, remainder.precision] = _halve(A.digits, 0, A.precision, A.base);\n\n  //If no remainder\n  if(remainder.precision === 0){\n    return [A, remainder];\n  }\n\n  //If remainder and C is negative\n  if(A.isNegative){\n\n    //Round down (e.g. Math.floor(-49.5) = -50)\n    decrement(A);\n  }\n\n  return [A, setOne(remainder)];\n}\n","export function isEven(\n  A: ReadonlyArray<number>, minA: number, maxA: number, base: number\n): boolean {\n\n  //If zero\n  if(minA === maxA){\n    return true;\n  }\n\n  //If even base\n  if((base & 1) === 0){\n    return (A[minA] & 1) === 0;\n  }\n\n  //If odd base\n  let xor = 0;\n  do {\n    xor = xor ^ A[minA++];\n  } while(minA < maxA);\n  return (xor & 1) === 0;\n}\n","import {compare} from './compare';\nimport {double} from './double';\nimport {halve} from './halve';\nimport {isEven} from './isEven';\nimport {subtraction} from './subtraction';\n\n/*\nf(A, B) = GCD(A, B)\nOverwrites A, B\nExpects A > 0, B > 0\n//Assumes A != B\nSee: https://en.wikipedia.org/wiki/Binary_GCD_algorithm\n*/\nexport function steinGCD(\n  A: number[], minA: number, maxA: number,\n  B: number[], minB: number, maxB: number,\n  base: number\n): [number[], number, number] {\n\n  //Count and remove common factors of 2\n  let shifts = 0;\n  while(isEven(A, minA, maxA, base) && isEven(B, minB, maxB, base)){\n    [maxA] = halve(A, minA, maxA, base);\n    [maxB] = halve(B, minB, maxB, base);\n    ++shifts;\n  }\n\n  //Remove extra factors of 2 in A\n  while(isEven(A, minA, maxA, base)){\n    [maxA] = halve(A, minA, maxA, base);\n  }\n\n  //Remove extra factors of 2 in B\n  while(isEven(B, minB, maxB, base)){\n    [maxB] = halve(B, minB, maxB, base);\n  }\n\n  //A will always be odd from now on\n  //While A != B\n  while (true) {\n    let c = compare(A, minA, maxA, B, minB, maxB);\n\n    if (c === 0){\n      break;\n    }\n\n    //Switch A and B iff A > B\n    if(c > 0){\n      const C: number[] = A;\n      A = B;\n      B = C;\n      c = minA;\n      minA = minB;\n      minB = c;\n      c = maxA;\n      maxA = maxB;\n      maxB = c;\n    }\n\n    //B = B - A\n    maxB = subtraction(B, minB, maxB, A, minA, maxA, base);\n\n    //B is now even so halve it at least once\n    do {\n      [maxB] = halve(B, minB, maxB, base);\n    } while (isEven(B, minB, maxB, base));\n  }\n\n  //Restore common factors of 2 (A = A << shifts)\n  while(shifts-- > 0){\n    maxA = double(A, minA, maxA, base);\n  }\n\n  return [A, minA, maxA];\n}\n","import {Integer} from '../integer';\nimport {compare} from './compare';\nimport {copy} from './copy';\nimport {setBase} from './setBase';\nimport {steinGCD} from '../algorithm/steinGCD';\n\nexport function gcd(A: Integer, B: Integer): Integer {\n\n  //Make A positive\n  A.isNegative = false;\n\n  //If GCD of self or B = 0\n  if(A === B || B.precision === 0){\n    return A;\n  }\n\n  //If A = 0\n  if(A.precision === 0){\n    copy(A, B);\n    A.isNegative = false;\n    return A;\n  }\n\n  //If |A| > 0 && |B| > 0\n  const base: number = A.base;\n\n  //Normalize the bases\n  setBase(A, B.base);\n\n  //If A != B\n  if(compare(A, B) !== 0){\n\n    //Calculate GCD\n    [A.digits,,A.precision] = steinGCD(\n      A.digits, 0, A.precision,\n      B.digits.slice(0, B.precision), 0, B.precision,\n      A.base\n    );\n  }\n\n  //Return A to original base\n  return setBase(A, base);\n}\n","/*\n  f(A,B) = A*B\n  Overwrites A\n  Assumes B > 0\n*/\nexport function singleDigitMultiplication(\n  A: number[], minA: number, maxA: number,\n  multiplier: number, base: number\n): number {\n\n  //Multiply multiplicand by multiplier\n  let carry = 0;\n  while(minA < maxA){\n    let v: number = (A[minA] * multiplier) + carry;\n    if(v < base){\n      carry = 0;\n    } else {\n      carry = 0 | (v / base);\n      v = v % base;\n    }\n    A[minA++] = v;\n  }\n\n  //Add remaining carry\n  if(carry > 0){\n    A[minA++] = carry;\n  }\n\n  //Return length\n  return minA;\n}\n","import {compare} from './compare';\nimport {singleDigitMultiplication} from './singleDigitMultiplication';\nimport {subtraction} from './subtraction';\nimport {copy} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(X, Y) = X / Y\n  Overwrites X\n  Assumes no leading zeros\n  Assumes X.length >= Y.length >= 2\n  See: http://cacr.uwaterloo.ca/hac/about/chap14.pdf\n\n  INPUT: positive integers x = (xn ··· x1x0)b, y = (yt ··· y1y0)b with n ≥ t ≥ 1, yt != 0\n  OUTPUT: the quotient q = (qn−t ··· q1q0)b and remainder r = (rt ··· r1r0)b such that x = qy + r, 0 ≤ r < y\n*/\nexport function basicDivision(\n  X: number[], minX: number, maxX: number,\n  Y: ReadonlyArray<number>, minY: number, maxY: number,\n  base: number\n): [number[], number[], number, number] {\n\n  //1. Initialize the quotient\n  const lenY: number = maxY - minY;\n  const nMt: number = maxX - minX - lenY;\n  const Q: number[] = new Array(nMt + 1);\n  zero(Q, 0, nMt + 1);\n\n  //2. While X ≥ Yb^(n−t)\n  let maxR: number = maxX;\n  while(compare(X, minX + nMt, maxR, Y, minY, maxY) >= 0){\n\n    //Q[n−t] ← Q[n−t] + 1\n    ++Q[nMt];\n\n    //x ← x − Bb^(n−t)\n    maxR = subtraction(X, minX + nMt, maxR, Y, minY, maxY, base);\n  }\n\n  //3. For i from n down to (t + 1)\n  const yt: number = Y[maxY-1];\n  const ytm1: number = Y[maxY-2];\n  const QY: number[] = new Array(lenY + 1);\n  for(let i: number = maxX - 1, iMt: number = nMt; iMt-- > 0; --i){\n\n    //3.1 If x[i] = y[t] then set q[i−t−1] ← b − 1; otherwise set q[i−t−1] ← (x[i]b + x[i−1]) / y[t]\n    //3.2 While q[i−t−1] * (y[t]b + y[t−1]) > x[i]b^2 + x[i−1]b + x[i−2]\n    Q[iMt] = divThreeHalvesByTwo(X[i], X[i-1], X[i-2], yt, ytm1, base);\n\n    //3.3 x ← x − q[i−t−1] * yb^(i−t−1)\n    //3.4 If x < 0 then set x ← x + yb^(i−t−1) and q[i−t−1] ← q[i−t−1] − 1\n    if(Q[iMt] === 0){\n      continue;\n    }\n    copy(QY, 0, Y, minY, maxY);\n    let maxQY: number = singleDigitMultiplication(QY, 0, lenY, Q[iMt], base);\n    if(compare(QY, 0, maxQY, X, minX + iMt, maxR) > 0){\n      --Q[iMt];\n      maxQY = subtraction(QY, 0, maxQY, Y, minY, maxY, base);\n    }\n    maxR = subtraction(X, minX + iMt, maxR, QY, 0, maxQY, base);\n  }\n\n  //4. r ← x\n  //Adjust length of remainder\n  while(maxR > minX && X[maxR - 1] === 0){\n    --maxR;\n  }\n\n  //5. Return(q,r)\n  return [Q, X, (Q[nMt] === 0) ? nMt : nMt + 1, maxR];\n}\n\n/*\n  See: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.47.565&rep=rep1&type=pdf\n*/\nfunction divThreeHalvesByTwo(a1: number, a2: number, a3: number, b1: number, b2: number, base: number): number {\n  let q: number = a1*base + a2;\n  let r: number = q % b1;\n  q = 0 | (q / b1);\n  r = r*base - q*b2 + a3;\n  if(r < 0){\n    r = r + b1*base + b2;\n    q = (r < 0) ? q - 2 : q - 1;\n  }\n  return q;\n}\n","import {Integer} from '../integer';\nimport {setBase} from './setBase';\nimport {basicDivision} from '../algorithm/basicDivision';\nimport {singleDigitDivision} from '../algorithm/singleDigitDivision';\nimport {assign, setOne, setZero} from '../util/intUtils';\n\nexport function divideAndRemainder(A: Integer, B: Integer): [Integer, Integer] {\n\n  //If A / 0\n  if(B.precision === 0){\n    throw new EvalError(\"Divide by zero\");\n  }\n\n  //If self\n  if(A === B){\n    return [setOne(A), setZero({base: A.base})];\n  }\n\n  //Divide signs\n  A.isNegative = A.isNegative !== B.isNegative;\n\n  //If 0 / B or B = 1\n  if(A.precision === 0 || (B.precision === 1 && B.digits[0] === 1)){\n    return [A, setZero({base: A.base})];\n  }\n\n  //If A = 1\n  if(A.precision === 1 && A.digits[0] === 1){\n    return [setZero(A), setOne({base: A.base})];\n  }\n\n  //If different bases\n  const base: number = A.base;\n  if(base !== B.base){\n\n    //If A's max length in B's base < B's length\n    const ratio: number = Math.log(base) / Math.log(B.base);\n    if(Math.ceil(A.precision * ratio) < B.precision){\n      const remainder: Integer = assign({}, A);\n      return [setZero(A), remainder];\n    }\n\n    //Normalize bases\n    setBase(A, B.base);\n  }\n\n  //If A's length < B's length\n  if(A.precision < B.precision){\n    setBase(A, base);\n    const remainder: Integer = assign({}, A);\n    return [setZero(A), remainder];\n  }\n\n  //Choose best algorithm\n  const R: Integer = setOne({base: A.base});\n  if(B.precision < 2){\n    [A.precision, R.digits[0]] = singleDigitDivision(\n      A.digits, 0, A.precision, B.digits[0], A.base\n    );\n    if(R.digits[0] === 0){\n      setZero(R);\n    }\n  } else {\n    [\n      A.digits, R.digits, A.precision, R.precision\n    ] = basicDivision(\n      A.digits, 0, A.precision, B.digits, 0, B.precision, A.base\n    );\n  }\n\n  //Return A and R\n  setBase(A, base);\n  setBase(R, base);\n  return [A, R];\n}\n","import {addition} from './addition';\n\n/*\n  f(A, B) = A + B\n  Overwrites A\n  Assumes\n    A < B\n    A and B not overlapping array segments\n*/\nexport function reverseAddition(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number{\n\n  //Add extra digits to A\n  const newMaxB: number = minB - minA + maxA;\n  for(let b: number = newMaxB; b < maxB; A[maxA++] = B[b++]){\n  }\n\n  //Do normal addition\n  return addition(A, minA, maxA, B, minB, newMaxB, base);\n}\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = true;\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","import {Integer} from '../integer';\n\nexport function abs(A: Integer): Integer {\n  A.isNegative = false;\n  return A;\n}\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","import {Integer} from '../integer';\nimport {abs} from '../functional/abs';\nimport {add} from '../functional/add';\nimport {compare} from '../functional/compare';\nimport {copy} from '../functional/copy';\nimport {decrement} from '../functional/decrement';\nimport {divideAndRemainder} from '../functional/divideAndRemainder';\nimport {double} from '../functional/double';\nimport {gcd} from '../functional/gcd';\nimport {halve} from '../functional/halve';\nimport {increment} from '../functional/increment';\nimport {isEven} from '../functional/isEven';\nimport {lcm} from '../functional/lcm';\nimport {max} from '../functional/max';\nimport {min} from '../functional/min';\nimport {multiply} from '../functional/multiply';\nimport {negate} from '../functional/negate';\nimport {pow} from '../functional/pow';\nimport {signum} from '../functional/signum';\nimport {setBase} from '../functional/setBase';\nimport {shiftLeft} from '../functional/shiftLeft';\nimport {shiftRight} from '../functional/shiftRight';\nimport {subtract} from '../functional/subtract';\nimport {square} from '../functional/square';\nimport {isInteger} from '../functional/isInteger';\nimport {toInteger} from '../functional/toInteger';\nimport {toNumber} from '../functional/toNumber';\nimport {toString} from '../functional/toString';\nimport {assign} from '../util/intUtils';\n\nexport class BigInt implements Integer {\n  static get MINUS_ONE(): BigInt {return new BigInt(-1);}\n  static get ZERO(): BigInt {return new BigInt(0);}\n  static get ONE(): BigInt {return new BigInt(1);}\n\n  base!: number;\n  digits!: number[];\n  precision!: number;\n  isNegative!: boolean;\n\n  constructor(input: Integer | number | string) {\n    if(isInteger(input)){\n      copy(this, input);\n    } else {\n      assign(this, toInteger(input));\n    }\n  }\n\n  abs(): BigInt {\n    return BigInt.tryBigInt(abs(this));\n  }\n\n  add(addend: Integer): BigInt {\n    return BigInt.tryBigInt(add(this, addend));\n  }\n\n  clone(): BigInt {\n    return new BigInt(this);\n  }\n\n  compareTo(B: Integer): number {\n    return compare(this, B);\n  }\n\n  divide(divisor: Integer): BigInt {\n    return this.divideAndRemainder(divisor)[0];\n  }\n\n  divideAndRemainder(divisor: Integer): [BigInt, BigInt] {\n    const [Q, R]: [Integer, Integer] = divideAndRemainder(this, divisor);\n    return [BigInt.tryBigInt(Q), assign(BigInt.ZERO, R) as BigInt];\n  }\n\n  double(): BigInt {\n    return BigInt.tryBigInt(double(this));\n  }\n\n  gcd(B: Integer): BigInt {\n    return BigInt.tryBigInt(gcd(this, B));\n  }\n\n  getBase(): number {\n    return this.base;\n  }\n\n  halve(): [BigInt, BigInt] {\n    const [Q, R]: [Integer, Integer] = halve(this);\n    return [BigInt.tryBigInt(Q), new BigInt(R.precision)];\n  }\n\n  // tslint:disable-next-line:no-any\n  static isBigInt(n: any): n is BigInt {\n    return n instanceof BigInt;\n  }\n\n  isEven(): boolean {\n    return isEven(this);\n  }\n\n  isOdd(): boolean {\n    return !isEven(this);\n  }\n\n  lcm(B: Integer): BigInt {\n    return BigInt.tryBigInt(lcm(this, B));\n  }\n\n  static max(A: Integer, B: Integer): BigInt {\n    return BigInt.tryBigInt(max(A, B));\n  }\n\n  max(B: Integer): BigInt {\n    const C: Integer = max(this, B);\n    if(C === this){\n      return this;\n    }\n    if(C === B){\n      return copy(this, C) as BigInt;\n    }\n    return assign(BigInt.ZERO, C) as BigInt;\n  }\n\n  static min(A: Integer, B: Integer): BigInt {\n    return BigInt.tryBigInt(min(A, B));\n  }\n\n  min(B: Integer): BigInt {\n    const C: Integer = min(this, B);\n    if(C === this){\n      return this;\n    }\n    if(C === B){\n      return copy(this, C) as BigInt;\n    }\n    return assign(BigInt.ZERO, C) as BigInt;\n  }\n\n  minusminus(): BigInt {\n    return BigInt.tryBigInt(decrement(this));\n  }\n\n  multiply(multiplier: Integer): BigInt {\n    return BigInt.tryBigInt(multiply(this, multiplier));\n  }\n\n  negate(): BigInt {\n    return BigInt.tryBigInt(negate(this));\n  }\n\n  plusplus(): BigInt {\n    return BigInt.tryBigInt(increment(this));\n  }\n\n  pow(power: Integer): BigInt {\n    return BigInt.tryBigInt(pow(this, power));\n  }\n\n  remainder(divisor: Integer): BigInt {\n    const R: BigInt = this.divideAndRemainder(divisor)[1];\n    return assign(this, R) as BigInt;\n  }\n\n  set(source: Integer): BigInt {\n    return copy(this, source) as BigInt;\n  }\n\n  setBase(base: number): BigInt {\n    return BigInt.tryBigInt(setBase(this, base));\n  }\n\n  shiftLeft(shifts: Integer): BigInt {\n    return shiftLeft(this, BigInt.tryBigInt(shifts)) as BigInt;\n  }\n\n  shiftRight(shifts: Integer): BigInt {\n    return shiftRight(this, BigInt.tryBigInt(shifts)) as BigInt;\n  }\n\n  signum(): number {\n    return signum(this);\n  }\n\n  square(): BigInt {\n    return BigInt.tryBigInt(square(this));\n  }\n\n  subtract(subtrahend: Integer): BigInt {\n    return BigInt.tryBigInt(subtract(this, subtrahend));\n  }\n\n  toNumber(): number {\n    return toNumber(this);\n  }\n\n  toString(): string {\n    return toString(this);\n  }\n\n  private static tryBigInt(A: Integer): BigInt {\n    return BigInt.isBigInt(A) ? A : assign(BigInt.ZERO, A) as BigInt;\n  }\n}\n","import {halve} from './halve';\nimport {karatsubaSquare} from './karatsubaSquare';\nimport {karatsubaMultiplication} from './karatsubaMultiplication';\n\n/*\n  f(A, B) = A^B = Math.pow(A, B)\n  Overwrites A\n  Overwrites B\n  Assumes A > 0\n  Assumes B > 0\n*/\nexport function exponentiation(\n  A: number[], minA: number, maxA: number, baseA: number,\n  B: number[], minB: number, maxB: number, baseB: number\n): number {\n  let maxC = 1;\n  const C: number[] = [1];\n\n  //Until power is 1\n  while(minB + 1 < maxB || B[minB] > 1){\n\n    //Divide the power in half\n    let remainder: number;\n    [maxB, remainder] = halve(B, minB, maxB, baseB);\n\n    //If remainder\n    if(remainder > 0){\n      C.length = maxC - minA + maxA;\n      maxC = karatsubaMultiplication(C, 0, maxC, A, minA, maxA, baseA);\n    }\n\n    //Square the base\n    maxA = karatsubaSquare(A, minA, maxA, baseA);\n  }\n\n  if(C.length > 1){\n    maxA = karatsubaMultiplication(A, minA, maxA, C, 0, maxC, baseA);\n  }\n\n  return maxA;\n}\n","import {safeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A, B) = A * B\n  Overwrites A\n  Assumes A > 0 and B > 0\n  Assumes A and B are not the same array\n\n  Explanation:\n      a  b  c  _  _  _\n    *\n      d  e  f\n    ------------------\n              cd ce cf\n           bd be bf\n        ad ae af\n    ------------------\n      g  h  i  j  k  l\n\n*/\nexport function longMultiplication(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n\n  //Shift A to the left\n  const lenB: number = maxB - minB;\n  const minC: number = minA + lenB;\n  safeShiftUp(A, minA, maxA, lenB);\n  zero(A, minA, minC);\n\n  //For each digit in multiplicand\n  const maxC: number = maxA + lenB;\n  for(let a: number = minC; a < maxC; ++a){\n    let carry = 0;\n    let i: number = a - lenB;\n\n    //Multiply by multiplier\n    for(let b: number = minB; b < maxB; ++b){\n      let v: number = A[a] * B[b] + A[i] + carry;\n      if(v < base){\n        carry = 0;\n      } else {\n        carry = 0 | (v / base);\n        v = v % base;\n      }\n      A[i++] = v;\n    }\n\n    //Add remaining carry\n    A[i] = carry;\n  }\n\n  //Return new length\n  return (A[maxC - 1] === 0) ? maxC - 1 : maxC;\n}\n","import {unsafeShiftUp} from '../util/arrayUtils';\nimport {zero} from '../util/numUtils';\n\n/*\n  f(A) = A * A\n  Overwrites A\n\n  Explanation:\n      a   b   c   d   e   f   g   _   _   _   _   _   _   _\n    *\n      a   b   c   d   e   f   g\n    -------------------------------------------------------\n                                 ag  bg  cg  dg  eg  fg  gg\n                             af  bf  cf  df  ef  ff  fg\n                         ae  be  ce  de  ee  ef  eg\n                     ad  bd  cd  dd  de  df  dg\n                 ac  bc  cc  cd  ce  cf  cg\n             ab  bb  bc  bd  be  bf  bg\n         aa  ab  ac  ad  ae  af  ag\n    -------------------------------------------------------\n                                2ag 2bg 2cg 2dg 2eg 2fg  gg\n                            2af 2bf 2cf 2df 2ef  ff\n                        2ae 2be 2ce 2de  ee\n                    2ad 2bd 2cd  dd\n                2ac 2bc  cc\n            2ab  bb\n         aa\n    -------------------------------------------------------\n      h   i   j   k   l   m   n   o   p   q   r   s   t   u\n*/\nexport function longSquare(\n  A: number[], min: number, max: number, base: number\n): number {\n\n  //Move digits to the left\n  let newMax: number = max - min;\n  unsafeShiftUp(A, min, max, newMax);\n  zero(A, min, max);\n\n  //For every digit\n  newMax = newMax + max;\n  for(let d: number = min, s: number = max; d < newMax; d = d + 2){\n    const digit: number = A[s++];\n\n    //Square the digit\n    let carry = 0;\n    A[d] = A[d] + digit * digit;\n    if(A[d] >= base){\n      carry = 0 | (A[d] / base);\n      A[d] = A[d] % base;\n    }\n\n    //Multiply by higher digits twice\n    let o: number = d + 1;\n    for(let m: number = s; m < newMax; ++o){\n\n      //Multiply\n      let quotient = 0;\n      let product: number = A[m++] * digit;\n      if(product >= base){\n        quotient = 0 | (product / base);\n        product = product % base;\n      }\n\n      //Double\n      quotient = quotient << 1;\n      product = product << 1;\n\n      //Add\n      A[o] = A[o] + product + carry;\n      carry = quotient;\n      if(A[o] >= base){\n        carry = carry + (0 | (A[o] / base));\n        A[o] = A[o] % base;\n      }\n    }\n\n    //Place remaining carry\n    A[o] = carry;\n  }\n\n  //Return new length\n  return A[newMax - 1] === 0 ? newMax - 1 : newMax;\n}\n","import {basicDivision} from './basicDivision';\nimport {karatsubaMultiplication} from './karatsubaMultiplication';\nimport {steinGCD} from './steinGCD';\n\n/*\n  f(A, B) = lcm(A, B)\n  Overwrites A\n  Asumes A > 0, B > 0\n  See: https://en.wikipedia.org/wiki/Least_common_multiple\n*/\nexport function lcm(\n  A: number[], minA: number, maxA: number,\n  B: number[], minB: number, maxB: number,\n  base: number\n): [number[], number] {\n\n  //Copy A\n  let C: number[] = A.slice(minA, maxA);\n  let maxC: number = C.length;\n\n  //Copy B\n  const D: number[] = B.slice(minB, maxB);\n  const maxD: number = D.length;\n\n  //Get gcd(A, B)\n  [C,,maxC] = steinGCD(C, 0, maxC, D, 0, maxD, base);\n  [C,,maxC] = basicDivision(A, minA, maxA, C, 0, maxC, base);\n  maxC = karatsubaMultiplication(C, 0, maxC, B, minB, maxB, base);\n  return [C, maxC];\n}\n","/*\n  f(A, B) = A / B\n  Overwrites A\n  Assumes B > 0\n  Assumes A > 0\n  Assumes no leading zeros\n*/\nexport function singleDigitDivision(\n  A: number[], minA: number, maxA: number,\n  B: number, base: number\n): [number, number] {\n  let remainder = 0;\n  for(let a: number = maxA; a-- > minA; remainder = remainder % B){\n    remainder = remainder * base + A[a];\n    A[a] = 0 | (remainder / B);\n  }\n\n  //Get new length\n  if(A[maxA - 1] === 0){\n    --maxA;\n  }\n\n  return [maxA, remainder];\n}\n","import {Integer} from '../integer';\nimport {copy} from './copy';\n\nexport function clone(A: Integer) : Integer {\n  return copy({}, A);\n}\n","/*\n  f(A, B) = A - B\n  Overwrites A\n  Assumes B > A\n*/\nexport function reverseSubtraction(\n  A: number[], minA: number, maxA: number,\n  B: ReadonlyArray<number>, minB: number, maxB: number,\n  base: number\n): number {\n\n  //Subtract common digits\n  let borrow = 0;\n  while(minA < maxA){\n    let v: number = B[minB++] - borrow - A[minA];\n    if (v < 0){\n      borrow = 1;\n      v = v + base;\n    } else {\n      borrow = 0;\n    }\n    A[minA++] = v;\n  }\n\n  //Subtract borrow\n  if(borrow > 0){\n    for(borrow = base - 1; B[minB] === 0; ++minB){\n      A[minA++] = borrow;\n    }\n    A[minA++] = B[minB++] - 1;\n  }\n\n  //Copy extra digits\n  if(minB < maxB){\n    do {\n      A[minA++] = B[minB++];\n    } while (minB < maxB);\n\n  //Check for new length\n  } else {\n    while(A[minA-1] === 0){\n      --minA;\n    }\n  }\n\n  return minA;\n}\n","//Assumes valid inputs\nexport function setBase(\n  A: number[], minA: number, maxA: number,\n  curBase: number, newBase: number\n): [number[], number] {\n\n  //If zero or same base\n  if(maxA === minA || curBase === newBase){\n    return [A, maxA];\n  }\n\n  //Create new array\n  let maxB = 0;\n  const B: number[] = new Array(Math.ceil(\n    (maxA - minA) * Math.log(curBase) / Math.log(newBase)\n  ));\n\n  //Return number in newBase\n  do {\n    let remainder = 0;\n    for(let i: number = maxA; i > minA; remainder = remainder % newBase){\n      remainder = remainder*curBase + A[--i];\n      A[i] = 0 | (remainder / newBase);\n    }\n    B[maxB++] = remainder;\n    while(A[maxA - 1] === 0){\n      if(--maxA === minA){\n        return [B, maxB];\n      }\n    }\n  } while(true);\n}\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","module.exports = require('./_hide');\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = function () { /* empty */ };\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };","//Globals\nexport {Globals as __globals__} from './globals';\n\n//Functional\nexport {abs} from './functional/abs';\nexport {add} from './functional/add';\nexport {clone} from './functional/clone';\nexport {compare} from './functional/compare';\nexport {copy} from './functional/copy';\nexport {decrement} from './functional/decrement';\nexport {divideAndRemainder} from './functional/divideAndRemainder';\nexport {double} from './functional/double';\nexport {gcd} from './functional/gcd';\nexport {halve} from './functional/halve';\nexport {increment} from './functional/increment';\nexport {isEven} from './functional/isEven';\nexport {isInteger} from './functional/isInteger';\nexport {lcm} from './functional/lcm';\nexport {max} from './functional/max';\nexport {min} from './functional/min';\nexport {multiply} from './functional/multiply';\nexport {negate} from './functional/negate';\nexport {pow} from './functional/pow';\nexport {setBase} from './functional/setBase';\nexport {shiftLeft} from './functional/shiftLeft';\nexport {shiftRight} from './functional/shiftRight';\nexport {signum} from './functional/signum';\nexport {square} from './functional/square';\nexport {subtract} from './functional/subtract';\nexport {toInteger} from './functional/toInteger';\nexport {toNumber} from './functional/toNumber';\nexport {toString} from './functional/toString';\n\n//OOP\nexport {BigInt as Int} from './oop/bigInt';\n"],"sourceRoot":""}